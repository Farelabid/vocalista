{
  "components": {
    "responses": {},
    "schemas": {
      "ForLocationSearchWarehouse": {
        "properties": {
          "business": {
            "properties": {
              "id": {
                "description": "Business ID",
                "type": "integer"
              },
              "username": {
                "description": "Username of the business",
                "type": "string"
              }
            },
            "title": "BusinessUsernameOnly",
            "type": "object"
          },
          "id": {
            "description": "Warehouse ID",
            "type": "integer"
          },
          "lincah_origin_id": {
            "description": "Lincah origin ID for the warehouse",
            "type": "string"
          },
          "mengantar_origin_id": {
            "description": "Mengantar origin ID for the warehouse",
            "type": "string"
          },
          "name": {
            "description": "Name of the warehouse",
            "type": "string"
          },
          "unique_id": {
            "description": "Unique identifier of the warehouse",
            "type": "string"
          },
          "warehouse_address": {
            "properties": {
              "address": {
                "description": "Full address of the warehouse",
                "type": "string"
              },
              "city": {
                "description": "City of the warehouse address",
                "type": "string"
              },
              "id": {
                "description": "Warehouse Address ID",
                "type": "integer"
              },
              "location": {
                "description": "Location ID for the address",
                "type": "integer"
              },
              "postal_code": {
                "description": "Postal code of the warehouse address",
                "type": "string"
              },
              "province": {
                "description": "Province of the warehouse address",
                "type": "string"
              },
              "subdistrict": {
                "description": "Subdistrict of the warehouse address",
                "type": "string"
              }
            },
            "title": "WarehouseAddressLocationData",
            "type": "object"
          }
        },
        "title": "ForLocationSearchWarehouse",
        "type": "object"
      },
      "CreateUpdateFollowUpChatRequest": {
        "properties": {
          "change_status": {
            "description": "Triggered after order status change to this status",
            "type": "boolean"
          },
          "hours_after": {
            "description": "Hours after which the follow up chat is triggered",
            "type": "integer"
          },
          "image": {
            "description": "Image URL for the follow up chat",
            "format": "uri",
            "type": "string"
          },
          "is_default": {
            "description": "Is this a default follow up chat?",
            "type": "boolean"
          },
          "name": {
            "description": "Name of the follow up chat",
            "type": "string"
          },
          "provider": {
            "description": "Provider of the follow up chat",
            "type": "string"
          },
          "text_for_bank_transfer": {
            "description": "Text for bank transfer",
            "type": "string"
          },
          "text_for_cod": {
            "description": "Text for cash on delivery",
            "type": "string"
          },
          "text_for_epayment": {
            "description": "Text for e-payments",
            "type": "string"
          },
          "trigger": {
            "description": "Trigger condition for the follow up chat",
            "type": "string"
          },
          "wa_gateway_assignation_type": {
            "description": "WhatsApp gateway assignation type",
            "type": "string"
          },
          "wa_integration_id": {
            "description": "WhatsApp integration ID",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "provider"
        ],
        "title": "CreateUpdateFollowUpChatRequest",
        "type": "object"
      },
      "OrderAddress": {
        "properties": {
          "address": {
            "description": "Full address",
            "type": "string"
          },
          "city": {
            "description": "City of the address",
            "type": "string"
          },
          "id": {
            "description": "Order Address ID",
            "type": "integer"
          },
          "location": {
            "description": "Location ID for the address",
            "type": "integer"
          },
          "name": {
            "description": "Name of the recipient",
            "type": "string"
          },
          "phone": {
            "description": "Phone number of the recipient",
            "type": "string"
          },
          "postal_code": {
            "description": "Postal code of the address",
            "type": "string"
          },
          "province": {
            "description": "Province of the address",
            "type": "string"
          },
          "subdistrict": {
            "description": "Subdistrict of the address",
            "type": "string"
          }
        },
        "title": "OrderAddress",
        "type": "object"
      },
      "BundlePriceOptionSimple": {
        "properties": {
          "id": {
            "description": "Bundle Price Option ID",
            "type": "integer"
          },
          "is_owned_by_store": {
            "description": "Is owned by store",
            "type": "boolean"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "price": {
            "description": "Price (including tax)",
            "format": "float",
            "type": "number"
          },
          "price_bt": {
            "description": "Price before tax",
            "format": "float",
            "type": "number"
          },
          "slug": {
            "description": "Slug",
            "type": "string"
          },
          "unique_id": {
            "description": "Bundle Price Option Unique ID",
            "type": "string"
          }
        },
        "title": "BundlePriceOptionSimple",
        "type": "object"
      },
      "MailketingList": {
        "properties": {
          "id": {
            "description": "Mailketing List ID",
            "type": "integer"
          },
          "list": {
            "description": "Mailketing List Name",
            "type": "string"
          },
          "list_name": {
            "description": "Mailketing List Name",
            "type": "string"
          }
        },
        "title": "MailketingList",
        "type": "object"
      },
      "EnabledEpayments": {
        "properties": {
          "payment_methods": {
            "description": "List of enabled payment methods",
            "items": {
              "description": "Order e-payment method",
              "enum": [
                "gopay",
                "va",
                "qris",
                "card",
                "invoice",
                "alfamart",
                "ovo",
                "dana",
                "shopeepay",
                "linkaja"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "vas": {
            "description": "List of enabled bank virtual accounts",
            "items": {
              "description": "Xendit VA bank code",
              "enum": [
                "BCA",
                "BNI",
                "BRI",
                "MANDIRI",
                "PERMATA",
                "BSI",
                "BJB",
                "CIMB",
                "SAHABAT_SAMPOERNA",
                "ARTAJASA"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "EnabledEpayments",
        "type": "object"
      },
      "BundlePriceOptionForStoreRelation": {
        "properties": {
          "bundle_id": {
            "description": "Bundle ID",
            "type": "integer"
          },
          "id": {
            "description": "Bundle Price Option ID",
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "pages": {
            "properties": {
              "all": {
                "items": {
                  "properties": {
                    "business": {
                      "properties": {
                        "account_holder": {
                          "description": "Name of the account holder",
                          "type": "string"
                        },
                        "email": {
                          "description": "Email address of the business",
                          "format": "email",
                          "type": "string"
                        },
                        "id": {
                          "description": "Business ID",
                          "type": "integer"
                        },
                        "is_banned": {
                          "description": "Is the business banned?",
                          "type": "boolean"
                        },
                        "logo": {
                          "description": "URL to the business logo",
                          "format": "uri",
                          "type": "string"
                        },
                        "unique_id": {
                          "description": "Unique identifier for the business",
                          "type": "string"
                        },
                        "username": {
                          "description": "Username of the business",
                          "type": "string"
                        }
                      },
                      "title": "BusinessSimple",
                      "type": "object"
                    },
                    "id": {
                      "description": "Page ID",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Name of the page",
                      "type": "string"
                    },
                    "slug": {
                      "description": "Slug for the page URL",
                      "type": "string"
                    },
                    "unique_id": {
                      "description": "Unique identifier for the page",
                      "type": "string"
                    }
                  },
                  "title": "PageRelation",
                  "type": "object"
                },
                "type": "array"
              },
              "will_unpublish": {
                "items": {
                  "properties": {
                    "business": {
                      "properties": {
                        "account_holder": {
                          "description": "Name of the account holder",
                          "type": "string"
                        },
                        "email": {
                          "description": "Email address of the business",
                          "format": "email",
                          "type": "string"
                        },
                        "id": {
                          "description": "Business ID",
                          "type": "integer"
                        },
                        "is_banned": {
                          "description": "Is the business banned?",
                          "type": "boolean"
                        },
                        "logo": {
                          "description": "URL to the business logo",
                          "format": "uri",
                          "type": "string"
                        },
                        "unique_id": {
                          "description": "Unique identifier for the business",
                          "type": "string"
                        },
                        "username": {
                          "description": "Username of the business",
                          "type": "string"
                        }
                      },
                      "title": "BusinessSimple",
                      "type": "object"
                    },
                    "id": {
                      "description": "Page ID",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Name of the page",
                      "type": "string"
                    },
                    "slug": {
                      "description": "Slug for the page URL",
                      "type": "string"
                    },
                    "unique_id": {
                      "description": "Unique identifier for the page",
                      "type": "string"
                    }
                  },
                  "title": "PageRelation",
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "slug": {
            "description": "Slug",
            "type": "string"
          },
          "unique_id": {
            "description": "Bundle Price Option Unique ID",
            "type": "string"
          }
        },
        "title": "BundlePriceOptionForStoreRelation",
        "type": "object"
      },
      "SimpleForOrderStore": {
        "properties": {
          "business": {
            "properties": {
              "account_holder": {
                "description": "Name of the account holder",
                "type": "string"
              },
              "email": {
                "description": "Email address of the business",
                "format": "email",
                "type": "string"
              },
              "id": {
                "description": "Business ID",
                "type": "integer"
              },
              "is_banned": {
                "description": "Is the business banned?",
                "type": "boolean"
              },
              "logo": {
                "description": "URL to the business logo",
                "format": "uri",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique identifier for the business",
                "type": "string"
              },
              "username": {
                "description": "Username of the business",
                "type": "string"
              }
            },
            "title": "BusinessSimple",
            "type": "object"
          },
          "id": {
            "description": "Store ID",
            "type": "integer"
          },
          "name": {
            "description": "Name of the store",
            "type": "string"
          },
          "unique_id": {
            "description": "Unique identifier for the store",
            "type": "string"
          },
          "uuid": {
            "description": "UUID of the store",
            "type": "string"
          }
        },
        "title": "SimpleForOrderStore",
        "type": "object"
      },
      "ShippingCostRequest": {
        "description": "Schema for requesting shipping cost",
        "properties": {
          "courier_codes": {
            "description": "List of courier codes",
            "items": {
              "description": "Schema for a courier code",
              "enum": [
                "ninja",
                "ide",
                "sicepat",
                "sap",
                "ncs",
                "anteraja",
                "sentral",
                "jne",
                "jnt",
                "pos",
                "lion",
                "rex",
                "jtl",
                "tiki",
                "rpx",
                "pandu",
                "wahana",
                "pahala",
                "jet",
                "slis",
                "dse",
                "first",
                "star",
                "idl"
              ],
              "example": "jne",
              "title": "CourierCode",
              "type": "string"
            },
            "type": "array"
          },
          "location_id": {
            "description": "ID of the destination location",
            "type": "integer"
          },
          "postal_code": {
            "description": "Postal code of the destination",
            "type": "string"
          },
          "warehouse_id": {
            "description": "ID of the warehouse",
            "type": "integer"
          },
          "weight": {
            "description": "Weight of the shipment in grams",
            "type": "integer"
          }
        },
        "required": [
          "courier_codes",
          "weight",
          "warehouse_id",
          "location_id"
        ],
        "title": "ShippingCostRequest",
        "type": "object"
      },
      "BundleLine": {
        "properties": {
          "id": {
            "description": "Bundle Line ID",
            "type": "integer"
          },
          "quantity": {
            "description": "Quantity of the variant in the bundle line",
            "type": "integer"
          },
          "subtotal": {
            "description": "Subtotal price for the bundle line (variant price * quantity)",
            "format": "decimal",
            "type": "string"
          },
          "variant": {
            "properties": {
              "cogs": {
                "description": "Cost of Goods Sold",
                "type": "number"
              },
              "cogs_bt": {
                "description": "Cost of Goods Sold before tax",
                "type": "number"
              },
              "created_at": {
                "description": "Timestamp when the variant was created",
                "format": "date-time",
                "type": "string"
              },
              "digital_product_files": {
                "description": "List of digital product files associated with the variant",
                "items": {
                  "properties": {
                    "content_type": {
                      "description": "MIME type of the digital product file",
                      "type": "string"
                    },
                    "id": {
                      "description": "Digital product file primary key",
                      "type": "integer"
                    },
                    "name": {
                      "description": "File name of the digital product file",
                      "type": "string"
                    },
                    "size_in_bytes": {
                      "description": "Size of the digital product file in bytes",
                      "type": "integer"
                    },
                    "url": {
                      "description": "URL to access the digital product file",
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "title": "DigitalProductFile",
                  "type": "object"
                },
                "type": "array"
              },
              "display": {
                "description": "Display name for the variant",
                "type": "string"
              },
              "fullname": {
                "description": "Full name of the variant",
                "type": "string"
              },
              "id": {
                "description": "Variant primary key",
                "type": "integer"
              },
              "images": {
                "description": "List of image URLs associated with the variant",
                "items": {
                  "format": "uri",
                  "type": "string"
                },
                "type": "array"
              },
              "is_checked": {
                "description": "Mark variant as sellable",
                "type": "boolean"
              },
              "is_editable": {
                "description": "Indicates if the variant is editable",
                "type": "boolean"
              },
              "item_type": {
                "description": "Type of the product item",
                "enum": [
                  "physical",
                  "digital",
                  "course"
                ],
                "type": "string"
              },
              "last_updated_at": {
                "description": "Timestamp when the variant was last updated",
                "format": "date-time",
                "type": "string"
              },
              "metadata": {
                "additionalProperties": true,
                "description": "Additional metadata associated with the variant",
                "type": "object"
              },
              "name": {
                "description": "Full name of the variant",
                "type": "string"
              },
              "option1_value": {
                "description": "Value of the first product option",
                "type": "string"
              },
              "option2_value": {
                "description": "Value of the second product option",
                "type": "string"
              },
              "option3_value": {
                "description": "Value of the third product option",
                "type": "string"
              },
              "price": {
                "description": "Price of the variant",
                "type": "number"
              },
              "price_bt": {
                "description": "Price before tax",
                "type": "number"
              },
              "product": {
                "properties": {
                  "business": {
                    "properties": {
                      "account_holder": {
                        "description": "Name of the account holder",
                        "type": "string"
                      },
                      "email": {
                        "description": "Email address of the business",
                        "format": "email",
                        "type": "string"
                      },
                      "id": {
                        "description": "Business ID",
                        "type": "integer"
                      },
                      "is_banned": {
                        "description": "Is the business banned?",
                        "type": "boolean"
                      },
                      "logo": {
                        "description": "URL to the business logo",
                        "format": "uri",
                        "type": "string"
                      },
                      "unique_id": {
                        "description": "Unique identifier for the business",
                        "type": "string"
                      },
                      "username": {
                        "description": "Username of the business",
                        "type": "string"
                      }
                    },
                    "title": "BusinessSimple",
                    "type": "object"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "display": {
                    "description": "Product name for display",
                    "type": "string"
                  },
                  "id": {
                    "description": "Product ID",
                    "type": "integer"
                  },
                  "is_inventory": {
                    "description": "Is Inventory",
                    "type": "boolean"
                  },
                  "is_multiple": {
                    "description": "Is Multiple",
                    "type": "boolean"
                  },
                  "is_product_sharing": {
                    "description": "Is Product Sharing",
                    "type": "boolean"
                  },
                  "item_type": {
                    "description": "Type of the product item",
                    "enum": [
                      "physical",
                      "digital",
                      "course"
                    ],
                    "title": "ItemType",
                    "type": "string"
                  },
                  "item_type_name": {
                    "description": "Item Type Name",
                    "type": "string"
                  },
                  "name": {
                    "description": "Product Name",
                    "type": "string"
                  },
                  "option1_name": {
                    "description": "Option 1 Name",
                    "type": "string"
                  },
                  "option2_name": {
                    "description": "Option 2 Name",
                    "type": "string"
                  },
                  "option3_name": {
                    "description": "Option 3 Name",
                    "type": "string"
                  },
                  "uuid": {
                    "description": "Product UUID",
                    "type": "string"
                  }
                },
                "title": "Product",
                "type": "object"
              },
              "product_name": {
                "description": "Name of the associated product",
                "type": "string"
              },
              "reseller_price": {
                "description": "Reseller price of the variant",
                "type": "number"
              },
              "reseller_price_bt": {
                "description": "Reseller price before tax",
                "type": "number"
              },
              "self_file_urls": {
                "description": "List of self file URLs associated with the variant",
                "items": {
                  "format": "uri",
                  "type": "string"
                },
                "type": "array"
              },
              "sku": {
                "description": "Stock Keeping Unit",
                "type": "string"
              },
              "unique_id": {
                "description": "Variant unique identifier",
                "type": "string"
              },
              "uuid": {
                "description": "Variant UUID",
                "type": "string"
              },
              "weight": {
                "description": "Weight of the variant in grams",
                "type": "integer"
              }
            },
            "title": "Variant",
            "type": "object"
          }
        },
        "title": "BundleLine",
        "type": "object"
      },
      "BusinessSimple": {
        "properties": {
          "account_holder": {
            "description": "Name of the account holder",
            "type": "string"
          },
          "email": {
            "description": "Email address of the business",
            "format": "email",
            "type": "string"
          },
          "id": {
            "description": "Business ID",
            "type": "integer"
          },
          "is_banned": {
            "description": "Is the business banned?",
            "type": "boolean"
          },
          "logo": {
            "description": "URL to the business logo",
            "format": "uri",
            "type": "string"
          },
          "unique_id": {
            "description": "Unique identifier for the business",
            "type": "string"
          },
          "username": {
            "description": "Username of the business",
            "type": "string"
          }
        },
        "title": "BusinessSimple",
        "type": "object"
      },
      "BirdsendSequence": {
        "properties": {
          "active": {
            "description": "Indicates if the Birdsend sequence is active",
            "type": "boolean"
          },
          "form_id": {
            "description": "Identifier of the associated form",
            "type": "integer"
          },
          "id": {
            "description": "Birdsend sequence primary key",
            "type": "integer"
          },
          "name": {
            "description": "Name of the Birdsend sequence",
            "type": "string"
          },
          "sequence_id": {
            "description": "Identifier of the associated sequence",
            "type": "integer"
          },
          "type": {
            "description": "Type of the Birdsend sequence (either 'sequence' or 'form')",
            "enum": [
              "sequence",
              "form"
            ],
            "type": "string"
          }
        },
        "title": "BirdsendSequence",
        "type": "object"
      },
      "UploadReceipt": {
        "properties": {
          "id": {
            "description": "Order primary key",
            "type": "integer"
          },
          "order_id": {
            "description": "Order ID in string format",
            "type": "string"
          },
          "shipment_receipt": {
            "description": "Shipment receipt URL",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "UploadReceipt",
        "type": "object"
      },
      "DomainStore": {
        "properties": {
          "custom_domain": {
            "properties": {
              "full_url": {
                "description": "Full URL",
                "format": "uri",
                "type": "string"
              },
              "id": {
                "description": "Custom Domain ID",
                "type": "integer"
              },
              "is_verified": {
                "description": "Is Verified",
                "type": "boolean"
              }
            },
            "title": "SimpleCustomDomain",
            "type": "object"
          },
          "id": {
            "description": "Store ID",
            "type": "integer"
          },
          "name": {
            "description": "Store name",
            "type": "string"
          }
        },
        "title": "DomainStore",
        "type": "object"
      },
      "BusinessUsernameOnly": {
        "properties": {
          "id": {
            "description": "Business ID",
            "type": "integer"
          },
          "username": {
            "description": "Username of the business",
            "type": "string"
          }
        },
        "title": "BusinessUsernameOnly",
        "type": "object"
      },
      "Warehouse": {
        "properties": {
          "business": {
            "properties": {
              "account_holder": {
                "description": "Name of the account holder",
                "type": "string"
              },
              "email": {
                "description": "Email address of the business",
                "format": "email",
                "type": "string"
              },
              "id": {
                "description": "Business ID",
                "type": "integer"
              },
              "is_banned": {
                "description": "Is the business banned?",
                "type": "boolean"
              },
              "logo": {
                "description": "URL to the business logo",
                "format": "uri",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique identifier for the business",
                "type": "string"
              },
              "username": {
                "description": "Username of the business",
                "type": "string"
              }
            },
            "title": "BusinessSimple",
            "type": "object"
          },
          "contact_name": {
            "description": "Contact name at the warehouse",
            "type": "string"
          },
          "contact_phone": {
            "description": "Contact phone number at the warehouse",
            "type": "string"
          },
          "id": {
            "description": "Warehouse ID",
            "type": "integer"
          },
          "name": {
            "description": "Name of the warehouse",
            "type": "string"
          },
          "warehouse_address": {
            "properties": {
              "address": {
                "description": "Full address of the warehouse",
                "type": "string"
              },
              "city": {
                "description": "City of the warehouse address",
                "type": "string"
              },
              "id": {
                "description": "Warehouse Address ID",
                "type": "integer"
              },
              "location_id": {
                "description": "Location ID for the address",
                "type": "integer"
              },
              "postal_code": {
                "description": "Postal code of the warehouse address",
                "type": "string"
              },
              "province": {
                "description": "Province of the warehouse address",
                "type": "string"
              },
              "subdistrict": {
                "description": "Subdistrict of the warehouse address",
                "type": "string"
              }
            },
            "title": "WarehouseAddressSimple",
            "type": "object"
          }
        },
        "title": "Warehouse",
        "type": "object"
      },
      "BundleCreateRequest": {
        "properties": {
          "bundle_price_options": {
            "description": "List of Bundle Price Options",
            "items": {
              "properties": {
                "name": {
                  "description": "Name",
                  "type": "string"
                },
                "price": {
                  "description": "Price (including tax)",
                  "format": "float",
                  "type": "number"
                },
                "slug": {
                  "description": "Slug",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "price"
              ],
              "title": "BundlePriceOptionRequest",
              "type": "object"
            },
            "type": "array"
          },
          "bundlelines": {
            "description": "List of Bundle Lines",
            "items": {
              "properties": {
                "quantity": {
                  "description": "Quantity of the variant in the bundle line",
                  "type": "integer"
                },
                "variant_id": {
                  "description": "Variant ID",
                  "type": "integer"
                }
              },
              "required": [
                "variant_id",
                "quantity"
              ],
              "title": "BundleLineCreateRequest",
              "type": "object"
            },
            "type": "array"
          },
          "custom_id": {
            "description": "Custom Identifier",
            "type": "string"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "images": {
            "description": "List of Image URLs",
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "meta_thumbnail": {
            "description": "Meta Thumbnail URL",
            "format": "uri",
            "type": "string"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "public_name": {
            "description": "Public Name",
            "type": "string"
          },
          "rich_description": {
            "description": "Rich Description",
            "type": "string"
          },
          "weight_bump": {
            "description": "Weight Bump",
            "type": "integer"
          }
        },
        "required": [
          "name"
        ],
        "title": "BundleCreateRequest",
        "type": "object"
      },
      "TriggerPurchase": {
        "properties": {
          "kwai": {
            "additionalProperties": true,
            "description": "Kwai purchase trigger response",
            "type": "object"
          },
          "meta": {
            "additionalProperties": true,
            "description": "Meta purchase trigger response",
            "type": "object"
          },
          "tiktok": {
            "additionalProperties": true,
            "description": "TikTok purchase trigger response",
            "type": "object"
          }
        },
        "title": "TriggerPurchase",
        "type": "object"
      },
      "BundlePriceOptionRequest": {
        "properties": {
          "name": {
            "description": "Name",
            "type": "string"
          },
          "price": {
            "description": "Price (including tax)",
            "format": "float",
            "type": "number"
          },
          "slug": {
            "description": "Slug",
            "type": "string"
          }
        },
        "required": [
          "name",
          "price"
        ],
        "title": "BundlePriceOptionRequest",
        "type": "object"
      },
      "OrderChangeStatusBody": {
        "anyOf": [
          {
            "required": [
              "ids",
              "status"
            ]
          },
          {
            "required": [
              "ids",
              "payment_status"
            ]
          }
        ],
        "properties": {
          "by": {
            "description": "Entity or user performing the status change",
            "nullable": true,
            "type": "string"
          },
          "financial_entity_id": {
            "description": "Financial entity ID",
            "nullable": true,
            "type": "integer"
          },
          "ids": {
            "items": {
              "description": "Order primary key IDs",
              "type": "integer"
            },
            "type": "array"
          },
          "payment_account_holder": {
            "description": "Payment account holder name",
            "nullable": true,
            "type": "string"
          },
          "payment_account_number": {
            "description": "Payment account number",
            "nullable": true,
            "type": "string"
          },
          "payment_method": {
            "description": "Order payment method",
            "enum": [
              "gopay",
              "va",
              "qris",
              "card",
              "invoice",
              "alfamart",
              "ovo",
              "dana",
              "shopeepay",
              "linkaja",
              "no_payment",
              "bank_transfer",
              "marketplace",
              "cod"
            ],
            "type": "string"
          },
          "payment_status": {
            "description": "Order payment status",
            "enum": [
              "unpaid",
              "paid",
              "conflict",
              "settled"
            ],
            "type": "string"
          },
          "rtsproof_url": {
            "description": "Return to sender proof image URL",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Order status",
            "enum": [
              "draft",
              "pending",
              "confirmed",
              "in_process",
              "ready",
              "shipped",
              "completed",
              "canceled",
              "rts",
              "closed"
            ],
            "type": "string"
          },
          "transfer_time": {
            "description": "Transfer timestamp (ISO 8601 format)",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "transferproof_url": {
            "description": "Transfer proof image URL",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "OrderChangeStatusBody",
        "type": "object"
      },
      "Order": {
        "properties": {
          "gross_revenue_for_dropshipper": {
            "description": "Gross revenue for dropshipper after discounts",
            "format": "decimal",
            "type": "string"
          },
          "advertiser": {
            "properties": {
              "aff_code": {
                "description": "Affiliate code of the user",
                "type": "string"
              },
              "avatar": {
                "description": "URL to user avatar",
                "format": "uri",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "format": "email",
                "type": "string"
              },
              "fullname": {
                "description": "User full name",
                "type": "string"
              },
              "id": {
                "description": "User ID",
                "type": "integer"
              },
              "phone": {
                "description": "User phone number",
                "type": "string"
              }
            },
            "title": "UserSimple",
            "type": "object"
          },
          "cogs": {
            "description": "Cost of goods sold for the order",
            "format": "decimal",
            "type": "string"
          },
          "dropshipper_name": {
            "description": "Name of the dropshipper",
            "nullable": true,
            "type": "string"
          },
          "transferproof_url": {
            "description": "Transfer proof URL",
            "nullable": true,
            "type": "string"
          },
          "scalev_fee": {
            "description": "Scalev fee for the order",
            "format": "decimal",
            "type": "string"
          },
          "shipment_status_history": {
            "items": {
              "properties": {
                "description": {
                  "description": "Description of the status update",
                  "type": "string"
                },
                "status": {
                  "description": "Current status of the shipment",
                  "type": "string"
                },
                "timestamp": {
                  "description": "Timestamp of the status update",
                  "format": "date-time",
                  "type": "string"
                },
                "timestamp_source": {
                  "description": "Source of the timestamp",
                  "type": "string"
                }
              },
              "title": "ShipmentStatusHistory",
              "type": "object"
            },
            "type": "array"
          },
          "discount_code_code": {
            "description": "Discount code used in the order",
            "nullable": true,
            "type": "string"
          },
          "ready_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "warehouse": {
            "properties": {
              "business": {
                "properties": {
                  "account_holder": {
                    "description": "Name of the account holder",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email address of the business",
                    "format": "email",
                    "type": "string"
                  },
                  "id": {
                    "description": "Business ID",
                    "type": "integer"
                  },
                  "is_banned": {
                    "description": "Is the business banned?",
                    "type": "boolean"
                  },
                  "logo": {
                    "description": "URL to the business logo",
                    "format": "uri",
                    "type": "string"
                  },
                  "unique_id": {
                    "description": "Unique identifier for the business",
                    "type": "string"
                  },
                  "username": {
                    "description": "Username of the business",
                    "type": "string"
                  }
                },
                "title": "BusinessSimple",
                "type": "object"
              },
              "contact_name": {
                "description": "Contact name at the warehouse",
                "type": "string"
              },
              "contact_phone": {
                "description": "Contact phone number at the warehouse",
                "type": "string"
              },
              "id": {
                "description": "Warehouse ID",
                "type": "integer"
              },
              "name": {
                "description": "Name of the warehouse",
                "type": "string"
              }
            },
            "title": "ForOrderWarehouse",
            "type": "object"
          },
          "payment_fee_rate": {
            "description": "Payment fee rate applied to the order",
            "format": "decimal",
            "type": "string"
          },
          "pg_paid_info": {
            "additionalProperties": true,
            "description": "Payment gateway paid info",
            "nullable": true,
            "type": "object"
          },
          "transfer_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "dropshipper_phone": {
            "description": "Phone number of the dropshipper",
            "nullable": true,
            "type": "string"
          },
          "shipping_cost": {
            "description": "Shipping cost for the order",
            "format": "decimal",
            "type": "string"
          },
          "product_price": {
            "description": "Total product price before discounts",
            "format": "decimal",
            "type": "string"
          },
          "total_quantity": {
            "description": "Total quantity of items in the order",
            "type": "integer"
          },
          "net_revenue": {
            "description": "Net revenue after all discounts and fees",
            "format": "decimal",
            "type": "string"
          },
          "bundle_price_options": {
            "additionalProperties": true,
            "description": "Bundle price options for the order",
            "nullable": true,
            "type": "object"
          },
          "customer": {
            "properties": {
              "confirmed_at": {
                "description": "Confirmation timestamp",
                "format": "date-time",
                "type": "string"
              },
              "created_at": {
                "description": "Creation timestamp",
                "format": "date-time",
                "type": "string"
              },
              "email": {
                "description": "Customer email",
                "format": "email",
                "type": "string"
              },
              "id": {
                "description": "Customer ID",
                "type": "integer"
              },
              "last_updated_at": {
                "description": "Last update timestamp",
                "format": "date-time",
                "type": "string"
              },
              "name": {
                "description": "Customer name",
                "type": "string"
              },
              "phone": {
                "description": "Customer phone number",
                "type": "string"
              },
              "status": {
                "description": "Customer status",
                "type": "string"
              }
            },
            "title": "CustomerOrder",
            "type": "object"
          },
          "variants": {
            "additionalProperties": true,
            "description": "Variants of the order",
            "nullable": true,
            "type": "object"
          },
          "chat_message": {
            "description": "Chat message associated with the order",
            "type": "string"
          },
          "handler_phone": {
            "description": "Handler phone number",
            "nullable": true,
            "type": "string"
          },
          "business": {
            "properties": {
              "account_holder": {
                "description": "Name of the account holder",
                "type": "string"
              },
              "email": {
                "description": "Email address of the business",
                "format": "email",
                "type": "string"
              },
              "id": {
                "description": "Business ID",
                "type": "integer"
              },
              "is_banned": {
                "description": "Is the business banned?",
                "type": "boolean"
              },
              "logo": {
                "description": "URL to the business logo",
                "format": "uri",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique identifier for the business",
                "type": "string"
              },
              "username": {
                "description": "Username of the business",
                "type": "string"
              }
            },
            "title": "BusinessSimple",
            "type": "object"
          },
          "order_emails": {
            "description": "Order emails associated with the order",
            "items": {
              "properties": {
                "from": {
                  "description": "Sender email address",
                  "type": "string"
                },
                "id": {
                  "description": "Order email ID",
                  "type": "integer"
                },
                "inserted_at": {
                  "description": "Email creation timestamp",
                  "format": "date-time",
                  "type": "string"
                },
                "message_id": {
                  "description": "Message ID of the email",
                  "type": "string"
                },
                "order_id": {
                  "description": "Associated order primary key",
                  "type": "integer"
                },
                "status": {
                  "description": "Email status",
                  "type": "string"
                },
                "status_history": {
                  "items": {
                    "properties": {
                      "status": {
                        "description": "Email status",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "Timestamp of the status change",
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "subject": {
                  "description": "Email subject",
                  "type": "string"
                },
                "to": {
                  "description": "Recipient email address",
                  "type": "string"
                },
                "type": {
                  "description": "Type of the email",
                  "type": "string"
                },
                "updated_at": {
                  "description": "Last update timestamp of the email",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "title": "OrderEmail",
              "type": "object"
            },
            "type": "array"
          },
          "order_id": {
            "description": "Order ID in string format",
            "type": "string"
          },
          "product_discount": {
            "description": "Total product discount applied",
            "format": "decimal",
            "type": "string"
          },
          "last_updated_by": {
            "properties": {
              "aff_code": {
                "description": "Affiliate code of the user",
                "type": "string"
              },
              "avatar": {
                "description": "URL to user avatar",
                "format": "uri",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "format": "email",
                "type": "string"
              },
              "fullname": {
                "description": "User full name",
                "type": "string"
              },
              "id": {
                "description": "User ID",
                "type": "integer"
              },
              "phone": {
                "description": "User phone number",
                "type": "string"
              }
            },
            "title": "UserSimple",
            "type": "object"
          },
          "handler": {
            "properties": {
              "aff_code": {
                "description": "Affiliate code of the user",
                "type": "string"
              },
              "avatar": {
                "description": "URL to user avatar",
                "format": "uri",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "format": "email",
                "type": "string"
              },
              "fullname": {
                "description": "User full name",
                "type": "string"
              },
              "id": {
                "description": "User ID",
                "type": "integer"
              },
              "phone": {
                "description": "User phone number",
                "type": "string"
              }
            },
            "title": "UserSimple",
            "type": "object"
          },
          "payment_account_number": {
            "description": "Payment account number",
            "nullable": true,
            "type": "string"
          },
          "payment_method": {
            "description": "Order payment method",
            "enum": [
              "gopay",
              "va",
              "qris",
              "card",
              "invoice",
              "alfamart",
              "ovo",
              "dana",
              "shopeepay",
              "linkaja",
              "no_payment",
              "bank_transfer",
              "marketplace",
              "cod"
            ],
            "type": "string"
          },
          "courier": {
            "description": "Courier ID for the order",
            "nullable": true,
            "type": "integer"
          },
          "origin_address": {
            "properties": {
              "address": {
                "description": "Full address of the warehouse",
                "type": "string"
              },
              "city": {
                "description": "City of the warehouse address",
                "type": "string"
              },
              "id": {
                "description": "Warehouse Address ID",
                "type": "integer"
              },
              "location": {
                "description": "Location ID for the address",
                "type": "integer"
              },
              "location_id": {
                "description": "Location ID for the address",
                "type": "integer"
              },
              "postal_code": {
                "description": "Postal code of the warehouse address",
                "type": "string"
              },
              "province": {
                "description": "Province of the warehouse address",
                "type": "string"
              },
              "subdistrict": {
                "description": "Subdistrict of the warehouse address",
                "type": "string"
              },
              "warehouse": {
                "description": "ID of the associated warehouse",
                "type": "integer"
              }
            },
            "title": "WarehouseAddress",
            "type": "object"
          },
          "epayment_provider": {
            "description": "E-payment provider",
            "nullable": true,
            "type": "string"
          },
          "in_process_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "pg_reference_id": {
            "description": "Payment gateway reference ID",
            "nullable": true,
            "type": "string"
          },
          "weight_bump": {
            "description": "Weight bump added to the order",
            "format": "decimal",
            "type": "string"
          },
          "follow_up_chat_type": {
            "description": "Type of follow-up chat for the order",
            "nullable": true,
            "type": "string"
          },
          "awb_status": {
            "description": "Order AWB status",
            "enum": [
              "unavailable",
              "pending",
              "waiting",
              "failed",
              "created",
              "canceled"
            ],
            "type": "string"
          },
          "platform": {
            "description": "Platform of the order",
            "type": "string"
          },
          "follow_up_chats": {
            "items": {
              "properties": {
                "bundle_id": {
                  "description": "Bundle ID associated with the chat",
                  "type": "integer"
                },
                "change_status": {
                  "description": "Change status after follow up chat",
                  "type": "boolean"
                },
                "hours_after": {
                  "description": "Hours after which the follow up chat is triggered",
                  "type": "integer"
                },
                "id": {
                  "description": "Follow Up Chat ID",
                  "type": "integer"
                },
                "image": {
                  "description": "Image URL for the follow up chat",
                  "format": "uri",
                  "type": "string"
                },
                "is_default": {
                  "description": "Is this a default follow up chat?",
                  "type": "boolean"
                },
                "name": {
                  "description": "Name of the follow up chat",
                  "type": "string"
                },
                "product_id": {
                  "description": "Product ID associated with the chat",
                  "type": "integer"
                },
                "provider": {
                  "description": "Provider of the follow up chat service",
                  "type": "string"
                },
                "store_id": {
                  "description": "Store ID associated with the chat",
                  "type": "integer"
                },
                "trigger": {
                  "description": "Trigger condition for the follow up chat",
                  "type": "string"
                }
              },
              "title": "FollowUpChat",
              "type": "object"
            },
            "type": "array"
          },
          "is_purchase_kwai": {
            "description": "Is this order a Kwai purchase",
            "type": "boolean"
          },
          "shipping_discount": {
            "description": "Shipping discount applied to the order",
            "format": "decimal",
            "type": "string"
          },
          "conflict_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "paid_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "confirmed_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "canceled_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Order status",
            "enum": [
              "draft",
              "pending",
              "confirmed",
              "in_process",
              "ready",
              "shipped",
              "completed",
              "canceled",
              "rts",
              "closed"
            ],
            "type": "string"
          },
          "is_dropshipping": {
            "description": "Is the order a dropshipping order",
            "type": "boolean"
          },
          "payment_account_id": {
            "description": "Payment account ID",
            "nullable": true,
            "type": "integer"
          },
          "is_repeat": {
            "description": "Is repeat order",
            "type": "boolean"
          },
          "tiktok_pixel_ids": {
            "description": "TikTok pixel IDs associated with the order",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "fb_pixel_ids": {
            "description": "Facebook pixel IDs associated with the order",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "description": "Order primary key",
            "type": "integer"
          },
          "unpaid_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "is_purchase_tiktok": {
            "description": "Is this order a TikTok purchase",
            "type": "boolean"
          },
          "orderlines": {
            "items": {
              "properties": {
                "cogs": {
                  "description": "Cost of Goods Sold for this order line",
                  "format": "float",
                  "type": "number"
                },
                "cogs_bt": {
                  "description": "COGS for this order line minus tax",
                  "format": "float",
                  "type": "number"
                },
                "discount": {
                  "description": "Discount amount applied",
                  "format": "float",
                  "type": "number"
                },
                "discount_bt": {
                  "description": "Discount amount minus tax",
                  "format": "float",
                  "type": "number"
                },
                "discount_code_discount": {
                  "description": "Discount from a discount code",
                  "format": "float",
                  "type": "number"
                },
                "discount_code_discount_bt": {
                  "description": "Discount from a discount code minus tax",
                  "format": "float",
                  "type": "number"
                },
                "discount_rate": {
                  "description": "Discount rate applied to this order line",
                  "format": "float",
                  "type": "number"
                },
                "id": {
                  "description": "Order Line ID",
                  "type": "integer"
                },
                "inserted_at": {
                  "description": "Timestamp when the order line was created",
                  "example": "2023-10-01T12:00:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "is_inventory": {
                  "description": "Is this order line related to inventory?",
                  "type": "boolean"
                },
                "item_type": {
                  "description": "Type of the item",
                  "type": "string"
                },
                "product_business": {
                  "description": "Business ID of the product",
                  "type": "integer"
                },
                "product_name": {
                  "description": "Name of the product",
                  "type": "string"
                },
                "product_price": {
                  "description": "Price of the product before discounts",
                  "format": "float",
                  "type": "number"
                },
                "product_price_bt": {
                  "description": "Price of the product before discounts minus tax",
                  "format": "float",
                  "type": "number"
                },
                "quantity": {
                  "description": "Quantity of the item",
                  "type": "integer"
                },
                "reseller_product_price": {
                  "description": "Reseller price of the product",
                  "format": "float",
                  "type": "number"
                },
                "reseller_product_price_bt": {
                  "description": "Reseller price of the product minus tax",
                  "format": "float",
                  "type": "number"
                },
                "tax_rate": {
                  "description": "Tax rate applied to this order line",
                  "format": "float",
                  "type": "number"
                },
                "variant": {
                  "description": "Variant ID",
                  "type": "integer"
                },
                "variant_cogs": {
                  "description": "COGS of the variant",
                  "format": "float",
                  "type": "number"
                },
                "variant_cogs_bt": {
                  "description": "COGS of the varian minus tax",
                  "format": "float",
                  "type": "number"
                },
                "variant_option1_value": {
                  "description": "Value of option 1 for the variant",
                  "type": "string"
                },
                "variant_option2_value": {
                  "description": "Value of option 2 for the variant",
                  "type": "string"
                },
                "variant_option3_value": {
                  "description": "Value of option 3 for the variant",
                  "type": "string"
                },
                "variant_price": {
                  "description": "Price of the variant",
                  "format": "float",
                  "type": "number"
                },
                "variant_price_bt": {
                  "description": "Price of the variant minus tax",
                  "format": "float",
                  "type": "number"
                },
                "variant_reseller_price": {
                  "description": "Reseller price of the variant",
                  "format": "float",
                  "type": "number"
                },
                "variant_reseller_price_bt": {
                  "description": "Reseller price of the variant minus tax",
                  "format": "float",
                  "type": "number"
                },
                "variant_sku": {
                  "description": "SKU of the variant",
                  "type": "string"
                },
                "weight": {
                  "description": "Weight of the product",
                  "format": "float",
                  "type": "number"
                }
              },
              "title": "OrderLine",
              "type": "object"
            },
            "type": "array"
          },
          "shipment_status": {
            "description": "Current shipment status of the order",
            "nullable": true,
            "type": "string"
          },
          "kwai_pixel_ids": {
            "description": "Kwai pixel IDs associated with the order",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "cogs_bt": {
            "description": "Cost of goods sold for the order minus tax",
            "format": "decimal",
            "type": "string"
          },
          "sub_payment_method": {
            "description": "Xendit VA bank code",
            "enum": [
              "BCA",
              "BNI",
              "BRI",
              "MANDIRI",
              "PERMATA",
              "BSI",
              "BJB",
              "CIMB",
              "SAHABAT_SAMPOERNA",
              "ARTAJASA"
            ],
            "type": "string"
          },
          "payment_fee": {
            "description": "Payment fee for the order",
            "format": "decimal",
            "type": "string"
          },
          "channel_name": {
            "description": "Channel name of the order",
            "nullable": true,
            "type": "string"
          },
          "discount_rate": {
            "description": "Discount rate applied to the order",
            "format": "decimal",
            "type": "string"
          },
          "final_variants": {
            "additionalProperties": true,
            "description": "Final variants of the order after bundle options",
            "nullable": true,
            "type": "object"
          },
          "other_income_name": {
            "description": "Name of other income source",
            "nullable": true,
            "type": "string"
          },
          "gross_revenue": {
            "description": "Gross revenue of the order",
            "format": "decimal",
            "type": "string"
          },
          "tags": {
            "description": "Tags associated with the order",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "discount_code_id": {
            "description": "Discount code ID",
            "nullable": true,
            "type": "integer"
          },
          "other_income": {
            "description": "Other income amount",
            "format": "decimal",
            "type": "string"
          },
          "status_history": {
            "items": {
              "properties": {
                "by": {
                  "description": "Who changed the status",
                  "nullable": true,
                  "type": "string"
                },
                "status": {
                  "description": "Order status",
                  "enum": [
                    "draft",
                    "pending",
                    "confirmed",
                    "in_process",
                    "ready",
                    "shipped",
                    "completed",
                    "canceled",
                    "rts",
                    "closed"
                  ],
                  "type": "string"
                },
                "time": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "total_weight": {
            "description": "Total weight of the order including weight bump",
            "format": "decimal",
            "type": "string"
          },
          "is_probably_spam": {
            "description": "Is probably spam",
            "type": "boolean"
          },
          "external_id": {
            "description": "External ID of the order",
            "type": "string"
          },
          "payment_status_history": {
            "items": {
              "properties": {
                "by": {
                  "description": "Who changed the status",
                  "nullable": true,
                  "type": "string"
                },
                "status": {
                  "description": "Order status",
                  "enum": [
                    "draft",
                    "pending",
                    "confirmed",
                    "in_process",
                    "ready",
                    "shipped",
                    "completed",
                    "canceled",
                    "rts",
                    "closed"
                  ],
                  "type": "string"
                },
                "time": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "discount_code_discount": {
            "description": "Discount code discount amount",
            "format": "decimal",
            "type": "string"
          },
          "product_discount_bt": {
            "description": "Total product discount applied minus tax",
            "format": "decimal",
            "type": "string"
          },
          "store": {
            "properties": {
              "auto_expire_days": {
                "description": "Days until auto-expire",
                "type": "integer"
              },
              "auto_other_income": {
                "description": "Is auto other income enabled?",
                "type": "boolean"
              },
              "business": {
                "properties": {
                  "account_holder": {
                    "description": "Name of the account holder",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email address of the business",
                    "format": "email",
                    "type": "string"
                  },
                  "id": {
                    "description": "Business ID",
                    "type": "integer"
                  },
                  "is_banned": {
                    "description": "Is the business banned?",
                    "type": "boolean"
                  },
                  "logo": {
                    "description": "URL to the business logo",
                    "format": "uri",
                    "type": "string"
                  },
                  "unique_id": {
                    "description": "Unique identifier for the business",
                    "type": "string"
                  },
                  "username": {
                    "description": "Username of the business",
                    "type": "string"
                  }
                },
                "title": "BusinessSimple",
                "type": "object"
              },
              "capi_purchase_value_type": {
                "description": "Type of CAPI purchase value",
                "enum": [
                  "gross_revenue",
                  "net_revenue",
                  "adj_gross_revenue"
                ],
                "type": "string"
              },
              "cod_purchase_triggers": {
                "description": "COD purchase triggers",
                "items": {
                  "enum": [
                    "public_upload",
                    "internal_upload",
                    "confirmed",
                    "shipped",
                    "completed"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "dynamic_other_income_cod_default_amount": {
                "description": "Default amount for dynamic COD income",
                "format": "float",
                "type": "number"
              },
              "dynamic_other_income_cod_default_percentage": {
                "description": "Default percentage for dynamic COD income",
                "format": "float",
                "type": "number"
              },
              "dynamic_other_income_cod_type": {
                "description": "Type of amount (fixed or percentage)",
                "enum": [
                  "fixed",
                  "percentage"
                ],
                "type": "string"
              },
              "dynamic_other_income_epayment_default_amount": {
                "description": "Default amount for dynamic e-payment income",
                "format": "float",
                "type": "number"
              },
              "dynamic_other_income_epayment_default_percentage": {
                "description": "Default percentage for dynamic e-payment income",
                "format": "float",
                "type": "number"
              },
              "dynamic_other_income_epayment_type": {
                "description": "Type of amount (fixed or percentage)",
                "enum": [
                  "fixed",
                  "percentage"
                ],
                "type": "string"
              },
              "fixed_auto_other_income": {
                "description": "Is fixed auto other income enabled?",
                "type": "boolean"
              },
              "id": {
                "description": "Store ID",
                "type": "integer"
              },
              "is_active": {
                "description": "Is the store active?",
                "type": "boolean"
              },
              "is_auto_expire": {
                "description": "Is auto-expire enabled?",
                "type": "boolean"
              },
              "is_discount_editable": {
                "description": "Is discount editable?",
                "type": "boolean"
              },
              "is_dropshipping_allowed": {
                "description": "Is dropshipping allowed in this store?",
                "type": "boolean"
              },
              "is_moota_enabled": {
                "description": "Is Moota integration enabled for this store?",
                "type": "boolean"
              },
              "is_postal_code": {
                "description": "Is postal code required for orders?",
                "type": "boolean"
              },
              "is_transferproof_required": {
                "description": "Is transfer proof required for orders in this store?",
                "type": "boolean"
              },
              "is_unique_code": {
                "description": "Is unique code required for orders?",
                "type": "boolean"
              },
              "is_use_waba": {
                "description": "Is WABA integration enabled?",
                "type": "boolean"
              },
              "max_unique_code_amount": {
                "description": "Maximum amount for unique code orders",
                "type": "integer"
              },
              "name": {
                "description": "Name of the store",
                "type": "string"
              },
              "non_cod_purchase_triggers": {
                "description": "Non-COD purchase triggers",
                "items": {
                  "enum": [
                    "public_upload",
                    "internal_upload",
                    "confirmed",
                    "shipped",
                    "completed"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "other_income_name": {
                "description": "Name of the other income",
                "type": "string"
              },
              "postal_code_requirement": {
                "description": "Postal code requirement options",
                "enum": [
                  "autofill",
                  "manual"
                ],
                "type": "string"
              },
              "store_courier_other_incomes": {
                "description": "Other incomes for store couriers",
                "items": {
                  "description": "Store Courier Other Income Schema",
                  "properties": {
                    "amount": {
                      "description": "Amount of other income",
                      "format": "float",
                      "type": "number"
                    },
                    "courier_id": {
                      "description": "Courier ID",
                      "type": "integer"
                    },
                    "percentage": {
                      "description": "Percentage of other income",
                      "format": "float",
                      "type": "number"
                    },
                    "type": {
                      "description": "Type of other income",
                      "enum": [
                        "fixed",
                        "percentage"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "courier_id",
                    "type"
                  ],
                  "title": "StoreCourierOtherIncome",
                  "type": "object"
                },
                "type": "array"
              },
              "store_method_other_incomes": {
                "description": "Other incomes for store methods",
                "items": {
                  "description": "Store Payment Method Other Income Schema",
                  "properties": {
                    "amount": {
                      "description": "Amount of other income",
                      "format": "float",
                      "type": "number"
                    },
                    "payment_method": {
                      "description": "Payment Method",
                      "type": "string"
                    },
                    "percentage": {
                      "description": "Percentage of other income",
                      "format": "float",
                      "type": "number"
                    },
                    "sub_payment_method": {
                      "description": "Sub Payment Method",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of amount (fixed or percentage)",
                      "enum": [
                        "fixed",
                        "percentage"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "payment_method",
                    "type"
                  ],
                  "title": "StorePaymentMethodOtherIncome",
                  "type": "object"
                },
                "type": "array"
              },
              "sub_payment_methods": {
                "description": "Xendit VA bank codes",
                "items": {
                  "description": "Xendit VA bank code",
                  "enum": [
                    "BCA",
                    "BNI",
                    "BRI",
                    "MANDIRI",
                    "PERMATA",
                    "BSI",
                    "BJB",
                    "CIMB",
                    "SAHABAT_SAMPOERNA",
                    "ARTAJASA"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "unique_id": {
                "description": "Unique identifier for the store",
                "type": "string"
              },
              "uuid": {
                "description": "UUID of the store",
                "type": "string"
              }
            },
            "title": "ForOrderStore",
            "type": "object"
          },
          "pg_payment_info": {
            "additionalProperties": true,
            "description": "Payment gateway payment info",
            "nullable": true,
            "type": "object"
          },
          "other_income_bt": {
            "description": "Other income amount minus tax",
            "format": "decimal",
            "type": "string"
          },
          "courier_service": {
            "properties": {
              "code": {
                "description": "Code for the courier service",
                "type": "string"
              },
              "code_co": {
                "description": "Code for CO courier service",
                "type": "string"
              },
              "code_ka": {
                "description": "Code for KA courier service",
                "type": "string"
              },
              "code_lincah": {
                "description": "Code for Lincah courier service",
                "type": "string"
              },
              "code_mengantar": {
                "description": "Code for Mengantar courier service",
                "type": "string"
              },
              "code_ro": {
                "description": "Code for RO courier service",
                "type": "string"
              },
              "courier": {
                "properties": {
                  "code": {
                    "description": "Courier code",
                    "type": "string"
                  },
                  "code_ka": {
                    "description": "Courier code in Georgian",
                    "type": "string"
                  },
                  "code_lincah": {
                    "description": "Courier code in Lincah",
                    "type": "string"
                  },
                  "code_mengantar": {
                    "description": "Courier code for Mengantar",
                    "type": "string"
                  },
                  "code_ro": {
                    "description": "Courier code in Romanian",
                    "type": "string"
                  },
                  "courier_type": {
                    "description": "Type of the courier",
                    "enum": [
                      "delivery",
                      "pickup"
                    ],
                    "type": "string"
                  },
                  "id": {
                    "description": "Courier ID",
                    "type": "integer"
                  },
                  "is_pickup": {
                    "description": "Is this a pickup courier?",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Courier name",
                    "type": "string"
                  }
                },
                "title": "Courier",
                "type": "object"
              },
              "id": {
                "description": "Courier Service ID",
                "type": "integer"
              },
              "name": {
                "description": "Name of the courier service",
                "type": "string"
              }
            },
            "title": "CourierService",
            "type": "object"
          },
          "mark_as_spam_by": {
            "description": "Who marked as spam",
            "type": "string"
          },
          "net_payment_revenue": {
            "description": "Net payment revenue after fees",
            "format": "decimal",
            "type": "string"
          },
          "rts_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "min_payment_fee": {
            "description": "Minimum payment fee applied to the order",
            "format": "decimal",
            "type": "string"
          },
          "analytics_purchases": {
            "description": "Analytics purchases associated with the order",
            "items": {
              "properties": {
                "id": {
                  "description": "Analytics Purchase ID",
                  "type": "integer"
                },
                "inserted_at": {
                  "description": "Timestamp when the analytics purchase was created",
                  "format": "date-time",
                  "type": "string"
                },
                "order_id": {
                  "description": "Order ID associated with the analytics purchase",
                  "type": "integer"
                },
                "payload": {
                  "additionalProperties": true,
                  "description": "Payload data of the analytics purchase",
                  "type": "object"
                },
                "pixel_id": {
                  "description": "Pixel ID associated with the purchase",
                  "type": "string"
                },
                "platform": {
                  "description": "Platform of the analytics purchase",
                  "type": "string"
                },
                "response": {
                  "additionalProperties": true,
                  "description": "Response data from the analytics purchase",
                  "type": "object"
                },
                "updated_at": {
                  "description": "Timestamp when the analytics purchase was last updated",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "title": "AnalyticsPurchase",
              "type": "object"
            },
            "type": "array"
          },
          "is_from_form": {
            "description": "Is from form submission",
            "type": "boolean"
          },
          "secret_slug": {
            "description": "Secret slug of the order",
            "type": "string"
          },
          "shipping_fee": {
            "description": "Shipping fee charged for the order",
            "format": "decimal",
            "type": "string"
          },
          "tax_rate": {
            "description": "Tax rate applied to the order",
            "format": "float",
            "nullable": true,
            "type": "number"
          },
          "draft_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "last_updated_at": {
            "description": "Last updated timestamp of the order",
            "format": "date-time",
            "type": "string"
          },
          "courier_additional_info": {
            "description": "Additional information for the courier",
            "nullable": true,
            "type": "string"
          },
          "closed_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "financial_entity": {
            "properties": {
              "code": {
                "description": "Code of the financial entity",
                "type": "string"
              },
              "duitku_code": {
                "description": "Duitku code for the financial entity",
                "type": "string"
              },
              "entity_type": {
                "description": "Type of the financial entity",
                "type": "string"
              },
              "id": {
                "description": "Financial Entity ID",
                "type": "integer"
              },
              "name": {
                "description": "Name of the financial entity",
                "type": "string"
              },
              "platform": {
                "description": "Platform associated with the financial entity",
                "type": "string"
              },
              "xendit_code": {
                "description": "Xendit code for the financial entity",
                "type": "string"
              }
            },
            "title": "FinancialEntity",
            "type": "object"
          },
          "page": {
            "properties": {
              "id": {
                "description": "Page ID",
                "type": "integer"
              },
              "is_published": {
                "description": "Is the page published?",
                "type": "boolean"
              },
              "name": {
                "description": "Name of the page",
                "type": "string"
              },
              "published_at": {
                "description": "Publication date of the page",
                "format": "date-time",
                "type": "string"
              },
              "slug": {
                "description": "Slug for the page URL",
                "type": "string"
              },
              "store_id": {
                "description": "ID of the store the page belongs to",
                "type": "integer"
              },
              "unique_id": {
                "description": "Unique identifier for the page",
                "type": "string"
              }
            },
            "title": "PageSimple",
            "type": "object"
          },
          "product_price_bt": {
            "description": "Total product price before discounts minus tax",
            "format": "decimal",
            "type": "string"
          },
          "is_purchase_fb": {
            "description": "Is this order a Facebook purchase",
            "type": "boolean"
          },
          "product_weight": {
            "description": "Total weight of products in the order",
            "format": "decimal",
            "type": "string"
          },
          "completed_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "utm_source": {
            "description": "UTM source of the order",
            "nullable": true,
            "type": "string"
          },
          "payment_account_holder": {
            "description": "Payment account holder name",
            "nullable": true,
            "type": "string"
          },
          "ip": {
            "description": "IP address of the customer who placed the order",
            "nullable": true,
            "type": "string"
          },
          "shipment_receipt": {
            "description": "Shipment receipt URL for the order",
            "nullable": true,
            "type": "string"
          },
          "message_history": {
            "description": "Message history associated with the order",
            "items": {
              "properties": {
                "id": {
                  "description": "ID of the Follow Up Chat",
                  "type": "integer"
                },
                "is_from_bot": {
                  "description": "Is the message from bot",
                  "type": "boolean"
                },
                "message": {
                  "description": "Message content",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the sender",
                  "type": "string"
                },
                "provider": {
                  "description": "Message provider",
                  "type": "string"
                },
                "recipient_name": {
                  "description": "Recipient name",
                  "type": "string"
                },
                "recipient_phone": {
                  "description": "Recipient phone number",
                  "type": "string"
                },
                "sender_name": {
                  "description": "Sender name",
                  "type": "string"
                },
                "sender_phone": {
                  "description": "Sender phone number",
                  "type": "string"
                },
                "timestamp": {
                  "description": "Timestamp of the message",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "title": "MessageHistoryItem",
              "type": "object"
            },
            "type": "array"
          },
          "payment_status": {
            "description": "Order payment status",
            "enum": [
              "unpaid",
              "paid",
              "conflict",
              "settled"
            ],
            "type": "string"
          },
          "shipment_provider_code": {
            "description": "Shipment provider code",
            "enum": [
              "mengantar",
              "lincah",
              "ninja"
            ],
            "nullable": true,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": true,
            "description": "Metadata associated with the order",
            "nullable": true,
            "type": "object"
          },
          "rtsproof_url": {
            "description": "RTS proof URL for the order",
            "nullable": true,
            "type": "string"
          },
          "discount_code_applied_to": {
            "description": "What the discount code was applied to",
            "nullable": true,
            "type": "string"
          },
          "shipped_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "awb_ca_status": {
            "description": "Order AWB courier aggregator status",
            "enum": [
              "unavailable",
              "pending",
              "waiting",
              "failed",
              "created",
              "canceled"
            ],
            "type": "string"
          },
          "created_at": {
            "description": "Order creation timestamp",
            "format": "date-time",
            "type": "string"
          },
          "pending_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "notes": {
            "description": "Notes or comments for the order",
            "nullable": true,
            "type": "string"
          },
          "destination_address": {
            "properties": {
              "address": {
                "description": "Full address",
                "type": "string"
              },
              "city": {
                "description": "City of the address",
                "type": "string"
              },
              "id": {
                "description": "Order Address ID",
                "type": "integer"
              },
              "location": {
                "description": "Location ID for the address",
                "type": "integer"
              },
              "name": {
                "description": "Name of the recipient",
                "type": "string"
              },
              "phone": {
                "description": "Phone number of the recipient",
                "type": "string"
              },
              "postal_code": {
                "description": "Postal code of the address",
                "type": "string"
              },
              "province": {
                "description": "Province of the address",
                "type": "string"
              },
              "subdistrict": {
                "description": "Subdistrict of the address",
                "type": "string"
              }
            },
            "title": "OrderAddress",
            "type": "object"
          },
          "unique_code_discount": {
            "description": "Unique code discount applied to the order",
            "format": "decimal",
            "type": "string"
          },
          "shipping_fee_discount": {
            "description": "Shipping fee discount applied to the order",
            "format": "decimal",
            "type": "string"
          }
        },
        "title": "Order",
        "type": "object"
      },
      "WhatsappIntegration": {
        "properties": {
          "id": {
            "description": "Whatsapp Integration ID",
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "phone_number": {
            "description": "Phone Number",
            "type": "string"
          },
          "provider": {
            "description": "Provider",
            "type": "string"
          }
        },
        "title": "WhatsappIntegration",
        "type": "object"
      },
      "CourierType": {
        "description": "Type of the courier",
        "enum": [
          "instant",
          "cashless",
          "standard"
        ],
        "example": "standard",
        "title": "CourierType",
        "type": "string"
      },
      "ForLocationWarehouse": {
        "properties": {
          "address": {
            "description": "Address of the warehouse",
            "type": "string"
          },
          "city_name": {
            "description": "City name of the warehouse location",
            "type": "string"
          },
          "id": {
            "description": "Warehouse ID",
            "type": "integer"
          },
          "lincah_origin_id": {
            "description": "Lincah origin ID for the warehouse",
            "type": "string"
          },
          "mengantar_origin_id": {
            "description": "Mengantar origin ID for the warehouse",
            "type": "string"
          },
          "name": {
            "description": "Name of the warehouse",
            "type": "string"
          },
          "province_name": {
            "description": "Province name of the warehouse location",
            "type": "string"
          },
          "subdistrict_name": {
            "description": "Subdistrict name of the warehouse location",
            "type": "string"
          },
          "unique_id": {
            "description": "Unique identifier of the warehouse",
            "type": "string"
          }
        },
        "title": "ForLocationWarehouse",
        "type": "object"
      },
      "ListSimplifiedStore": {
        "properties": {
          "business_id": {
            "description": "Business ID",
            "type": "integer"
          },
          "custom_domain": {
            "properties": {
              "full_url": {
                "description": "Full URL",
                "format": "uri",
                "type": "string"
              },
              "id": {
                "description": "Custom Domain ID",
                "type": "integer"
              },
              "is_verified": {
                "description": "Is Verified",
                "type": "boolean"
              }
            },
            "title": "SimpleCustomDomain",
            "type": "object"
          },
          "id": {
            "description": "Store ID",
            "type": "integer"
          },
          "logo": {
            "description": "URL of the store logo",
            "format": "uri",
            "type": "string"
          },
          "name": {
            "description": "Name of the store",
            "type": "string"
          },
          "payment_methods": {
            "description": "Payment methods available in the store",
            "items": {
              "description": "Order payment method",
              "enum": [
                "gopay",
                "va",
                "qris",
                "card",
                "invoice",
                "alfamart",
                "ovo",
                "dana",
                "shopeepay",
                "linkaja",
                "no_payment",
                "bank_transfer",
                "marketplace",
                "cod"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "sub_payment_methods": {
            "description": "Xendit VA bank codes",
            "items": {
              "description": "Xendit VA bank code",
              "enum": [
                "BCA",
                "BNI",
                "BRI",
                "MANDIRI",
                "PERMATA",
                "BSI",
                "BJB",
                "CIMB",
                "SAHABAT_SAMPOERNA",
                "ARTAJASA"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "unique_id": {
            "description": "Unique identifier for the store",
            "type": "string"
          },
          "uuid": {
            "description": "UUID of the store",
            "type": "string"
          }
        },
        "title": "ListSimplifiedStore",
        "type": "object"
      },
      "AnalyticsPurchase": {
        "properties": {
          "id": {
            "description": "Analytics Purchase ID",
            "type": "integer"
          },
          "inserted_at": {
            "description": "Timestamp when the analytics purchase was created",
            "format": "date-time",
            "type": "string"
          },
          "order_id": {
            "description": "Order ID associated with the analytics purchase",
            "type": "integer"
          },
          "payload": {
            "additionalProperties": true,
            "description": "Payload data of the analytics purchase",
            "type": "object"
          },
          "pixel_id": {
            "description": "Pixel ID associated with the purchase",
            "type": "string"
          },
          "platform": {
            "description": "Platform of the analytics purchase",
            "type": "string"
          },
          "response": {
            "additionalProperties": true,
            "description": "Response data from the analytics purchase",
            "type": "object"
          },
          "updated_at": {
            "description": "Timestamp when the analytics purchase was last updated",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "AnalyticsPurchase",
        "type": "object"
      },
      "Location": {
        "properties": {
          "city_name": {
            "description": "City Name",
            "type": "string"
          },
          "display": {
            "description": "Display Name",
            "type": "string"
          },
          "id": {
            "description": "Location ID",
            "type": "integer"
          },
          "jne_destination_id": {
            "description": "JNE Destination ID",
            "type": "integer"
          },
          "jne_origin_id": {
            "description": "JNE Origin ID",
            "type": "integer"
          },
          "ka_district_id": {
            "description": "Kargo Aman District ID",
            "type": "integer"
          },
          "lincah_code": {
            "description": "Lincah Code",
            "type": "string"
          },
          "lion_code": {
            "description": "Lion Code",
            "type": "string"
          },
          "mengantar_code": {
            "description": "Mengantar Code",
            "type": "string"
          },
          "ninja_l1": {
            "description": "Ninja L1 Code",
            "type": "string"
          },
          "ninja_l2": {
            "description": "Ninja L2 Code",
            "type": "string"
          },
          "province_name": {
            "description": "Province Name",
            "type": "string"
          },
          "ro_city_id": {
            "description": "RajaOngkir City ID",
            "type": "integer"
          },
          "ro_province_id": {
            "description": "RajaOngkir Province ID",
            "type": "integer"
          },
          "ro_subdistrict_id": {
            "description": "RajaOngkir Subdistrict ID",
            "type": "integer"
          },
          "subdistrict_name": {
            "description": "Subdistrict Name",
            "type": "string"
          }
        },
        "title": "Location",
        "type": "object"
      },
      "SimpleCustomDomain": {
        "properties": {
          "full_url": {
            "description": "Full URL",
            "format": "uri",
            "type": "string"
          },
          "id": {
            "description": "Custom Domain ID",
            "type": "integer"
          },
          "is_verified": {
            "description": "Is Verified",
            "type": "boolean"
          }
        },
        "title": "SimpleCustomDomain",
        "type": "object"
      },
      "WeeklySchedule": {
        "description": "Weekly Schedule Schema",
        "properties": {
          "friday": {
            "description": "Day Schedule Schema",
            "properties": {
              "end_time": {
                "description": "End time",
                "format": "time",
                "type": "string"
              },
              "is_active": {
                "description": "Is active",
                "type": "boolean"
              },
              "start_time": {
                "description": "Start time",
                "format": "time",
                "type": "string"
              }
            },
            "required": [
              "is_active",
              "start_time",
              "end_time"
            ],
            "title": "DaySchedule",
            "type": "object"
          },
          "monday": {
            "description": "Day Schedule Schema",
            "properties": {
              "end_time": {
                "description": "End time",
                "format": "time",
                "type": "string"
              },
              "is_active": {
                "description": "Is active",
                "type": "boolean"
              },
              "start_time": {
                "description": "Start time",
                "format": "time",
                "type": "string"
              }
            },
            "required": [
              "is_active",
              "start_time",
              "end_time"
            ],
            "title": "DaySchedule",
            "type": "object"
          },
          "saturday": {
            "description": "Day Schedule Schema",
            "properties": {
              "end_time": {
                "description": "End time",
                "format": "time",
                "type": "string"
              },
              "is_active": {
                "description": "Is active",
                "type": "boolean"
              },
              "start_time": {
                "description": "Start time",
                "format": "time",
                "type": "string"
              }
            },
            "required": [
              "is_active",
              "start_time",
              "end_time"
            ],
            "title": "DaySchedule",
            "type": "object"
          },
          "sunday": {
            "description": "Day Schedule Schema",
            "properties": {
              "end_time": {
                "description": "End time",
                "format": "time",
                "type": "string"
              },
              "is_active": {
                "description": "Is active",
                "type": "boolean"
              },
              "start_time": {
                "description": "Start time",
                "format": "time",
                "type": "string"
              }
            },
            "required": [
              "is_active",
              "start_time",
              "end_time"
            ],
            "title": "DaySchedule",
            "type": "object"
          },
          "thursday": {
            "description": "Day Schedule Schema",
            "properties": {
              "end_time": {
                "description": "End time",
                "format": "time",
                "type": "string"
              },
              "is_active": {
                "description": "Is active",
                "type": "boolean"
              },
              "start_time": {
                "description": "Start time",
                "format": "time",
                "type": "string"
              }
            },
            "required": [
              "is_active",
              "start_time",
              "end_time"
            ],
            "title": "DaySchedule",
            "type": "object"
          },
          "tuesday": {
            "description": "Day Schedule Schema",
            "properties": {
              "end_time": {
                "description": "End time",
                "format": "time",
                "type": "string"
              },
              "is_active": {
                "description": "Is active",
                "type": "boolean"
              },
              "start_time": {
                "description": "Start time",
                "format": "time",
                "type": "string"
              }
            },
            "required": [
              "is_active",
              "start_time",
              "end_time"
            ],
            "title": "DaySchedule",
            "type": "object"
          },
          "wednesday": {
            "description": "Day Schedule Schema",
            "properties": {
              "end_time": {
                "description": "End time",
                "format": "time",
                "type": "string"
              },
              "is_active": {
                "description": "Is active",
                "type": "boolean"
              },
              "start_time": {
                "description": "Start time",
                "format": "time",
                "type": "string"
              }
            },
            "required": [
              "is_active",
              "start_time",
              "end_time"
            ],
            "title": "DaySchedule",
            "type": "object"
          }
        },
        "title": "WeeklySchedule",
        "type": "object"
      },
      "SimplifiedProductList": {
        "properties": {
          "display": {
            "description": "Display name of the product",
            "type": "string"
          },
          "id": {
            "description": "Product primary key",
            "type": "integer"
          },
          "images": {
            "description": "List of image URLs associated with the product",
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "is_owned_by_store": {
            "description": "If the request is made including `for_store_id` param, it shows `is_owned_by_store` field in the response, indicating if the product is included in the store.",
            "type": "boolean"
          },
          "item_type": {
            "description": "Type of the product item",
            "enum": [
              "physical",
              "digital",
              "course"
            ],
            "title": "ItemType",
            "type": "string"
          },
          "item_type_name": {
            "description": "Human-readable name of the product item type",
            "type": "string"
          },
          "labels": {
            "description": "List of labels associated with the product",
            "items": {
              "properties": {
                "name": {
                  "description": "Label name",
                  "type": "string"
                }
              },
              "title": "ItemLabel",
              "type": "object"
            },
            "type": "array"
          },
          "name": {
            "description": "Product name",
            "type": "string"
          },
          "uuid": {
            "description": "Product UUID",
            "type": "string"
          },
          "variants": {
            "description": "List of variants associated with the product",
            "items": {
              "properties": {
                "digital_product_files": {
                  "description": "List of digital product files associated with the variant",
                  "items": {
                    "properties": {
                      "content_type": {
                        "description": "MIME type of the digital product file",
                        "type": "string"
                      },
                      "id": {
                        "description": "Digital product file primary key",
                        "type": "integer"
                      },
                      "name": {
                        "description": "File name of the digital product file",
                        "type": "string"
                      },
                      "size_in_bytes": {
                        "description": "Size of the digital product file in bytes",
                        "type": "integer"
                      },
                      "url": {
                        "description": "URL to access the digital product file",
                        "format": "uri",
                        "type": "string"
                      }
                    },
                    "title": "DigitalProductFile",
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "description": "Variant primary key",
                  "type": "integer"
                },
                "images": {
                  "description": "List of image URLs associated with the variant",
                  "items": {
                    "format": "uri",
                    "type": "string"
                  },
                  "type": "array"
                },
                "is_checked": {
                  "description": "Mark variant as sellable",
                  "type": "boolean"
                },
                "is_editable": {
                  "description": "Indicates if the variant is editable",
                  "type": "boolean"
                },
                "item_type": {
                  "description": "Type of the product item",
                  "enum": [
                    "physical",
                    "digital",
                    "course"
                  ],
                  "type": "string"
                },
                "metadata": {
                  "additionalProperties": true,
                  "description": "Additional metadata associated with the variant",
                  "type": "object"
                },
                "name": {
                  "description": "Full name of the variant",
                  "type": "string"
                },
                "product_name": {
                  "description": "Name of the associated product",
                  "type": "string"
                },
                "self_file_urls": {
                  "description": "List of self file URLs associated with the variant",
                  "items": {
                    "format": "uri",
                    "type": "string"
                  },
                  "type": "array"
                },
                "unique_id": {
                  "description": "Variant unique identifier",
                  "type": "string"
                },
                "uuid": {
                  "description": "Variant UUID",
                  "type": "string"
                },
                "weight": {
                  "description": "Weight of the variant in grams",
                  "type": "integer"
                }
              },
              "title": "VariantList",
              "type": "object"
            },
            "type": "array"
          }
        },
        "title": "SimplifiedProductList",
        "type": "object"
      },
      "AddStorePayments": {
        "properties": {
          "payment_account_ids": {
            "description": "List of payment account IDs to add to the store",
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "payment_methods": {
            "description": "Payment methods to add to the store",
            "items": {
              "description": "Order payment method",
              "enum": [
                "gopay",
                "va",
                "qris",
                "card",
                "invoice",
                "alfamart",
                "ovo",
                "dana",
                "shopeepay",
                "linkaja",
                "no_payment",
                "bank_transfer",
                "marketplace",
                "cod"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "sub_payment_methods": {
            "description": "Xendit VA bank codes to add to the store",
            "items": {
              "description": "Xendit VA bank code",
              "enum": [
                "BCA",
                "BNI",
                "BRI",
                "MANDIRI",
                "PERMATA",
                "BSI",
                "BJB",
                "CIMB",
                "SAHABAT_SAMPOERNA",
                "ARTAJASA"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "payment_account_ids"
        ],
        "title": "AddStorePayments",
        "type": "object"
      },
      "ProductPartner": {
        "description": "A partner associated with a product",
        "properties": {
          "created_at": {
            "description": "Timestamp when the product partner was created",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the product partner",
            "type": "integer"
          },
          "partner": {
            "properties": {
              "account_holder": {
                "description": "Name of the account holder",
                "type": "string"
              },
              "email": {
                "description": "Email address of the business",
                "format": "email",
                "type": "string"
              },
              "id": {
                "description": "Business ID",
                "type": "integer"
              },
              "is_banned": {
                "description": "Is the business banned?",
                "type": "boolean"
              },
              "logo": {
                "description": "URL to the business logo",
                "format": "uri",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique identifier for the business",
                "type": "string"
              },
              "username": {
                "description": "Username of the business",
                "type": "string"
              }
            },
            "title": "BusinessSimple",
            "type": "object"
          }
        },
        "title": "ProductPartner",
        "type": "object"
      },
      "StoreSalesPersonSimple": {
        "description": "Store Sales Person Simple Schema",
        "properties": {
          "business_user": {
            "properties": {
              "business_phone": {
                "description": "The business phone number",
                "type": "string"
              },
              "id": {
                "description": "The business user ID",
                "type": "integer"
              },
              "role": {
                "properties": {
                  "id": {
                    "description": "The role ID",
                    "type": "integer"
                  },
                  "name": {
                    "description": "The name of the role",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ],
                "title": "SimpleRole",
                "type": "object"
              },
              "user": {
                "properties": {
                  "aff_code": {
                    "description": "Affiliate code of the user",
                    "type": "string"
                  },
                  "avatar": {
                    "description": "URL to user avatar",
                    "format": "uri",
                    "type": "string"
                  },
                  "email": {
                    "description": "User email",
                    "format": "email",
                    "type": "string"
                  },
                  "fullname": {
                    "description": "User full name",
                    "type": "string"
                  },
                  "id": {
                    "description": "User ID",
                    "type": "integer"
                  },
                  "phone": {
                    "description": "User phone number",
                    "type": "string"
                  }
                },
                "title": "UserSimple",
                "type": "object"
              }
            },
            "required": [
              "id",
              "user",
              "role",
              "business_phone"
            ],
            "title": "BusinessUser",
            "type": "object"
          },
          "id": {
            "description": "Store Sales Person ID",
            "type": "integer"
          },
          "percentage": {
            "description": "Percentage of sales person",
            "type": "integer"
          },
          "weekly_schedule": {
            "description": "Weekly Schedule Schema",
            "properties": {
              "friday": {
                "description": "Day Schedule Schema",
                "properties": {
                  "end_time": {
                    "description": "End time",
                    "format": "time",
                    "type": "string"
                  },
                  "is_active": {
                    "description": "Is active",
                    "type": "boolean"
                  },
                  "start_time": {
                    "description": "Start time",
                    "format": "time",
                    "type": "string"
                  }
                },
                "required": [
                  "is_active",
                  "start_time",
                  "end_time"
                ],
                "title": "DaySchedule",
                "type": "object"
              },
              "monday": {
                "description": "Day Schedule Schema",
                "properties": {
                  "end_time": {
                    "description": "End time",
                    "format": "time",
                    "type": "string"
                  },
                  "is_active": {
                    "description": "Is active",
                    "type": "boolean"
                  },
                  "start_time": {
                    "description": "Start time",
                    "format": "time",
                    "type": "string"
                  }
                },
                "required": [
                  "is_active",
                  "start_time",
                  "end_time"
                ],
                "title": "DaySchedule",
                "type": "object"
              },
              "saturday": {
                "description": "Day Schedule Schema",
                "properties": {
                  "end_time": {
                    "description": "End time",
                    "format": "time",
                    "type": "string"
                  },
                  "is_active": {
                    "description": "Is active",
                    "type": "boolean"
                  },
                  "start_time": {
                    "description": "Start time",
                    "format": "time",
                    "type": "string"
                  }
                },
                "required": [
                  "is_active",
                  "start_time",
                  "end_time"
                ],
                "title": "DaySchedule",
                "type": "object"
              },
              "sunday": {
                "description": "Day Schedule Schema",
                "properties": {
                  "end_time": {
                    "description": "End time",
                    "format": "time",
                    "type": "string"
                  },
                  "is_active": {
                    "description": "Is active",
                    "type": "boolean"
                  },
                  "start_time": {
                    "description": "Start time",
                    "format": "time",
                    "type": "string"
                  }
                },
                "required": [
                  "is_active",
                  "start_time",
                  "end_time"
                ],
                "title": "DaySchedule",
                "type": "object"
              },
              "thursday": {
                "description": "Day Schedule Schema",
                "properties": {
                  "end_time": {
                    "description": "End time",
                    "format": "time",
                    "type": "string"
                  },
                  "is_active": {
                    "description": "Is active",
                    "type": "boolean"
                  },
                  "start_time": {
                    "description": "Start time",
                    "format": "time",
                    "type": "string"
                  }
                },
                "required": [
                  "is_active",
                  "start_time",
                  "end_time"
                ],
                "title": "DaySchedule",
                "type": "object"
              },
              "tuesday": {
                "description": "Day Schedule Schema",
                "properties": {
                  "end_time": {
                    "description": "End time",
                    "format": "time",
                    "type": "string"
                  },
                  "is_active": {
                    "description": "Is active",
                    "type": "boolean"
                  },
                  "start_time": {
                    "description": "Start time",
                    "format": "time",
                    "type": "string"
                  }
                },
                "required": [
                  "is_active",
                  "start_time",
                  "end_time"
                ],
                "title": "DaySchedule",
                "type": "object"
              },
              "wednesday": {
                "description": "Day Schedule Schema",
                "properties": {
                  "end_time": {
                    "description": "End time",
                    "format": "time",
                    "type": "string"
                  },
                  "is_active": {
                    "description": "Is active",
                    "type": "boolean"
                  },
                  "start_time": {
                    "description": "Start time",
                    "format": "time",
                    "type": "string"
                  }
                },
                "required": [
                  "is_active",
                  "start_time",
                  "end_time"
                ],
                "title": "DaySchedule",
                "type": "object"
              }
            },
            "title": "WeeklySchedule",
            "type": "object"
          }
        },
        "title": "StoreSalesPersonSimple",
        "type": "object"
      },
      "SearchWarehouseResult": {
        "properties": {
          "destination": {
            "properties": {
              "city_name": {
                "description": "City Name",
                "type": "string"
              },
              "display": {
                "description": "Display Name",
                "type": "string"
              },
              "id": {
                "description": "Location ID",
                "type": "integer"
              },
              "jne_destination_id": {
                "description": "JNE Destination ID",
                "type": "integer"
              },
              "jne_origin_id": {
                "description": "JNE Origin ID",
                "type": "integer"
              },
              "ka_district_id": {
                "description": "Kargo Aman District ID",
                "type": "integer"
              },
              "lincah_code": {
                "description": "Lincah Code",
                "type": "string"
              },
              "lion_code": {
                "description": "Lion Code",
                "type": "string"
              },
              "mengantar_code": {
                "description": "Mengantar Code",
                "type": "string"
              },
              "ninja_l1": {
                "description": "Ninja L1 Code",
                "type": "string"
              },
              "ninja_l2": {
                "description": "Ninja L2 Code",
                "type": "string"
              },
              "province_name": {
                "description": "Province Name",
                "type": "string"
              },
              "ro_city_id": {
                "description": "RajaOngkir City ID",
                "type": "integer"
              },
              "ro_province_id": {
                "description": "RajaOngkir Province ID",
                "type": "integer"
              },
              "ro_subdistrict_id": {
                "description": "RajaOngkir Subdistrict ID",
                "type": "integer"
              },
              "subdistrict_name": {
                "description": "Subdistrict Name",
                "type": "string"
              }
            },
            "title": "Location",
            "type": "object"
          },
          "distance_km": {
            "description": "Distance in kilometers",
            "format": "float",
            "type": "number"
          },
          "warehouse": {
            "properties": {
              "business": {
                "properties": {
                  "id": {
                    "description": "Business ID",
                    "type": "integer"
                  },
                  "username": {
                    "description": "Username of the business",
                    "type": "string"
                  }
                },
                "title": "BusinessUsernameOnly",
                "type": "object"
              },
              "id": {
                "description": "Warehouse ID",
                "type": "integer"
              },
              "lincah_origin_id": {
                "description": "Lincah origin ID for the warehouse",
                "type": "string"
              },
              "mengantar_origin_id": {
                "description": "Mengantar origin ID for the warehouse",
                "type": "string"
              },
              "name": {
                "description": "Name of the warehouse",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique identifier of the warehouse",
                "type": "string"
              },
              "warehouse_address": {
                "properties": {
                  "address": {
                    "description": "Full address of the warehouse",
                    "type": "string"
                  },
                  "city": {
                    "description": "City of the warehouse address",
                    "type": "string"
                  },
                  "id": {
                    "description": "Warehouse Address ID",
                    "type": "integer"
                  },
                  "location": {
                    "description": "Location ID for the address",
                    "type": "integer"
                  },
                  "postal_code": {
                    "description": "Postal code of the warehouse address",
                    "type": "string"
                  },
                  "province": {
                    "description": "Province of the warehouse address",
                    "type": "string"
                  },
                  "subdistrict": {
                    "description": "Subdistrict of the warehouse address",
                    "type": "string"
                  }
                },
                "title": "WarehouseAddressLocationData",
                "type": "object"
              }
            },
            "title": "ForLocationSearchWarehouse",
            "type": "object"
          },
          "warehouse_partner": {
            "properties": {
              "id": {
                "description": "Warehouse Partner ID",
                "type": "integer"
              },
              "ka_origin_id": {
                "description": "KA Origin ID",
                "type": "string"
              },
              "lincah_origin_id": {
                "description": "Lincah Origin ID",
                "type": "string"
              },
              "mengantar_origin_id": {
                "description": "Mengantar Origin ID",
                "type": "string"
              },
              "partner_id": {
                "description": "Partner Business ID",
                "type": "integer"
              }
            },
            "title": "WarehousePartnerSearchData",
            "type": "object"
          }
        },
        "title": "SearchWarehouseResult",
        "type": "object"
      },
      "ForProductFormDisplay": {
        "properties": {
          "id": {
            "description": "Form Display ID",
            "type": "integer"
          },
          "page_display": {
            "properties": {
              "id": {
                "description": "Page Display ID",
                "type": "integer"
              },
              "page": {
                "properties": {
                  "id": {
                    "description": "Page ID",
                    "type": "integer"
                  },
                  "is_published": {
                    "description": "Is the page published?",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Name of the page",
                    "type": "string"
                  },
                  "published_at": {
                    "description": "Publication date of the page",
                    "format": "date-time",
                    "type": "string"
                  },
                  "slug": {
                    "description": "Slug for the page URL",
                    "type": "string"
                  },
                  "store_id": {
                    "description": "ID of the store the page belongs to",
                    "type": "integer"
                  },
                  "unique_id": {
                    "description": "Unique identifier for the page",
                    "type": "string"
                  }
                },
                "title": "PageSimple",
                "type": "object"
              }
            },
            "title": "ForProductPageDisplay",
            "type": "object"
          }
        },
        "title": "ForProductFormDisplay",
        "type": "object"
      },
      "WabaAccount": {
        "properties": {
          "display_phone_number": {
            "description": "Display Phone Number",
            "type": "string"
          },
          "id": {
            "description": "WABA Account ID",
            "type": "integer"
          },
          "inserted_at": {
            "description": "Inserted At",
            "format": "date-time",
            "type": "string"
          },
          "is_pin_enabled": {
            "description": "Is PIN Enabled",
            "type": "boolean"
          },
          "is_webhooks_subscribed": {
            "description": "Is Webhooks Subscribed",
            "type": "boolean"
          },
          "phone_number_id": {
            "description": "Phone Number ID",
            "type": "string"
          },
          "status": {
            "description": "Status",
            "type": "string"
          },
          "unique_id": {
            "description": "Unique Identifier",
            "type": "string"
          },
          "updated_at": {
            "description": "Updated At",
            "format": "date-time",
            "type": "string"
          },
          "verified_name": {
            "description": "Verified Name",
            "type": "string"
          },
          "waba_id": {
            "description": "WABA ID",
            "type": "string"
          }
        },
        "title": "WabaAccount",
        "type": "object"
      },
      "OrderCreateBody": {
        "properties": {
          "address": {
            "description": "Recipient address",
            "type": "string"
          },
          "channel_unique_id": {
            "description": "Channel unique ID",
            "type": "string"
          },
          "courier_service_id": {
            "description": "Courier service ID",
            "type": "integer"
          },
          "customer_email": {
            "description": "Customer email",
            "format": "email",
            "type": "string"
          },
          "customer_name": {
            "description": "Customer name",
            "type": "string"
          },
          "customer_phone": {
            "description": "Customer phone number",
            "type": "string"
          },
          "dropshipper_name": {
            "description": "Dropshipper name",
            "type": "string"
          },
          "dropshipper_phone": {
            "description": "Dropshipper phone",
            "type": "string"
          },
          "financial_entity_id": {
            "description": "Financial entity ID",
            "type": "integer"
          },
          "is_dropshipping": {
            "description": "Is dropshipping order",
            "type": "boolean"
          },
          "is_probably_spam": {
            "default": false,
            "description": "Is the order probably spam",
            "type": "boolean"
          },
          "location_id": {
            "description": "Location ID",
            "type": "integer"
          },
          "metadata": {
            "additionalProperties": true,
            "description": "Additional metadata",
            "type": "object"
          },
          "notes": {
            "description": "Order notes",
            "type": "string"
          },
          "orderbundles": {
            "description": "Order bundles",
            "items": {
              "properties": {
                "bundle_price_option_unique_id": {
                  "description": "Bundle price option unique ID",
                  "type": "string"
                },
                "quantity": {
                  "description": "Quantity",
                  "type": "integer"
                }
              },
              "required": [
                "bundle_price_option_unique_id",
                "quantity"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "ordervariants": {
            "description": "Order variants",
            "items": {
              "properties": {
                "quantity": {
                  "description": "Quantity",
                  "type": "integer"
                },
                "variant_unique_id": {
                  "description": "Variant unique ID",
                  "type": "string"
                }
              },
              "required": [
                "variant_unique_id",
                "quantity"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "other_income": {
            "description": "Other income amount",
            "type": "number"
          },
          "other_income_name": {
            "description": "Other income name",
            "type": "string"
          },
          "page_unique_id": {
            "description": "Page unique ID",
            "type": "string"
          },
          "payment_account_holder": {
            "description": "Payment account holder name",
            "type": "string"
          },
          "payment_account_number": {
            "description": "Payment account number",
            "type": "string"
          },
          "payment_account_unique_id": {
            "description": "Payment account unique ID",
            "type": "string"
          },
          "payment_method": {
            "description": "Order payment method",
            "enum": [
              "gopay",
              "va",
              "qris",
              "card",
              "invoice",
              "alfamart",
              "ovo",
              "dana",
              "shopeepay",
              "linkaja",
              "no_payment",
              "bank_transfer",
              "marketplace",
              "cod"
            ],
            "type": "string"
          },
          "postal_code": {
            "description": "Postal code",
            "type": "string"
          },
          "product_discount": {
            "description": "Product discount amount",
            "type": "number"
          },
          "shipment_provider_code": {
            "description": "Shipment provider code",
            "enum": [
              "mengantar",
              "lincah",
              "ninja"
            ],
            "nullable": true,
            "type": "string"
          },
          "shipping_cost": {
            "description": "Shipping cost",
            "type": "number"
          },
          "shipping_discount": {
            "description": "Shipping discount amount",
            "type": "number"
          },
          "store_unique_id": {
            "description": "Store unique ID",
            "type": "string"
          },
          "sub_payment_method": {
            "description": "Xendit VA bank code",
            "enum": [
              "BCA",
              "BNI",
              "BRI",
              "MANDIRI",
              "PERMATA",
              "BSI",
              "BJB",
              "CIMB",
              "SAHABAT_SAMPOERNA",
              "ARTAJASA"
            ],
            "type": "string"
          },
          "transferproof_url": {
            "description": "Transfer proof URL",
            "type": "string"
          },
          "warehouse_unique_id": {
            "description": "Warehouse unique ID",
            "type": "string"
          }
        },
        "required": [
          "store_unique_id",
          "customer_name"
        ],
        "title": "OrderCreateBody",
        "type": "object"
      },
      "BundlePriceOptionRelation": {
        "properties": {
          "id": {
            "description": "Bundle Price Option ID",
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "unique_id": {
            "description": "Bundle Price Option Unique ID",
            "type": "string"
          }
        },
        "title": "BundlePriceOptionRelation",
        "type": "object"
      },
      "ForProductPageDisplay": {
        "properties": {
          "id": {
            "description": "Page Display ID",
            "type": "integer"
          },
          "page": {
            "properties": {
              "id": {
                "description": "Page ID",
                "type": "integer"
              },
              "is_published": {
                "description": "Is the page published?",
                "type": "boolean"
              },
              "name": {
                "description": "Name of the page",
                "type": "string"
              },
              "published_at": {
                "description": "Publication date of the page",
                "format": "date-time",
                "type": "string"
              },
              "slug": {
                "description": "Slug for the page URL",
                "type": "string"
              },
              "store_id": {
                "description": "ID of the store the page belongs to",
                "type": "integer"
              },
              "unique_id": {
                "description": "Unique identifier for the page",
                "type": "string"
              }
            },
            "title": "PageSimple",
            "type": "object"
          }
        },
        "title": "ForProductPageDisplay",
        "type": "object"
      },
      "UpdateSharingRequestProduct": {
        "properties": {
          "is_product_sharing": {
            "description": "Is Product Sharing",
            "type": "boolean"
          }
        },
        "required": [
          "is_product_sharing"
        ],
        "title": "UpdateSharingRequestProduct",
        "type": "object"
      },
      "ProductMailketingList": {
        "properties": {
          "mailketing_list": {
            "properties": {
              "id": {
                "description": "Mailketing List ID",
                "type": "integer"
              },
              "list": {
                "description": "Mailketing List Name",
                "type": "string"
              },
              "list_name": {
                "description": "Mailketing List Name",
                "type": "string"
              }
            },
            "title": "MailketingList",
            "type": "object"
          },
          "order_status": {
            "description": "Order status",
            "enum": [
              "draft",
              "pending",
              "confirmed",
              "in_process",
              "ready",
              "shipped",
              "completed",
              "canceled",
              "rts",
              "closed"
            ],
            "type": "string"
          }
        },
        "title": "ProductMailketingList",
        "type": "object"
      },
      "CustomerOrder": {
        "properties": {
          "confirmed_at": {
            "description": "Confirmation timestamp",
            "format": "date-time",
            "type": "string"
          },
          "created_at": {
            "description": "Creation timestamp",
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "description": "Customer email",
            "format": "email",
            "type": "string"
          },
          "id": {
            "description": "Customer ID",
            "type": "integer"
          },
          "last_updated_at": {
            "description": "Last update timestamp",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Customer name",
            "type": "string"
          },
          "phone": {
            "description": "Customer phone number",
            "type": "string"
          },
          "status": {
            "description": "Customer status",
            "type": "string"
          }
        },
        "title": "CustomerOrder",
        "type": "object"
      },
      "OrderDuplicateBody": {
        "properties": {
          "financial_entity_id": {
            "description": "Financial entity ID",
            "type": "integer"
          },
          "metadata": {
            "additionalProperties": true,
            "description": "Metadata to be copied to the new order",
            "type": "object"
          },
          "payment_account_holder": {
            "description": "Payment account holder name",
            "type": "string"
          },
          "payment_account_number": {
            "description": "Payment account number",
            "type": "string"
          },
          "payment_method": {
            "description": "Order payment method",
            "enum": [
              "gopay",
              "va",
              "qris",
              "card",
              "invoice",
              "alfamart",
              "ovo",
              "dana",
              "shopeepay",
              "linkaja",
              "no_payment",
              "bank_transfer",
              "marketplace",
              "cod"
            ],
            "type": "string"
          },
          "sub_payment_method": {
            "description": "Xendit VA bank code",
            "enum": [
              "BCA",
              "BNI",
              "BRI",
              "MANDIRI",
              "PERMATA",
              "BSI",
              "BJB",
              "CIMB",
              "SAHABAT_SAMPOERNA",
              "ARTAJASA"
            ],
            "type": "string"
          }
        },
        "title": "OrderDuplicateBody",
        "type": "object"
      },
      "ProductRelations": {
        "properties": {
          "bundles": {
            "items": {
              "properties": {
                "bundle_price_options": {
                  "description": "List of bundle price options",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Bundle Price Option ID",
                        "type": "integer"
                      },
                      "name": {
                        "description": "Name",
                        "type": "string"
                      },
                      "unique_id": {
                        "description": "Bundle Price Option Unique ID",
                        "type": "string"
                      }
                    },
                    "title": "BundlePriceOptionRelation",
                    "type": "object"
                  },
                  "type": "array"
                },
                "business": {
                  "properties": {
                    "account_holder": {
                      "description": "Name of the account holder",
                      "type": "string"
                    },
                    "email": {
                      "description": "Email address of the business",
                      "format": "email",
                      "type": "string"
                    },
                    "id": {
                      "description": "Business ID",
                      "type": "integer"
                    },
                    "is_banned": {
                      "description": "Is the business banned?",
                      "type": "boolean"
                    },
                    "logo": {
                      "description": "URL to the business logo",
                      "format": "uri",
                      "type": "string"
                    },
                    "unique_id": {
                      "description": "Unique identifier for the business",
                      "type": "string"
                    },
                    "username": {
                      "description": "Username of the business",
                      "type": "string"
                    }
                  },
                  "title": "BusinessSimple",
                  "type": "object"
                },
                "id": {
                  "description": "Bundle ID",
                  "type": "integer"
                },
                "name": {
                  "description": "Name",
                  "type": "string"
                },
                "pages": {
                  "description": "Pages associated with the bundle",
                  "properties": {
                    "all": {
                      "description": "All pages associated with the bundle",
                      "items": {
                        "properties": {
                          "business": {
                            "properties": {
                              "account_holder": {
                                "description": "Name of the account holder",
                                "type": "string"
                              },
                              "email": {
                                "description": "Email address of the business",
                                "format": "email",
                                "type": "string"
                              },
                              "id": {
                                "description": "Business ID",
                                "type": "integer"
                              },
                              "is_banned": {
                                "description": "Is the business banned?",
                                "type": "boolean"
                              },
                              "logo": {
                                "description": "URL to the business logo",
                                "format": "uri",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Unique identifier for the business",
                                "type": "string"
                              },
                              "username": {
                                "description": "Username of the business",
                                "type": "string"
                              }
                            },
                            "title": "BusinessSimple",
                            "type": "object"
                          },
                          "id": {
                            "description": "Page ID",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Name of the page",
                            "type": "string"
                          },
                          "slug": {
                            "description": "Slug for the page URL",
                            "type": "string"
                          },
                          "unique_id": {
                            "description": "Unique identifier for the page",
                            "type": "string"
                          }
                        },
                        "title": "PageRelation",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "will_unpublish": {
                      "description": "Pages that will be unpublished",
                      "items": {
                        "properties": {
                          "business": {
                            "properties": {
                              "account_holder": {
                                "description": "Name of the account holder",
                                "type": "string"
                              },
                              "email": {
                                "description": "Email address of the business",
                                "format": "email",
                                "type": "string"
                              },
                              "id": {
                                "description": "Business ID",
                                "type": "integer"
                              },
                              "is_banned": {
                                "description": "Is the business banned?",
                                "type": "boolean"
                              },
                              "logo": {
                                "description": "URL to the business logo",
                                "format": "uri",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Unique identifier for the business",
                                "type": "string"
                              },
                              "username": {
                                "description": "Username of the business",
                                "type": "string"
                              }
                            },
                            "title": "BusinessSimple",
                            "type": "object"
                          },
                          "id": {
                            "description": "Page ID",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Name of the page",
                            "type": "string"
                          },
                          "slug": {
                            "description": "Slug for the page URL",
                            "type": "string"
                          },
                          "unique_id": {
                            "description": "Unique identifier for the page",
                            "type": "string"
                          }
                        },
                        "title": "PageRelation",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "stores": {
                  "description": "List of stores associated with the bundle",
                  "items": {
                    "properties": {
                      "business": {
                        "properties": {
                          "account_holder": {
                            "description": "Name of the account holder",
                            "type": "string"
                          },
                          "email": {
                            "description": "Email address of the business",
                            "format": "email",
                            "type": "string"
                          },
                          "id": {
                            "description": "Business ID",
                            "type": "integer"
                          },
                          "is_banned": {
                            "description": "Is the business banned?",
                            "type": "boolean"
                          },
                          "logo": {
                            "description": "URL to the business logo",
                            "format": "uri",
                            "type": "string"
                          },
                          "unique_id": {
                            "description": "Unique identifier for the business",
                            "type": "string"
                          },
                          "username": {
                            "description": "Username of the business",
                            "type": "string"
                          }
                        },
                        "title": "BusinessSimple",
                        "type": "object"
                      },
                      "id": {
                        "description": "Store ID",
                        "type": "integer"
                      },
                      "name": {
                        "description": "Store name",
                        "type": "string"
                      },
                      "unique_id": {
                        "description": "Unique identifier for the store",
                        "type": "string"
                      }
                    },
                    "title": "StoreRelation",
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "title": "BundleRelation",
              "type": "object"
            },
            "type": "array"
          },
          "id": {
            "description": "Product ID",
            "type": "integer"
          },
          "name": {
            "description": "Product Name",
            "type": "string"
          },
          "pages": {
            "properties": {
              "all": {
                "items": {
                  "properties": {
                    "business": {
                      "properties": {
                        "account_holder": {
                          "description": "Name of the account holder",
                          "type": "string"
                        },
                        "email": {
                          "description": "Email address of the business",
                          "format": "email",
                          "type": "string"
                        },
                        "id": {
                          "description": "Business ID",
                          "type": "integer"
                        },
                        "is_banned": {
                          "description": "Is the business banned?",
                          "type": "boolean"
                        },
                        "logo": {
                          "description": "URL to the business logo",
                          "format": "uri",
                          "type": "string"
                        },
                        "unique_id": {
                          "description": "Unique identifier for the business",
                          "type": "string"
                        },
                        "username": {
                          "description": "Username of the business",
                          "type": "string"
                        }
                      },
                      "title": "BusinessSimple",
                      "type": "object"
                    },
                    "id": {
                      "description": "Page ID",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Name of the page",
                      "type": "string"
                    },
                    "slug": {
                      "description": "Slug for the page URL",
                      "type": "string"
                    },
                    "unique_id": {
                      "description": "Unique identifier for the page",
                      "type": "string"
                    }
                  },
                  "title": "PageRelation",
                  "type": "object"
                },
                "type": "array"
              },
              "will_unpublish": {
                "items": {
                  "properties": {
                    "business": {
                      "properties": {
                        "account_holder": {
                          "description": "Name of the account holder",
                          "type": "string"
                        },
                        "email": {
                          "description": "Email address of the business",
                          "format": "email",
                          "type": "string"
                        },
                        "id": {
                          "description": "Business ID",
                          "type": "integer"
                        },
                        "is_banned": {
                          "description": "Is the business banned?",
                          "type": "boolean"
                        },
                        "logo": {
                          "description": "URL to the business logo",
                          "format": "uri",
                          "type": "string"
                        },
                        "unique_id": {
                          "description": "Unique identifier for the business",
                          "type": "string"
                        },
                        "username": {
                          "description": "Username of the business",
                          "type": "string"
                        }
                      },
                      "title": "BusinessSimple",
                      "type": "object"
                    },
                    "id": {
                      "description": "Page ID",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Name of the page",
                      "type": "string"
                    },
                    "slug": {
                      "description": "Slug for the page URL",
                      "type": "string"
                    },
                    "unique_id": {
                      "description": "Unique identifier for the page",
                      "type": "string"
                    }
                  },
                  "title": "PageRelation",
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "stores": {
            "items": {
              "properties": {
                "business": {
                  "properties": {
                    "account_holder": {
                      "description": "Name of the account holder",
                      "type": "string"
                    },
                    "email": {
                      "description": "Email address of the business",
                      "format": "email",
                      "type": "string"
                    },
                    "id": {
                      "description": "Business ID",
                      "type": "integer"
                    },
                    "is_banned": {
                      "description": "Is the business banned?",
                      "type": "boolean"
                    },
                    "logo": {
                      "description": "URL to the business logo",
                      "format": "uri",
                      "type": "string"
                    },
                    "unique_id": {
                      "description": "Unique identifier for the business",
                      "type": "string"
                    },
                    "username": {
                      "description": "Username of the business",
                      "type": "string"
                    }
                  },
                  "title": "BusinessSimple",
                  "type": "object"
                },
                "id": {
                  "description": "Store ID",
                  "type": "integer"
                },
                "name": {
                  "description": "Store name",
                  "type": "string"
                },
                "unique_id": {
                  "description": "Unique identifier for the store",
                  "type": "string"
                }
              },
              "title": "StoreRelation",
              "type": "object"
            },
            "type": "array"
          },
          "variants": {
            "items": {
              "properties": {
                "id": {
                  "description": "Variant ID",
                  "type": "integer"
                },
                "item_type": {
                  "description": "Type of the product item",
                  "enum": [
                    "physical",
                    "digital",
                    "course"
                  ],
                  "title": "ItemType",
                  "type": "string"
                },
                "name": {
                  "description": "Variant Name",
                  "type": "string"
                },
                "product_name": {
                  "description": "Product Name",
                  "type": "string"
                }
              },
              "title": "VariantRelation",
              "type": "object"
            },
            "type": "array"
          }
        },
        "title": "ProductRelations",
        "type": "object"
      },
      "ProductList": {
        "properties": {
          "business": {
            "properties": {
              "account_holder": {
                "description": "Name of the account holder",
                "type": "string"
              },
              "email": {
                "description": "Email address of the business",
                "format": "email",
                "type": "string"
              },
              "id": {
                "description": "Business ID",
                "type": "integer"
              },
              "is_banned": {
                "description": "Is the business banned?",
                "type": "boolean"
              },
              "logo": {
                "description": "URL to the business logo",
                "format": "uri",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique identifier for the business",
                "type": "string"
              },
              "username": {
                "description": "Username of the business",
                "type": "string"
              }
            },
            "title": "BusinessSimple",
            "type": "object"
          },
          "created_at": {
            "description": "Timestamp when the product was created",
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "aff_code": {
                "description": "Affiliate code of the user",
                "type": "string"
              },
              "avatar": {
                "description": "URL to user avatar",
                "format": "uri",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "format": "email",
                "type": "string"
              },
              "fullname": {
                "description": "User full name",
                "type": "string"
              },
              "id": {
                "description": "User ID",
                "type": "integer"
              },
              "phone": {
                "description": "User phone number",
                "type": "string"
              }
            },
            "title": "UserSimple",
            "type": "object"
          },
          "description": {
            "description": "Detailed description of the product",
            "type": "string"
          },
          "display": {
            "description": "Display name of the product",
            "type": "string"
          },
          "id": {
            "description": "Product primary key",
            "type": "integer"
          },
          "images": {
            "description": "List of image URLs associated with the product",
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "is_inventory": {
            "description": "Indicates if the product is tracked in inventory",
            "type": "boolean"
          },
          "is_multiple": {
            "description": "Indicates if the product has multiple variants",
            "type": "boolean"
          },
          "is_product_sharing": {
            "description": "Indicates if the product is shared across businesses",
            "type": "boolean"
          },
          "item_type": {
            "description": "Type of the product item",
            "enum": [
              "physical",
              "digital",
              "course"
            ],
            "title": "ItemType",
            "type": "string"
          },
          "item_type_name": {
            "description": "Human-readable name of the product item type",
            "type": "string"
          },
          "labels": {
            "description": "List of labels associated with the product",
            "items": {
              "properties": {
                "name": {
                  "description": "Label name",
                  "type": "string"
                }
              },
              "title": "ItemLabel",
              "type": "object"
            },
            "type": "array"
          },
          "last_updated_at": {
            "description": "Timestamp when the product was last updated",
            "format": "date-time",
            "type": "string"
          },
          "last_updated_by": {
            "properties": {
              "aff_code": {
                "description": "Affiliate code of the user",
                "type": "string"
              },
              "avatar": {
                "description": "URL to user avatar",
                "format": "uri",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "format": "email",
                "type": "string"
              },
              "fullname": {
                "description": "User full name",
                "type": "string"
              },
              "id": {
                "description": "User ID",
                "type": "integer"
              },
              "phone": {
                "description": "User phone number",
                "type": "string"
              }
            },
            "title": "UserSimple",
            "type": "object"
          },
          "name": {
            "description": "Product name",
            "type": "string"
          },
          "option1_name": {
            "description": "Name of the first product option",
            "type": "string"
          },
          "option2_name": {
            "description": "Name of the second product option",
            "type": "string"
          },
          "option3_name": {
            "description": "Name of the third product option",
            "type": "string"
          },
          "uuid": {
            "description": "Product UUID",
            "type": "string"
          },
          "variants": {
            "description": "List of variants associated with the product",
            "items": {
              "properties": {
                "digital_product_files": {
                  "description": "List of digital product files associated with the variant",
                  "items": {
                    "properties": {
                      "content_type": {
                        "description": "MIME type of the digital product file",
                        "type": "string"
                      },
                      "id": {
                        "description": "Digital product file primary key",
                        "type": "integer"
                      },
                      "name": {
                        "description": "File name of the digital product file",
                        "type": "string"
                      },
                      "size_in_bytes": {
                        "description": "Size of the digital product file in bytes",
                        "type": "integer"
                      },
                      "url": {
                        "description": "URL to access the digital product file",
                        "format": "uri",
                        "type": "string"
                      }
                    },
                    "title": "DigitalProductFile",
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "description": "Variant primary key",
                  "type": "integer"
                },
                "images": {
                  "description": "List of image URLs associated with the variant",
                  "items": {
                    "format": "uri",
                    "type": "string"
                  },
                  "type": "array"
                },
                "is_checked": {
                  "description": "Mark variant as sellable",
                  "type": "boolean"
                },
                "is_editable": {
                  "description": "Indicates if the variant is editable",
                  "type": "boolean"
                },
                "item_type": {
                  "description": "Type of the product item",
                  "enum": [
                    "physical",
                    "digital",
                    "course"
                  ],
                  "type": "string"
                },
                "metadata": {
                  "additionalProperties": true,
                  "description": "Additional metadata associated with the variant",
                  "type": "object"
                },
                "name": {
                  "description": "Full name of the variant",
                  "type": "string"
                },
                "product_name": {
                  "description": "Name of the associated product",
                  "type": "string"
                },
                "self_file_urls": {
                  "description": "List of self file URLs associated with the variant",
                  "items": {
                    "format": "uri",
                    "type": "string"
                  },
                  "type": "array"
                },
                "unique_id": {
                  "description": "Variant unique identifier",
                  "type": "string"
                },
                "uuid": {
                  "description": "Variant UUID",
                  "type": "string"
                },
                "weight": {
                  "description": "Weight of the variant in grams",
                  "type": "integer"
                }
              },
              "title": "VariantList",
              "type": "object"
            },
            "type": "array"
          }
        },
        "title": "ProductList",
        "type": "object"
      },
      "CreateRequestProduct": {
        "properties": {
          "description": {
            "description": "Description",
            "type": "string"
          },
          "is_inventory": {
            "description": "Is Inventory",
            "type": "boolean"
          },
          "is_multiple": {
            "description": "Is Multiple",
            "type": "boolean"
          },
          "is_product_sharing": {
            "description": "Is Product Sharing",
            "type": "boolean"
          },
          "item_type": {
            "description": "Type of the product item",
            "enum": [
              "physical",
              "digital",
              "course"
            ],
            "title": "ItemType",
            "type": "string"
          },
          "meta_thumbnail": {
            "description": "Meta Thumbnail",
            "format": "uri",
            "type": "string"
          },
          "name": {
            "description": "Product Name",
            "type": "string"
          },
          "option1_name": {
            "description": "Option 1 Name",
            "type": "string"
          },
          "option2_name": {
            "description": "Option 2 Name",
            "type": "string"
          },
          "option3_name": {
            "description": "Option 3 Name",
            "type": "string"
          },
          "public_name": {
            "description": "Product Public Name",
            "type": "string"
          },
          "rich_description": {
            "description": "Rich Description",
            "type": "string"
          },
          "slug": {
            "description": "Product Slug",
            "type": "string"
          },
          "taxonomy_id": {
            "description": "Taxonomy ID",
            "type": "integer"
          },
          "variants": {
            "description": "List of variants associated with the product",
            "items": {
              "properties": {
                "cogs": {
                  "description": "Cost of Goods Sold",
                  "type": "number"
                },
                "description": {
                  "description": "Variant Description",
                  "type": "string"
                },
                "images": {
                  "description": "List of image URLs",
                  "items": {
                    "format": "uri",
                    "type": "string"
                  },
                  "type": "array"
                },
                "is_checked": {
                  "description": "Mark variant as sellable",
                  "type": "boolean"
                },
                "metadata": {
                  "additionalProperties": true,
                  "description": "Additional metadata",
                  "type": "object"
                },
                "option1_value": {
                  "description": "Option 1 Value",
                  "type": "string"
                },
                "option2_value": {
                  "description": "Option 2 Value",
                  "type": "string"
                },
                "option3_value": {
                  "description": "Option 3 Value",
                  "type": "string"
                },
                "price": {
                  "description": "Price",
                  "type": "number"
                },
                "reseller_price": {
                  "description": "Reseller Price",
                  "type": "number"
                },
                "rich_description": {
                  "description": "Variant Rich Description",
                  "type": "string"
                },
                "self_file_urls": {
                  "description": "List of self file URLs",
                  "items": {
                    "format": "uri",
                    "type": "string"
                  },
                  "type": "array"
                },
                "sku": {
                  "description": "SKU",
                  "type": "string"
                },
                "weight": {
                  "description": "Weight in grams",
                  "type": "integer"
                }
              },
              "required": [
                "price",
                "weight"
              ],
              "title": "RequestVariant",
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "item_type"
        ],
        "title": "CreateRequestProduct",
        "type": "object"
      },
      "Tag": {
        "properties": {
          "id": {
            "description": "Tag ID",
            "type": "integer"
          },
          "name": {
            "description": "Tag Name",
            "type": "string"
          }
        },
        "title": "Tag",
        "type": "object"
      },
      "SimpleRole": {
        "properties": {
          "id": {
            "description": "The role ID",
            "type": "integer"
          },
          "name": {
            "description": "The name of the role",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "SimpleRole",
        "type": "object"
      },
      "PaymentAccount": {
        "properties": {
          "account_holder": {
            "description": "Account Holder Name",
            "type": "string"
          },
          "account_number": {
            "description": "Account Number",
            "type": "string"
          },
          "financial_entity": {
            "properties": {
              "code": {
                "description": "Code of the financial entity",
                "type": "string"
              },
              "duitku_code": {
                "description": "Duitku code for the financial entity",
                "type": "string"
              },
              "entity_type": {
                "description": "Type of the financial entity",
                "type": "string"
              },
              "id": {
                "description": "Financial Entity ID",
                "type": "integer"
              },
              "name": {
                "description": "Name of the financial entity",
                "type": "string"
              },
              "platform": {
                "description": "Platform associated with the financial entity",
                "type": "string"
              },
              "xendit_code": {
                "description": "Xendit code for the financial entity",
                "type": "string"
              }
            },
            "title": "FinancialEntity",
            "type": "object"
          },
          "id": {
            "description": "Payment Account ID",
            "type": "integer"
          },
          "method": {
            "description": "Payment Method",
            "type": "string"
          },
          "unique_id": {
            "description": "Unique Identifier",
            "type": "string"
          }
        },
        "title": "PaymentAccount",
        "type": "object"
      },
      "ProductNameType": {
        "properties": {
          "id": {
            "description": "Product ID",
            "type": "integer"
          },
          "item_type": {
            "description": "Type of the product item",
            "enum": [
              "physical",
              "digital",
              "course"
            ],
            "title": "ItemType",
            "type": "string"
          },
          "name": {
            "description": "Product Name",
            "type": "string"
          }
        },
        "title": "ProductNameType",
        "type": "object"
      },
      "UnauthorizedError": {
        "properties": {
          "code": {
            "example": 401,
            "type": "integer"
          },
          "status": {
            "example": "Unauthorized",
            "type": "string"
          }
        },
        "title": "UnauthorizedError",
        "type": "object"
      },
      "WarehouseAddress": {
        "properties": {
          "address": {
            "description": "Full address of the warehouse",
            "type": "string"
          },
          "city": {
            "description": "City of the warehouse address",
            "type": "string"
          },
          "id": {
            "description": "Warehouse Address ID",
            "type": "integer"
          },
          "location": {
            "description": "Location ID for the address",
            "type": "integer"
          },
          "location_id": {
            "description": "Location ID for the address",
            "type": "integer"
          },
          "postal_code": {
            "description": "Postal code of the warehouse address",
            "type": "string"
          },
          "province": {
            "description": "Province of the warehouse address",
            "type": "string"
          },
          "subdistrict": {
            "description": "Subdistrict of the warehouse address",
            "type": "string"
          },
          "warehouse": {
            "description": "ID of the associated warehouse",
            "type": "integer"
          }
        },
        "title": "WarehouseAddress",
        "type": "object"
      },
      "ShipmentStatusHistory": {
        "properties": {
          "description": {
            "description": "Description of the status update",
            "type": "string"
          },
          "status": {
            "description": "Current status of the shipment",
            "type": "string"
          },
          "timestamp": {
            "description": "Timestamp of the status update",
            "format": "date-time",
            "type": "string"
          },
          "timestamp_source": {
            "description": "Source of the timestamp",
            "type": "string"
          }
        },
        "title": "ShipmentStatusHistory",
        "type": "object"
      },
      "PageSimple": {
        "properties": {
          "id": {
            "description": "Page ID",
            "type": "integer"
          },
          "is_published": {
            "description": "Is the page published?",
            "type": "boolean"
          },
          "name": {
            "description": "Name of the page",
            "type": "string"
          },
          "published_at": {
            "description": "Publication date of the page",
            "format": "date-time",
            "type": "string"
          },
          "slug": {
            "description": "Slug for the page URL",
            "type": "string"
          },
          "store_id": {
            "description": "ID of the store the page belongs to",
            "type": "integer"
          },
          "unique_id": {
            "description": "Unique identifier for the page",
            "type": "string"
          }
        },
        "title": "PageSimple",
        "type": "object"
      },
      "ItemType": {
        "description": "Type of the product item",
        "enum": [
          "physical",
          "digital",
          "course"
        ],
        "title": "ItemType",
        "type": "string"
      },
      "BundleUpdateRequest": {
        "properties": {
          "bundlelines": {
            "description": "List of Bundle Lines",
            "items": {
              "properties": {
                "quantity": {
                  "description": "Quantity of the variant in the bundle line",
                  "type": "integer"
                },
                "variant_id": {
                  "description": "Variant ID",
                  "type": "integer"
                }
              },
              "required": [
                "variant_id",
                "quantity"
              ],
              "title": "BundleLineCreateRequest",
              "type": "object"
            },
            "type": "array"
          },
          "custom_id": {
            "description": "Custom Identifier",
            "type": "string"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "images": {
            "description": "List of Image URLs",
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "meta_thumbnail": {
            "description": "Meta Thumbnail URL",
            "format": "uri",
            "type": "string"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "public_name": {
            "description": "Public Name",
            "type": "string"
          },
          "rich_description": {
            "description": "Rich Description",
            "type": "string"
          },
          "weight_bump": {
            "description": "Weight Bump",
            "type": "integer"
          }
        },
        "title": "BundleUpdateRequest",
        "type": "object"
      },
      "PGReferenceIDs": {
        "properties": {
          "PG_REFERENCE_ID": {
            "properties": {
              "id": {
                "example": 1,
                "type": "integer"
              },
              "order_id": {
                "example": "250101ABCDEFG",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "title": "PGReferenceIDs",
        "type": "object"
      },
      "RequestStoreCourierOtherIncome": {
        "description": "Store Sales Person Request Schema",
        "properties": {
          "business_user_id": {
            "description": "Business User ID",
            "type": "integer"
          },
          "percentage": {
            "description": "Percentage of sales person",
            "type": "integer"
          },
          "weekly_schedule": {
            "description": "Weekly Schedule Schema",
            "properties": {
              "friday": {
                "description": "Day Schedule Schema",
                "properties": {
                  "end_time": {
                    "description": "End time",
                    "format": "time",
                    "type": "string"
                  },
                  "is_active": {
                    "description": "Is active",
                    "type": "boolean"
                  },
                  "start_time": {
                    "description": "Start time",
                    "format": "time",
                    "type": "string"
                  }
                },
                "required": [
                  "is_active",
                  "start_time",
                  "end_time"
                ],
                "title": "DaySchedule",
                "type": "object"
              },
              "monday": {
                "description": "Day Schedule Schema",
                "properties": {
                  "end_time": {
                    "description": "End time",
                    "format": "time",
                    "type": "string"
                  },
                  "is_active": {
                    "description": "Is active",
                    "type": "boolean"
                  },
                  "start_time": {
                    "description": "Start time",
                    "format": "time",
                    "type": "string"
                  }
                },
                "required": [
                  "is_active",
                  "start_time",
                  "end_time"
                ],
                "title": "DaySchedule",
                "type": "object"
              },
              "saturday": {
                "description": "Day Schedule Schema",
                "properties": {
                  "end_time": {
                    "description": "End time",
                    "format": "time",
                    "type": "string"
                  },
                  "is_active": {
                    "description": "Is active",
                    "type": "boolean"
                  },
                  "start_time": {
                    "description": "Start time",
                    "format": "time",
                    "type": "string"
                  }
                },
                "required": [
                  "is_active",
                  "start_time",
                  "end_time"
                ],
                "title": "DaySchedule",
                "type": "object"
              },
              "sunday": {
                "description": "Day Schedule Schema",
                "properties": {
                  "end_time": {
                    "description": "End time",
                    "format": "time",
                    "type": "string"
                  },
                  "is_active": {
                    "description": "Is active",
                    "type": "boolean"
                  },
                  "start_time": {
                    "description": "Start time",
                    "format": "time",
                    "type": "string"
                  }
                },
                "required": [
                  "is_active",
                  "start_time",
                  "end_time"
                ],
                "title": "DaySchedule",
                "type": "object"
              },
              "thursday": {
                "description": "Day Schedule Schema",
                "properties": {
                  "end_time": {
                    "description": "End time",
                    "format": "time",
                    "type": "string"
                  },
                  "is_active": {
                    "description": "Is active",
                    "type": "boolean"
                  },
                  "start_time": {
                    "description": "Start time",
                    "format": "time",
                    "type": "string"
                  }
                },
                "required": [
                  "is_active",
                  "start_time",
                  "end_time"
                ],
                "title": "DaySchedule",
                "type": "object"
              },
              "tuesday": {
                "description": "Day Schedule Schema",
                "properties": {
                  "end_time": {
                    "description": "End time",
                    "format": "time",
                    "type": "string"
                  },
                  "is_active": {
                    "description": "Is active",
                    "type": "boolean"
                  },
                  "start_time": {
                    "description": "Start time",
                    "format": "time",
                    "type": "string"
                  }
                },
                "required": [
                  "is_active",
                  "start_time",
                  "end_time"
                ],
                "title": "DaySchedule",
                "type": "object"
              },
              "wednesday": {
                "description": "Day Schedule Schema",
                "properties": {
                  "end_time": {
                    "description": "End time",
                    "format": "time",
                    "type": "string"
                  },
                  "is_active": {
                    "description": "Is active",
                    "type": "boolean"
                  },
                  "start_time": {
                    "description": "Start time",
                    "format": "time",
                    "type": "string"
                  }
                },
                "required": [
                  "is_active",
                  "start_time",
                  "end_time"
                ],
                "title": "DaySchedule",
                "type": "object"
              }
            },
            "title": "WeeklySchedule",
            "type": "object"
          }
        },
        "required": [
          "business_user_id",
          "percentage",
          "weekly_schedule"
        ],
        "title": "RequestStoreCourierOtherIncome",
        "type": "object"
      },
      "ForOrderWarehouse": {
        "properties": {
          "business": {
            "properties": {
              "account_holder": {
                "description": "Name of the account holder",
                "type": "string"
              },
              "email": {
                "description": "Email address of the business",
                "format": "email",
                "type": "string"
              },
              "id": {
                "description": "Business ID",
                "type": "integer"
              },
              "is_banned": {
                "description": "Is the business banned?",
                "type": "boolean"
              },
              "logo": {
                "description": "URL to the business logo",
                "format": "uri",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique identifier for the business",
                "type": "string"
              },
              "username": {
                "description": "Username of the business",
                "type": "string"
              }
            },
            "title": "BusinessSimple",
            "type": "object"
          },
          "contact_name": {
            "description": "Contact name at the warehouse",
            "type": "string"
          },
          "contact_phone": {
            "description": "Contact phone number at the warehouse",
            "type": "string"
          },
          "id": {
            "description": "Warehouse ID",
            "type": "integer"
          },
          "name": {
            "description": "Name of the warehouse",
            "type": "string"
          }
        },
        "title": "ForOrderWarehouse",
        "type": "object"
      },
      "StoreCourierOtherIncome": {
        "description": "Store Courier Other Income Schema",
        "properties": {
          "amount": {
            "description": "Amount of other income",
            "format": "float",
            "type": "number"
          },
          "courier_id": {
            "description": "Courier ID",
            "type": "integer"
          },
          "percentage": {
            "description": "Percentage of other income",
            "format": "float",
            "type": "number"
          },
          "type": {
            "description": "Type of other income",
            "enum": [
              "fixed",
              "percentage"
            ],
            "type": "string"
          }
        },
        "required": [
          "courier_id",
          "type"
        ],
        "title": "StoreCourierOtherIncome",
        "type": "object"
      },
      "WarehouseAddressLocationData": {
        "properties": {
          "address": {
            "description": "Full address of the warehouse",
            "type": "string"
          },
          "city": {
            "description": "City of the warehouse address",
            "type": "string"
          },
          "id": {
            "description": "Warehouse Address ID",
            "type": "integer"
          },
          "location": {
            "description": "Location ID for the address",
            "type": "integer"
          },
          "postal_code": {
            "description": "Postal code of the warehouse address",
            "type": "string"
          },
          "province": {
            "description": "Province of the warehouse address",
            "type": "string"
          },
          "subdistrict": {
            "description": "Subdistrict of the warehouse address",
            "type": "string"
          }
        },
        "title": "WarehouseAddressLocationData",
        "type": "object"
      },
      "UserSimple": {
        "properties": {
          "aff_code": {
            "description": "Affiliate code of the user",
            "type": "string"
          },
          "avatar": {
            "description": "URL to user avatar",
            "format": "uri",
            "type": "string"
          },
          "email": {
            "description": "User email",
            "format": "email",
            "type": "string"
          },
          "fullname": {
            "description": "User full name",
            "type": "string"
          },
          "id": {
            "description": "User ID",
            "type": "integer"
          },
          "phone": {
            "description": "User phone number",
            "type": "string"
          }
        },
        "title": "UserSimple",
        "type": "object"
      },
      "GenerateOrCancelAWB": {
        "properties": {
          "failures": {
            "properties": {
              "ORDER_ID": {
                "description": "Error message for the order with this ID",
                "type": "string"
              }
            },
            "type": "object"
          },
          "successes": {
            "properties": {
              "ORDER_ID": {
                "description": "Message or shipment receipt or tracking ID for the order with this ID",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "title": "GenerateOrCancelAWB",
        "type": "object"
      },
      "FinancialEntity": {
        "properties": {
          "code": {
            "description": "Code of the financial entity",
            "type": "string"
          },
          "duitku_code": {
            "description": "Duitku code for the financial entity",
            "type": "string"
          },
          "entity_type": {
            "description": "Type of the financial entity",
            "type": "string"
          },
          "id": {
            "description": "Financial Entity ID",
            "type": "integer"
          },
          "name": {
            "description": "Name of the financial entity",
            "type": "string"
          },
          "platform": {
            "description": "Platform associated with the financial entity",
            "type": "string"
          },
          "xendit_code": {
            "description": "Xendit code for the financial entity",
            "type": "string"
          }
        },
        "title": "FinancialEntity",
        "type": "object"
      },
      "BundlePriceOptionForBundle": {
        "properties": {
          "form_displays": {
            "description": "List of form displays associated with the bundle price option",
            "items": {
              "properties": {
                "id": {
                  "description": "Form Display ID",
                  "type": "integer"
                },
                "page_display": {
                  "properties": {
                    "id": {
                      "description": "Page Display ID",
                      "type": "integer"
                    },
                    "page": {
                      "properties": {
                        "id": {
                          "description": "Page ID",
                          "type": "integer"
                        },
                        "is_published": {
                          "description": "Is the page published?",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Name of the page",
                          "type": "string"
                        },
                        "published_at": {
                          "description": "Publication date of the page",
                          "format": "date-time",
                          "type": "string"
                        },
                        "slug": {
                          "description": "Slug for the page URL",
                          "type": "string"
                        },
                        "store_id": {
                          "description": "ID of the store the page belongs to",
                          "type": "integer"
                        },
                        "unique_id": {
                          "description": "Unique identifier for the page",
                          "type": "string"
                        }
                      },
                      "title": "PageSimple",
                      "type": "object"
                    }
                  },
                  "title": "ForProductPageDisplay",
                  "type": "object"
                }
              },
              "title": "ForProductFormDisplay",
              "type": "object"
            },
            "type": "array"
          },
          "id": {
            "description": "Bundle Price Option ID",
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "price": {
            "description": "Price (including tax)",
            "format": "float",
            "type": "number"
          },
          "price_bt": {
            "description": "Price before tax",
            "format": "float",
            "type": "number"
          },
          "slug": {
            "description": "Slug",
            "type": "string"
          },
          "stores": {
            "description": "List of stores where the bundle price option is available",
            "items": {
              "properties": {
                "custom_domain": {
                  "properties": {
                    "full_url": {
                      "description": "Full URL",
                      "format": "uri",
                      "type": "string"
                    },
                    "id": {
                      "description": "Custom Domain ID",
                      "type": "integer"
                    },
                    "is_verified": {
                      "description": "Is Verified",
                      "type": "boolean"
                    }
                  },
                  "title": "SimpleCustomDomain",
                  "type": "object"
                },
                "id": {
                  "description": "Store ID",
                  "type": "integer"
                },
                "name": {
                  "description": "Store name",
                  "type": "string"
                }
              },
              "title": "DomainStore",
              "type": "object"
            },
            "type": "array"
          },
          "unique_id": {
            "description": "Bundle Price Option Unique ID",
            "type": "string"
          },
          "upsell_form_displays": {
            "description": "sell form displays associated with the bundle price option",
            "items": {
              "properties": {
                "id": {
                  "description": "Form Display ID",
                  "type": "integer"
                },
                "page_display": {
                  "properties": {
                    "id": {
                      "description": "Page Display ID",
                      "type": "integer"
                    },
                    "page": {
                      "properties": {
                        "id": {
                          "description": "Page ID",
                          "type": "integer"
                        },
                        "is_published": {
                          "description": "Is the page published?",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Name of the page",
                          "type": "string"
                        },
                        "published_at": {
                          "description": "Publication date of the page",
                          "format": "date-time",
                          "type": "string"
                        },
                        "slug": {
                          "description": "Slug for the page URL",
                          "type": "string"
                        },
                        "store_id": {
                          "description": "ID of the store the page belongs to",
                          "type": "integer"
                        },
                        "unique_id": {
                          "description": "Unique identifier for the page",
                          "type": "string"
                        }
                      },
                      "title": "PageSimple",
                      "type": "object"
                    }
                  },
                  "title": "ForProductPageDisplay",
                  "type": "object"
                }
              },
              "title": "ForProductFormDisplay",
              "type": "object"
            },
            "type": "array"
          }
        },
        "title": "BundlePriceOptionForBundle",
        "type": "object"
      },
      "VariantForPageWithProduct": {
        "properties": {
          "description": {
            "description": "Variant Description",
            "type": "string"
          },
          "id": {
            "description": "Variant ID",
            "type": "integer"
          },
          "images": {
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "item_type": {
            "description": "Type of the product item",
            "enum": [
              "physical",
              "digital",
              "course"
            ],
            "title": "ItemType",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object"
          },
          "name": {
            "description": "Variant Fullname",
            "type": "string"
          },
          "option1_value": {
            "description": "Option 1 Value",
            "type": "string"
          },
          "option2_value": {
            "description": "Option 2 Value",
            "type": "string"
          },
          "option3_value": {
            "description": "Option 3 Value",
            "type": "string"
          },
          "price": {
            "description": "Price",
            "type": "number"
          },
          "product": {
            "properties": {
              "id": {
                "description": "Product ID",
                "type": "integer"
              },
              "item_type": {
                "description": "Type of the product item",
                "enum": [
                  "physical",
                  "digital",
                  "course"
                ],
                "title": "ItemType",
                "type": "string"
              },
              "name": {
                "description": "Product Name",
                "type": "string"
              }
            },
            "title": "ProductNameType",
            "type": "object"
          },
          "product_id": {
            "description": "Product ID",
            "type": "integer"
          },
          "product_name": {
            "description": "Product Name",
            "type": "string"
          },
          "rich_description": {
            "description": "Variant Rich Description",
            "type": "string"
          },
          "sku": {
            "description": "SKU",
            "type": "string"
          },
          "unique_id": {
            "description": "Variant Unique ID",
            "type": "string"
          },
          "weight": {
            "description": "Weight",
            "type": "integer"
          }
        },
        "title": "VariantForPageWithProduct",
        "type": "object"
      },
      "UpdateSharingRequestBundle": {
        "properties": {
          "is_bundle_sharing": {
            "description": "Is Bundle Sharing",
            "type": "boolean"
          }
        },
        "required": [
          "is_bundle_sharing"
        ],
        "title": "UpdateSharingRequestBundle",
        "type": "object"
      },
      "StoreRelation": {
        "properties": {
          "business": {
            "properties": {
              "account_holder": {
                "description": "Name of the account holder",
                "type": "string"
              },
              "email": {
                "description": "Email address of the business",
                "format": "email",
                "type": "string"
              },
              "id": {
                "description": "Business ID",
                "type": "integer"
              },
              "is_banned": {
                "description": "Is the business banned?",
                "type": "boolean"
              },
              "logo": {
                "description": "URL to the business logo",
                "format": "uri",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique identifier for the business",
                "type": "string"
              },
              "username": {
                "description": "Username of the business",
                "type": "string"
              }
            },
            "title": "BusinessSimple",
            "type": "object"
          },
          "id": {
            "description": "Store ID",
            "type": "integer"
          },
          "name": {
            "description": "Store name",
            "type": "string"
          },
          "unique_id": {
            "description": "Unique identifier for the store",
            "type": "string"
          }
        },
        "title": "StoreRelation",
        "type": "object"
      },
      "Product": {
        "properties": {
          "business": {
            "properties": {
              "account_holder": {
                "description": "Name of the account holder",
                "type": "string"
              },
              "email": {
                "description": "Email address of the business",
                "format": "email",
                "type": "string"
              },
              "id": {
                "description": "Business ID",
                "type": "integer"
              },
              "is_banned": {
                "description": "Is the business banned?",
                "type": "boolean"
              },
              "logo": {
                "description": "URL to the business logo",
                "format": "uri",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique identifier for the business",
                "type": "string"
              },
              "username": {
                "description": "Username of the business",
                "type": "string"
              }
            },
            "title": "BusinessSimple",
            "type": "object"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "display": {
            "description": "Product name for display",
            "type": "string"
          },
          "id": {
            "description": "Product ID",
            "type": "integer"
          },
          "is_inventory": {
            "description": "Is Inventory",
            "type": "boolean"
          },
          "is_multiple": {
            "description": "Is Multiple",
            "type": "boolean"
          },
          "is_product_sharing": {
            "description": "Is Product Sharing",
            "type": "boolean"
          },
          "item_type": {
            "description": "Type of the product item",
            "enum": [
              "physical",
              "digital",
              "course"
            ],
            "title": "ItemType",
            "type": "string"
          },
          "item_type_name": {
            "description": "Item Type Name",
            "type": "string"
          },
          "name": {
            "description": "Product Name",
            "type": "string"
          },
          "option1_name": {
            "description": "Option 1 Name",
            "type": "string"
          },
          "option2_name": {
            "description": "Option 2 Name",
            "type": "string"
          },
          "option3_name": {
            "description": "Option 3 Name",
            "type": "string"
          },
          "uuid": {
            "description": "Product UUID",
            "type": "string"
          }
        },
        "title": "Product",
        "type": "object"
      },
      "TagNameList": {
        "description": "List of tag names",
        "items": {
          "description": "Tag Name",
          "type": "string"
        },
        "title": "TagNameList",
        "type": "array"
      },
      "WarehouseAddressSimple": {
        "properties": {
          "address": {
            "description": "Full address of the warehouse",
            "type": "string"
          },
          "city": {
            "description": "City of the warehouse address",
            "type": "string"
          },
          "id": {
            "description": "Warehouse Address ID",
            "type": "integer"
          },
          "location_id": {
            "description": "Location ID for the address",
            "type": "integer"
          },
          "postal_code": {
            "description": "Postal code of the warehouse address",
            "type": "string"
          },
          "province": {
            "description": "Province of the warehouse address",
            "type": "string"
          },
          "subdistrict": {
            "description": "Subdistrict of the warehouse address",
            "type": "string"
          }
        },
        "title": "WarehouseAddressSimple",
        "type": "object"
      },
      "FollowUpChatDetail": {
        "properties": {
          "change_status": {
            "description": "Triggered after order status change to this status",
            "type": "boolean"
          },
          "hours_after": {
            "description": "Hours after which the follow-up chat is sent",
            "type": "integer"
          },
          "id": {
            "description": "Follow-up chat ID",
            "type": "integer"
          },
          "image": {
            "description": "Image URL for the follow-up chat",
            "format": "uri",
            "type": "string"
          },
          "is_default": {
            "description": "Is this a default follow-up chat",
            "type": "boolean"
          },
          "name": {
            "description": "Name of the follow-up chat",
            "type": "string"
          },
          "provider": {
            "description": "Provider of the follow-up chat",
            "type": "string"
          },
          "text": {
            "description": "Text of the follow-up chat",
            "type": "string"
          },
          "text_url": {
            "description": "URL encoded text of the follow-up chat",
            "type": "string"
          },
          "trigger": {
            "description": "Trigger for the follow-up chat",
            "type": "string"
          },
          "wa_integration_id": {
            "description": "WhatsApp integration ID for the follow-up chat",
            "type": "integer"
          }
        },
        "title": "FollowUpChatDetail",
        "type": "object"
      },
      "ProductBirdsendSequence": {
        "properties": {
          "birdsend_sequence": {
            "properties": {
              "active": {
                "description": "Indicates if the Birdsend sequence is active",
                "type": "boolean"
              },
              "form_id": {
                "description": "Identifier of the associated form",
                "type": "integer"
              },
              "id": {
                "description": "Birdsend sequence primary key",
                "type": "integer"
              },
              "name": {
                "description": "Name of the Birdsend sequence",
                "type": "string"
              },
              "sequence_id": {
                "description": "Identifier of the associated sequence",
                "type": "integer"
              },
              "type": {
                "description": "Type of the Birdsend sequence (either 'sequence' or 'form')",
                "enum": [
                  "sequence",
                  "form"
                ],
                "type": "string"
              }
            },
            "title": "BirdsendSequence",
            "type": "object"
          },
          "order_status": {
            "description": "Order status",
            "enum": [
              "draft",
              "pending",
              "confirmed",
              "in_process",
              "ready",
              "shipped",
              "completed",
              "canceled",
              "rts",
              "closed"
            ],
            "type": "string"
          }
        },
        "title": "ProductBirdsendSequence",
        "type": "object"
      },
      "DaySchedule": {
        "description": "Day Schedule Schema",
        "properties": {
          "end_time": {
            "description": "End time",
            "format": "time",
            "type": "string"
          },
          "is_active": {
            "description": "Is active",
            "type": "boolean"
          },
          "start_time": {
            "description": "Start time",
            "format": "time",
            "type": "string"
          }
        },
        "required": [
          "is_active",
          "start_time",
          "end_time"
        ],
        "title": "DaySchedule",
        "type": "object"
      },
      "DigitalProductFile": {
        "properties": {
          "content_type": {
            "description": "MIME type of the digital product file",
            "type": "string"
          },
          "id": {
            "description": "Digital product file primary key",
            "type": "integer"
          },
          "name": {
            "description": "File name of the digital product file",
            "type": "string"
          },
          "size_in_bytes": {
            "description": "Size of the digital product file in bytes",
            "type": "integer"
          },
          "url": {
            "description": "URL to access the digital product file",
            "format": "uri",
            "type": "string"
          }
        },
        "title": "DigitalProductFile",
        "type": "object"
      },
      "Courier": {
        "properties": {
          "code": {
            "description": "Courier code",
            "type": "string"
          },
          "code_ka": {
            "description": "Courier code in Georgian",
            "type": "string"
          },
          "code_lincah": {
            "description": "Courier code in Lincah",
            "type": "string"
          },
          "code_mengantar": {
            "description": "Courier code for Mengantar",
            "type": "string"
          },
          "code_ro": {
            "description": "Courier code in Romanian",
            "type": "string"
          },
          "courier_type": {
            "description": "Type of the courier",
            "enum": [
              "delivery",
              "pickup"
            ],
            "type": "string"
          },
          "id": {
            "description": "Courier ID",
            "type": "integer"
          },
          "is_pickup": {
            "description": "Is this a pickup courier?",
            "type": "boolean"
          },
          "name": {
            "description": "Courier name",
            "type": "string"
          }
        },
        "title": "Courier",
        "type": "object"
      },
      "OrderUpdateBody": {
        "properties": {
          "address": {
            "description": "Recipient address",
            "type": "string"
          },
          "channel_unique_id": {
            "description": "Channel unique ID",
            "type": "string"
          },
          "courier_service_id": {
            "description": "Courier service ID",
            "type": "integer"
          },
          "customer_email": {
            "description": "Customer email",
            "format": "email",
            "type": "string"
          },
          "customer_name": {
            "description": "Customer name",
            "type": "string"
          },
          "customer_phone": {
            "description": "Customer phone number",
            "type": "string"
          },
          "dropshipper_name": {
            "description": "Dropshipper name",
            "type": "string"
          },
          "dropshipper_phone": {
            "description": "Dropshipper phone",
            "type": "string"
          },
          "financial_entity_id": {
            "description": "Financial entity ID",
            "type": "integer"
          },
          "is_dropshipping": {
            "description": "Is dropshipping order",
            "type": "boolean"
          },
          "location_id": {
            "description": "Location ID",
            "type": "integer"
          },
          "notes": {
            "description": "Order notes",
            "type": "string"
          },
          "orderbundles": {
            "description": "Order bundles",
            "items": {
              "properties": {
                "bundle_price_option_unique_id": {
                  "description": "Bundle price option unique ID",
                  "type": "string"
                },
                "quantity": {
                  "description": "Quantity",
                  "type": "integer"
                }
              },
              "required": [
                "bundle_price_option_unique_id",
                "quantity"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "ordervariants": {
            "description": "Order variants",
            "items": {
              "properties": {
                "quantity": {
                  "description": "Quantity",
                  "type": "integer"
                },
                "variant_unique_id": {
                  "description": "Variant unique ID",
                  "type": "string"
                }
              },
              "required": [
                "variant_unique_id",
                "quantity"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "other_income": {
            "description": "Other income amount",
            "type": "number"
          },
          "other_income_name": {
            "description": "Other income name",
            "type": "string"
          },
          "page_unique_id": {
            "description": "Page unique ID",
            "type": "string"
          },
          "payment_account_holder": {
            "description": "Payment account holder name",
            "type": "string"
          },
          "payment_account_number": {
            "description": "Payment account number",
            "type": "string"
          },
          "payment_account_unique_id": {
            "description": "Payment account unique ID",
            "type": "string"
          },
          "payment_method": {
            "description": "Order payment method",
            "enum": [
              "gopay",
              "va",
              "qris",
              "card",
              "invoice",
              "alfamart",
              "ovo",
              "dana",
              "shopeepay",
              "linkaja",
              "no_payment",
              "bank_transfer",
              "marketplace",
              "cod"
            ],
            "type": "string"
          },
          "postal_code": {
            "description": "Postal code",
            "type": "string"
          },
          "product_discount": {
            "description": "Product discount amount",
            "type": "number"
          },
          "shipment_provider_code": {
            "description": "Shipment provider code",
            "enum": [
              "mengantar",
              "lincah",
              "ninja"
            ],
            "nullable": true,
            "type": "string"
          },
          "shipping_cost": {
            "description": "Shipping cost",
            "type": "number"
          },
          "shipping_discount": {
            "description": "Shipping discount amount",
            "type": "number"
          },
          "sub_payment_method": {
            "description": "Xendit VA bank code",
            "enum": [
              "BCA",
              "BNI",
              "BRI",
              "MANDIRI",
              "PERMATA",
              "BSI",
              "BJB",
              "CIMB",
              "SAHABAT_SAMPOERNA",
              "ARTAJASA"
            ],
            "type": "string"
          },
          "transferproof_url": {
            "description": "Transfer proof URL",
            "type": "string"
          },
          "warehouse_unique_id": {
            "description": "Warehouse unique ID",
            "type": "string"
          }
        },
        "title": "OrderUpdateBody",
        "type": "object"
      },
      "RequestVariant": {
        "properties": {
          "cogs": {
            "description": "Cost of Goods Sold",
            "type": "number"
          },
          "description": {
            "description": "Variant Description",
            "type": "string"
          },
          "images": {
            "description": "List of image URLs",
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "is_checked": {
            "description": "Mark variant as sellable",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": true,
            "description": "Additional metadata",
            "type": "object"
          },
          "option1_value": {
            "description": "Option 1 Value",
            "type": "string"
          },
          "option2_value": {
            "description": "Option 2 Value",
            "type": "string"
          },
          "option3_value": {
            "description": "Option 3 Value",
            "type": "string"
          },
          "price": {
            "description": "Price",
            "type": "number"
          },
          "reseller_price": {
            "description": "Reseller Price",
            "type": "number"
          },
          "rich_description": {
            "description": "Variant Rich Description",
            "type": "string"
          },
          "self_file_urls": {
            "description": "List of self file URLs",
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "sku": {
            "description": "SKU",
            "type": "string"
          },
          "weight": {
            "description": "Weight in grams",
            "type": "integer"
          }
        },
        "required": [
          "price",
          "weight"
        ],
        "title": "RequestVariant",
        "type": "object"
      },
      "BundleLineCreateRequest": {
        "properties": {
          "quantity": {
            "description": "Quantity of the variant in the bundle line",
            "type": "integer"
          },
          "variant_id": {
            "description": "Variant ID",
            "type": "integer"
          }
        },
        "required": [
          "variant_id",
          "quantity"
        ],
        "title": "BundleLineCreateRequest",
        "type": "object"
      },
      "Bundle": {
        "properties": {
          "bundle_price_options": {
            "description": "List of Bundle Price Options",
            "items": {
              "properties": {
                "form_displays": {
                  "description": "List of form displays associated with the bundle price option",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Form Display ID",
                        "type": "integer"
                      },
                      "page_display": {
                        "properties": {
                          "id": {
                            "description": "Page Display ID",
                            "type": "integer"
                          },
                          "page": {
                            "properties": {
                              "id": {
                                "description": "Page ID",
                                "type": "integer"
                              },
                              "is_published": {
                                "description": "Is the page published?",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name of the page",
                                "type": "string"
                              },
                              "published_at": {
                                "description": "Publication date of the page",
                                "format": "date-time",
                                "type": "string"
                              },
                              "slug": {
                                "description": "Slug for the page URL",
                                "type": "string"
                              },
                              "store_id": {
                                "description": "ID of the store the page belongs to",
                                "type": "integer"
                              },
                              "unique_id": {
                                "description": "Unique identifier for the page",
                                "type": "string"
                              }
                            },
                            "title": "PageSimple",
                            "type": "object"
                          }
                        },
                        "title": "ForProductPageDisplay",
                        "type": "object"
                      }
                    },
                    "title": "ForProductFormDisplay",
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "description": "Bundle Price Option ID",
                  "type": "integer"
                },
                "name": {
                  "description": "Name",
                  "type": "string"
                },
                "price": {
                  "description": "Price (including tax)",
                  "format": "float",
                  "type": "number"
                },
                "price_bt": {
                  "description": "Price before tax",
                  "format": "float",
                  "type": "number"
                },
                "slug": {
                  "description": "Slug",
                  "type": "string"
                },
                "stores": {
                  "description": "List of stores where the bundle price option is available",
                  "items": {
                    "properties": {
                      "custom_domain": {
                        "properties": {
                          "full_url": {
                            "description": "Full URL",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "description": "Custom Domain ID",
                            "type": "integer"
                          },
                          "is_verified": {
                            "description": "Is Verified",
                            "type": "boolean"
                          }
                        },
                        "title": "SimpleCustomDomain",
                        "type": "object"
                      },
                      "id": {
                        "description": "Store ID",
                        "type": "integer"
                      },
                      "name": {
                        "description": "Store name",
                        "type": "string"
                      }
                    },
                    "title": "DomainStore",
                    "type": "object"
                  },
                  "type": "array"
                },
                "unique_id": {
                  "description": "Bundle Price Option Unique ID",
                  "type": "string"
                },
                "upsell_form_displays": {
                  "description": "sell form displays associated with the bundle price option",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Form Display ID",
                        "type": "integer"
                      },
                      "page_display": {
                        "properties": {
                          "id": {
                            "description": "Page Display ID",
                            "type": "integer"
                          },
                          "page": {
                            "properties": {
                              "id": {
                                "description": "Page ID",
                                "type": "integer"
                              },
                              "is_published": {
                                "description": "Is the page published?",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name of the page",
                                "type": "string"
                              },
                              "published_at": {
                                "description": "Publication date of the page",
                                "format": "date-time",
                                "type": "string"
                              },
                              "slug": {
                                "description": "Slug for the page URL",
                                "type": "string"
                              },
                              "store_id": {
                                "description": "ID of the store the page belongs to",
                                "type": "integer"
                              },
                              "unique_id": {
                                "description": "Unique identifier for the page",
                                "type": "string"
                              }
                            },
                            "title": "PageSimple",
                            "type": "object"
                          }
                        },
                        "title": "ForProductPageDisplay",
                        "type": "object"
                      }
                    },
                    "title": "ForProductFormDisplay",
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "title": "BundlePriceOptionForBundle",
              "type": "object"
            },
            "type": "array"
          },
          "bundlelines": {
            "description": "List of Bundle Lines with Product details",
            "items": {
              "properties": {
                "id": {
                  "description": "Bundle Line ID",
                  "type": "integer"
                },
                "quantity": {
                  "description": "Quantity of the variant in the bundle line",
                  "type": "integer"
                },
                "subtotal": {
                  "description": "Subtotal price for the bundle line (variant price * quantity)",
                  "format": "decimal",
                  "type": "string"
                },
                "variant": {
                  "properties": {
                    "cogs": {
                      "description": "Cost of Goods Sold",
                      "type": "number"
                    },
                    "cogs_bt": {
                      "description": "Cost of Goods Sold before tax",
                      "type": "number"
                    },
                    "created_at": {
                      "description": "Timestamp when the variant was created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "digital_product_files": {
                      "description": "List of digital product files associated with the variant",
                      "items": {
                        "properties": {
                          "content_type": {
                            "description": "MIME type of the digital product file",
                            "type": "string"
                          },
                          "id": {
                            "description": "Digital product file primary key",
                            "type": "integer"
                          },
                          "name": {
                            "description": "File name of the digital product file",
                            "type": "string"
                          },
                          "size_in_bytes": {
                            "description": "Size of the digital product file in bytes",
                            "type": "integer"
                          },
                          "url": {
                            "description": "URL to access the digital product file",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "title": "DigitalProductFile",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "display": {
                      "description": "Display name for the variant",
                      "type": "string"
                    },
                    "fullname": {
                      "description": "Full name of the variant",
                      "type": "string"
                    },
                    "id": {
                      "description": "Variant primary key",
                      "type": "integer"
                    },
                    "images": {
                      "description": "List of image URLs associated with the variant",
                      "items": {
                        "format": "uri",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "is_checked": {
                      "description": "Mark variant as sellable",
                      "type": "boolean"
                    },
                    "is_editable": {
                      "description": "Indicates if the variant is editable",
                      "type": "boolean"
                    },
                    "item_type": {
                      "description": "Type of the product item",
                      "enum": [
                        "physical",
                        "digital",
                        "course"
                      ],
                      "type": "string"
                    },
                    "last_updated_at": {
                      "description": "Timestamp when the variant was last updated",
                      "format": "date-time",
                      "type": "string"
                    },
                    "metadata": {
                      "additionalProperties": true,
                      "description": "Additional metadata associated with the variant",
                      "type": "object"
                    },
                    "name": {
                      "description": "Full name of the variant",
                      "type": "string"
                    },
                    "option1_value": {
                      "description": "Value of the first product option",
                      "type": "string"
                    },
                    "option2_value": {
                      "description": "Value of the second product option",
                      "type": "string"
                    },
                    "option3_value": {
                      "description": "Value of the third product option",
                      "type": "string"
                    },
                    "price": {
                      "description": "Price of the variant",
                      "type": "number"
                    },
                    "price_bt": {
                      "description": "Price before tax",
                      "type": "number"
                    },
                    "product": {
                      "properties": {
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "description": {
                          "description": "Description",
                          "type": "string"
                        },
                        "display": {
                          "description": "Product name for display",
                          "type": "string"
                        },
                        "id": {
                          "description": "Product ID",
                          "type": "integer"
                        },
                        "is_inventory": {
                          "description": "Is Inventory",
                          "type": "boolean"
                        },
                        "is_multiple": {
                          "description": "Is Multiple",
                          "type": "boolean"
                        },
                        "is_product_sharing": {
                          "description": "Is Product Sharing",
                          "type": "boolean"
                        },
                        "item_type": {
                          "description": "Type of the product item",
                          "enum": [
                            "physical",
                            "digital",
                            "course"
                          ],
                          "title": "ItemType",
                          "type": "string"
                        },
                        "item_type_name": {
                          "description": "Item Type Name",
                          "type": "string"
                        },
                        "name": {
                          "description": "Product Name",
                          "type": "string"
                        },
                        "option1_name": {
                          "description": "Option 1 Name",
                          "type": "string"
                        },
                        "option2_name": {
                          "description": "Option 2 Name",
                          "type": "string"
                        },
                        "option3_name": {
                          "description": "Option 3 Name",
                          "type": "string"
                        },
                        "uuid": {
                          "description": "Product UUID",
                          "type": "string"
                        }
                      },
                      "title": "Product",
                      "type": "object"
                    },
                    "product_name": {
                      "description": "Name of the associated product",
                      "type": "string"
                    },
                    "reseller_price": {
                      "description": "Reseller price of the variant",
                      "type": "number"
                    },
                    "reseller_price_bt": {
                      "description": "Reseller price before tax",
                      "type": "number"
                    },
                    "self_file_urls": {
                      "description": "List of self file URLs associated with the variant",
                      "items": {
                        "format": "uri",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "sku": {
                      "description": "Stock Keeping Unit",
                      "type": "string"
                    },
                    "unique_id": {
                      "description": "Variant unique identifier",
                      "type": "string"
                    },
                    "uuid": {
                      "description": "Variant UUID",
                      "type": "string"
                    },
                    "weight": {
                      "description": "Weight of the variant in grams",
                      "type": "integer"
                    }
                  },
                  "title": "Variant",
                  "type": "object"
                }
              },
              "title": "BundleLine",
              "type": "object"
            },
            "type": "array"
          },
          "business": {
            "properties": {
              "account_holder": {
                "description": "Name of the account holder",
                "type": "string"
              },
              "email": {
                "description": "Email address of the business",
                "format": "email",
                "type": "string"
              },
              "id": {
                "description": "Business ID",
                "type": "integer"
              },
              "is_banned": {
                "description": "Is the business banned?",
                "type": "boolean"
              },
              "logo": {
                "description": "URL to the business logo",
                "format": "uri",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique identifier for the business",
                "type": "string"
              },
              "username": {
                "description": "Username of the business",
                "type": "string"
              }
            },
            "title": "BusinessSimple",
            "type": "object"
          },
          "created_at": {
            "description": "Creation timestamp",
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "aff_code": {
                "description": "Affiliate code of the user",
                "type": "string"
              },
              "avatar": {
                "description": "URL to user avatar",
                "format": "uri",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "format": "email",
                "type": "string"
              },
              "fullname": {
                "description": "User full name",
                "type": "string"
              },
              "id": {
                "description": "User ID",
                "type": "integer"
              },
              "phone": {
                "description": "User phone number",
                "type": "string"
              }
            },
            "title": "UserSimple",
            "type": "object"
          },
          "custom_id": {
            "description": "Custom Identifier",
            "type": "string"
          },
          "description": {
            "description": "Description",
            "type": "string"
          },
          "id": {
            "description": "Bundle ID",
            "type": "integer"
          },
          "images": {
            "description": "List of Image URLs",
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "is_bundle_sharing": {
            "description": "Is Bundle Sharing Enabled",
            "type": "boolean"
          },
          "labels": {
            "description": "List of labels associated with the product",
            "items": {
              "properties": {
                "name": {
                  "description": "Label name",
                  "type": "string"
                }
              },
              "title": "ItemLabel",
              "type": "object"
            },
            "type": "array"
          },
          "last_updated_at": {
            "description": "Last update timestamp",
            "format": "date-time",
            "type": "string"
          },
          "last_updated_by": {
            "properties": {
              "aff_code": {
                "description": "Affiliate code of the user",
                "type": "string"
              },
              "avatar": {
                "description": "URL to user avatar",
                "format": "uri",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "format": "email",
                "type": "string"
              },
              "fullname": {
                "description": "User full name",
                "type": "string"
              },
              "id": {
                "description": "User ID",
                "type": "integer"
              },
              "phone": {
                "description": "User phone number",
                "type": "string"
              }
            },
            "title": "UserSimple",
            "type": "object"
          },
          "meta_thumbnail": {
            "description": "Meta Thumbnail URL",
            "format": "uri",
            "type": "string"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "public_name": {
            "description": "Public Name",
            "type": "string"
          },
          "rich_description": {
            "description": "Rich Description",
            "type": "string"
          },
          "weight_bump": {
            "description": "Weight Bump",
            "type": "integer"
          }
        },
        "title": "Bundle",
        "type": "object"
      },
      "OrderLine": {
        "properties": {
          "cogs": {
            "description": "Cost of Goods Sold for this order line",
            "format": "float",
            "type": "number"
          },
          "cogs_bt": {
            "description": "COGS for this order line minus tax",
            "format": "float",
            "type": "number"
          },
          "discount": {
            "description": "Discount amount applied",
            "format": "float",
            "type": "number"
          },
          "discount_bt": {
            "description": "Discount amount minus tax",
            "format": "float",
            "type": "number"
          },
          "discount_code_discount": {
            "description": "Discount from a discount code",
            "format": "float",
            "type": "number"
          },
          "discount_code_discount_bt": {
            "description": "Discount from a discount code minus tax",
            "format": "float",
            "type": "number"
          },
          "discount_rate": {
            "description": "Discount rate applied to this order line",
            "format": "float",
            "type": "number"
          },
          "id": {
            "description": "Order Line ID",
            "type": "integer"
          },
          "inserted_at": {
            "description": "Timestamp when the order line was created",
            "example": "2023-10-01T12:00:00Z",
            "format": "date-time",
            "type": "string"
          },
          "is_inventory": {
            "description": "Is this order line related to inventory?",
            "type": "boolean"
          },
          "item_type": {
            "description": "Type of the item",
            "type": "string"
          },
          "product_business": {
            "description": "Business ID of the product",
            "type": "integer"
          },
          "product_name": {
            "description": "Name of the product",
            "type": "string"
          },
          "product_price": {
            "description": "Price of the product before discounts",
            "format": "float",
            "type": "number"
          },
          "product_price_bt": {
            "description": "Price of the product before discounts minus tax",
            "format": "float",
            "type": "number"
          },
          "quantity": {
            "description": "Quantity of the item",
            "type": "integer"
          },
          "reseller_product_price": {
            "description": "Reseller price of the product",
            "format": "float",
            "type": "number"
          },
          "reseller_product_price_bt": {
            "description": "Reseller price of the product minus tax",
            "format": "float",
            "type": "number"
          },
          "tax_rate": {
            "description": "Tax rate applied to this order line",
            "format": "float",
            "type": "number"
          },
          "variant": {
            "description": "Variant ID",
            "type": "integer"
          },
          "variant_cogs": {
            "description": "COGS of the variant",
            "format": "float",
            "type": "number"
          },
          "variant_cogs_bt": {
            "description": "COGS of the varian minus tax",
            "format": "float",
            "type": "number"
          },
          "variant_option1_value": {
            "description": "Value of option 1 for the variant",
            "type": "string"
          },
          "variant_option2_value": {
            "description": "Value of option 2 for the variant",
            "type": "string"
          },
          "variant_option3_value": {
            "description": "Value of option 3 for the variant",
            "type": "string"
          },
          "variant_price": {
            "description": "Price of the variant",
            "format": "float",
            "type": "number"
          },
          "variant_price_bt": {
            "description": "Price of the variant minus tax",
            "format": "float",
            "type": "number"
          },
          "variant_reseller_price": {
            "description": "Reseller price of the variant",
            "format": "float",
            "type": "number"
          },
          "variant_reseller_price_bt": {
            "description": "Reseller price of the variant minus tax",
            "format": "float",
            "type": "number"
          },
          "variant_sku": {
            "description": "SKU of the variant",
            "type": "string"
          },
          "weight": {
            "description": "Weight of the product",
            "format": "float",
            "type": "number"
          }
        },
        "title": "OrderLine",
        "type": "object"
      },
      "OrderCreateShipmentStatusHistoryBody": {
        "properties": {
          "description": {
            "description": "Description of the shipment status change",
            "type": "string"
          },
          "status": {
            "description": "Order status",
            "enum": [
              "draft",
              "pending",
              "confirmed",
              "in_process",
              "ready",
              "shipped",
              "completed",
              "canceled",
              "rts",
              "closed"
            ],
            "type": "string"
          },
          "timestamp": {
            "description": "Timestamp of the shipment status change (ISO 8601 format)",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "timestamp",
          "status",
          "description"
        ],
        "title": "OrderCreateShipmentStatusHistoryBody",
        "type": "object"
      },
      "BundleListSimplified": {
        "properties": {
          "bundle_price_options": {
            "description": "List of Bundle Price Options",
            "items": {
              "properties": {
                "id": {
                  "description": "Bundle Price Option ID",
                  "type": "integer"
                },
                "is_owned_by_store": {
                  "description": "Is owned by store",
                  "type": "boolean"
                },
                "name": {
                  "description": "Name",
                  "type": "string"
                },
                "price": {
                  "description": "Price (including tax)",
                  "format": "float",
                  "type": "number"
                },
                "price_bt": {
                  "description": "Price before tax",
                  "format": "float",
                  "type": "number"
                },
                "slug": {
                  "description": "Slug",
                  "type": "string"
                },
                "unique_id": {
                  "description": "Bundle Price Option Unique ID",
                  "type": "string"
                }
              },
              "title": "BundlePriceOptionSimple",
              "type": "object"
            },
            "type": "array"
          },
          "custom_id": {
            "description": "Custom Identifier",
            "type": "string"
          },
          "display": {
            "description": "Display Name",
            "type": "string"
          },
          "id": {
            "description": "Bundle ID",
            "type": "integer"
          },
          "images": {
            "description": "List of Image URLs",
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "is_bundle_sharing": {
            "description": "Is Bundle Sharing Enabled",
            "type": "boolean"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "public_name": {
            "description": "Public Name",
            "type": "string"
          },
          "weight_bump": {
            "description": "Weight Bump",
            "type": "integer"
          }
        },
        "title": "BundleListSimplified",
        "type": "object"
      },
      "ForStoreProductList": {
        "properties": {
          "display": {
            "description": "Display name of the product",
            "type": "string"
          },
          "id": {
            "description": "Product primary key",
            "type": "integer"
          },
          "images": {
            "description": "List of image URLs associated with the product",
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "item_type": {
            "description": "Type of the product item",
            "enum": [
              "physical",
              "digital",
              "course"
            ],
            "title": "ItemType",
            "type": "string"
          },
          "item_type_name": {
            "description": "Human-readable name of the product item type",
            "type": "string"
          },
          "labels": {
            "description": "List of labels associated with the product",
            "items": {
              "properties": {
                "name": {
                  "description": "Label name",
                  "type": "string"
                }
              },
              "title": "ItemLabel",
              "type": "object"
            },
            "type": "array"
          },
          "name": {
            "description": "Product name",
            "type": "string"
          },
          "option1_name": {
            "description": "Name of first option value",
            "type": "string"
          },
          "option2_name": {
            "description": "Name of 2nd option value",
            "type": "string"
          },
          "option3_name": {
            "description": "Name of 3rd option value",
            "type": "string"
          },
          "public_name": {
            "description": "Product Public name",
            "type": "string"
          },
          "uuid": {
            "description": "Product UUID",
            "type": "string"
          },
          "variant_count": {
            "description": "Count of variants associated with the product",
            "type": "integer"
          },
          "variants": {
            "description": "List of variants associated with the product",
            "items": {
              "properties": {
                "available_qty": {
                  "description": "Available quantity of the variant in inventory",
                  "type": "integer"
                },
                "id": {
                  "description": "Variant primary key",
                  "type": "integer"
                },
                "images": {
                  "description": "List of image URLs associated with the variant",
                  "items": {
                    "format": "uri",
                    "type": "string"
                  },
                  "type": "array"
                },
                "is_checked": {
                  "description": "Mark variant as sellable",
                  "type": "boolean"
                },
                "is_editable": {
                  "description": "Indicates if the variant is editable",
                  "type": "boolean"
                },
                "item_type": {
                  "description": "Type of the product item",
                  "enum": [
                    "physical",
                    "digital",
                    "course"
                  ],
                  "type": "string"
                },
                "metadata": {
                  "additionalProperties": true,
                  "description": "Additional metadata associated with the variant",
                  "type": "object"
                },
                "name": {
                  "description": "Full name of the variant",
                  "type": "string"
                },
                "option1_color": {
                  "description": "Color associated with the first product option",
                  "type": "string"
                },
                "option1_icon_url": {
                  "description": "Icon URL for the first product option",
                  "format": "uri",
                  "type": "string"
                },
                "option1_value": {
                  "description": "Value of the first product option",
                  "type": "string"
                },
                "option2_color": {
                  "description": "Color associated with the second product option",
                  "type": "string"
                },
                "option2_icon_url": {
                  "description": "Icon URL for the second product option",
                  "format": "uri",
                  "type": "string"
                },
                "option2_value": {
                  "description": "Value of the second product option",
                  "type": "string"
                },
                "option3_color": {
                  "description": "Color associated with the third product option",
                  "type": "string"
                },
                "option3_icon_url": {
                  "description": "Icon URL for the third product option",
                  "format": "uri",
                  "type": "string"
                },
                "option3_value": {
                  "description": "Value of the third product option",
                  "type": "string"
                },
                "price": {
                  "description": "Price of the variant",
                  "type": "number"
                },
                "product_name": {
                  "description": "Name of the associated product",
                  "type": "string"
                },
                "reseller_price": {
                  "description": "Reseller price of the variant",
                  "type": "number"
                },
                "unique_id": {
                  "description": "Variant unique identifier",
                  "type": "string"
                },
                "uuid": {
                  "description": "Variant UUID",
                  "type": "string"
                },
                "weight": {
                  "description": "Weight of the variant in grams",
                  "type": "integer"
                }
              },
              "title": "ForStoreListVariant",
              "type": "object"
            },
            "type": "array"
          }
        },
        "title": "ForStoreProductList",
        "type": "object"
      },
      "Variant": {
        "properties": {
          "cogs": {
            "description": "Cost of Goods Sold",
            "type": "number"
          },
          "cogs_bt": {
            "description": "Cost of Goods Sold before tax",
            "type": "number"
          },
          "created_at": {
            "description": "Timestamp when the variant was created",
            "format": "date-time",
            "type": "string"
          },
          "digital_product_files": {
            "description": "List of digital product files associated with the variant",
            "items": {
              "properties": {
                "content_type": {
                  "description": "MIME type of the digital product file",
                  "type": "string"
                },
                "id": {
                  "description": "Digital product file primary key",
                  "type": "integer"
                },
                "name": {
                  "description": "File name of the digital product file",
                  "type": "string"
                },
                "size_in_bytes": {
                  "description": "Size of the digital product file in bytes",
                  "type": "integer"
                },
                "url": {
                  "description": "URL to access the digital product file",
                  "format": "uri",
                  "type": "string"
                }
              },
              "title": "DigitalProductFile",
              "type": "object"
            },
            "type": "array"
          },
          "display": {
            "description": "Display name for the variant",
            "type": "string"
          },
          "fullname": {
            "description": "Full name of the variant",
            "type": "string"
          },
          "id": {
            "description": "Variant primary key",
            "type": "integer"
          },
          "images": {
            "description": "List of image URLs associated with the variant",
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "is_checked": {
            "description": "Mark variant as sellable",
            "type": "boolean"
          },
          "is_editable": {
            "description": "Indicates if the variant is editable",
            "type": "boolean"
          },
          "item_type": {
            "description": "Type of the product item",
            "enum": [
              "physical",
              "digital",
              "course"
            ],
            "type": "string"
          },
          "last_updated_at": {
            "description": "Timestamp when the variant was last updated",
            "format": "date-time",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": true,
            "description": "Additional metadata associated with the variant",
            "type": "object"
          },
          "name": {
            "description": "Full name of the variant",
            "type": "string"
          },
          "option1_value": {
            "description": "Value of the first product option",
            "type": "string"
          },
          "option2_value": {
            "description": "Value of the second product option",
            "type": "string"
          },
          "option3_value": {
            "description": "Value of the third product option",
            "type": "string"
          },
          "price": {
            "description": "Price of the variant",
            "type": "number"
          },
          "price_bt": {
            "description": "Price before tax",
            "type": "number"
          },
          "product": {
            "properties": {
              "business": {
                "properties": {
                  "account_holder": {
                    "description": "Name of the account holder",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email address of the business",
                    "format": "email",
                    "type": "string"
                  },
                  "id": {
                    "description": "Business ID",
                    "type": "integer"
                  },
                  "is_banned": {
                    "description": "Is the business banned?",
                    "type": "boolean"
                  },
                  "logo": {
                    "description": "URL to the business logo",
                    "format": "uri",
                    "type": "string"
                  },
                  "unique_id": {
                    "description": "Unique identifier for the business",
                    "type": "string"
                  },
                  "username": {
                    "description": "Username of the business",
                    "type": "string"
                  }
                },
                "title": "BusinessSimple",
                "type": "object"
              },
              "description": {
                "description": "Description",
                "type": "string"
              },
              "display": {
                "description": "Product name for display",
                "type": "string"
              },
              "id": {
                "description": "Product ID",
                "type": "integer"
              },
              "is_inventory": {
                "description": "Is Inventory",
                "type": "boolean"
              },
              "is_multiple": {
                "description": "Is Multiple",
                "type": "boolean"
              },
              "is_product_sharing": {
                "description": "Is Product Sharing",
                "type": "boolean"
              },
              "item_type": {
                "description": "Type of the product item",
                "enum": [
                  "physical",
                  "digital",
                  "course"
                ],
                "title": "ItemType",
                "type": "string"
              },
              "item_type_name": {
                "description": "Item Type Name",
                "type": "string"
              },
              "name": {
                "description": "Product Name",
                "type": "string"
              },
              "option1_name": {
                "description": "Option 1 Name",
                "type": "string"
              },
              "option2_name": {
                "description": "Option 2 Name",
                "type": "string"
              },
              "option3_name": {
                "description": "Option 3 Name",
                "type": "string"
              },
              "uuid": {
                "description": "Product UUID",
                "type": "string"
              }
            },
            "title": "Product",
            "type": "object"
          },
          "product_name": {
            "description": "Name of the associated product",
            "type": "string"
          },
          "reseller_price": {
            "description": "Reseller price of the variant",
            "type": "number"
          },
          "reseller_price_bt": {
            "description": "Reseller price before tax",
            "type": "number"
          },
          "self_file_urls": {
            "description": "List of self file URLs associated with the variant",
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "sku": {
            "description": "Stock Keeping Unit",
            "type": "string"
          },
          "unique_id": {
            "description": "Variant unique identifier",
            "type": "string"
          },
          "uuid": {
            "description": "Variant UUID",
            "type": "string"
          },
          "weight": {
            "description": "Weight of the variant in grams",
            "type": "integer"
          }
        },
        "title": "Variant",
        "type": "object"
      },
      "ItemLabel": {
        "properties": {
          "name": {
            "description": "Label name",
            "type": "string"
          }
        },
        "title": "ItemLabel",
        "type": "object"
      },
      "CourierCode": {
        "description": "Schema for a courier code",
        "enum": [
          "ninja",
          "ide",
          "sicepat",
          "sap",
          "ncs",
          "anteraja",
          "sentral",
          "jne",
          "jnt",
          "pos",
          "lion",
          "rex",
          "jtl",
          "tiki",
          "rpx",
          "pandu",
          "wahana",
          "pahala",
          "jet",
          "slis",
          "dse",
          "first",
          "star",
          "idl"
        ],
        "example": "jne",
        "title": "CourierCode",
        "type": "string"
      },
      "ProductTaxonomy": {
        "properties": {
          "full_path": {
            "description": "Full Path",
            "type": "string"
          },
          "id": {
            "description": "Taxonomy ID",
            "type": "integer"
          },
          "level_1": {
            "description": "Level 1",
            "type": "string"
          },
          "level_2": {
            "description": "Level 2",
            "type": "string"
          },
          "level_3": {
            "description": "Level 3",
            "type": "string"
          },
          "level_4": {
            "description": "Level 4",
            "type": "string"
          },
          "level_5": {
            "description": "Level 5",
            "type": "string"
          },
          "level_6": {
            "description": "Level 6",
            "type": "string"
          },
          "level_7": {
            "description": "Level 7",
            "type": "string"
          }
        },
        "title": "ProductTaxonomy",
        "type": "object"
      },
      "ListStore": {
        "properties": {
          "business_id": {
            "description": "Business ID",
            "type": "integer"
          },
          "cod_purchase_triggers": {
            "description": "COD purchase triggers",
            "items": {
              "enum": [
                "public_upload",
                "internal_upload",
                "confirmed",
                "shipped",
                "completed"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "created_at": {
            "description": "Creation timestamp",
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "properties": {
              "aff_code": {
                "description": "Affiliate code of the user",
                "type": "string"
              },
              "avatar": {
                "description": "URL to user avatar",
                "format": "uri",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "format": "email",
                "type": "string"
              },
              "fullname": {
                "description": "User full name",
                "type": "string"
              },
              "id": {
                "description": "User ID",
                "type": "integer"
              },
              "phone": {
                "description": "User phone number",
                "type": "string"
              }
            },
            "title": "UserSimple",
            "type": "object"
          },
          "custom_domain": {
            "properties": {
              "full_url": {
                "description": "Full URL",
                "format": "uri",
                "type": "string"
              },
              "id": {
                "description": "Custom Domain ID",
                "type": "integer"
              },
              "is_verified": {
                "description": "Is Verified",
                "type": "boolean"
              }
            },
            "title": "SimpleCustomDomain",
            "type": "object"
          },
          "id": {
            "description": "Store ID",
            "type": "integer"
          },
          "is_dropshipping_allowed": {
            "description": "Is dropshipping allowed in this store?",
            "type": "boolean"
          },
          "is_manual_shipping_cost": {
            "description": "Is manual shipping cost enabled?",
            "type": "boolean"
          },
          "is_moota_enabled": {
            "description": "Is Moota integration enabled for this store?",
            "type": "boolean"
          },
          "is_show_scalev_branding": {
            "description": "Is Scalev branding shown?",
            "type": "boolean"
          },
          "is_transferproof_required": {
            "description": "Is transfer proof required for orders in this store?",
            "type": "boolean"
          },
          "is_unique_code": {
            "description": "Is unique code required for orders?",
            "type": "boolean"
          },
          "last_updated_at": {
            "description": "Last update timestamp",
            "format": "date-time",
            "type": "string"
          },
          "last_updated_by": {
            "properties": {
              "aff_code": {
                "description": "Affiliate code of the user",
                "type": "string"
              },
              "avatar": {
                "description": "URL to user avatar",
                "format": "uri",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "format": "email",
                "type": "string"
              },
              "fullname": {
                "description": "User full name",
                "type": "string"
              },
              "id": {
                "description": "User ID",
                "type": "integer"
              },
              "phone": {
                "description": "User phone number",
                "type": "string"
              }
            },
            "title": "UserSimple",
            "type": "object"
          },
          "logo": {
            "description": "URL of the store logo",
            "format": "uri",
            "type": "string"
          },
          "max_unique_code_amount": {
            "description": "Maximum amount for unique code orders",
            "type": "integer"
          },
          "name": {
            "description": "Name of the store",
            "type": "string"
          },
          "non_cod_purchase_triggers": {
            "description": "Non-COD purchase triggers",
            "items": {
              "enum": [
                "public_upload",
                "internal_upload",
                "confirmed",
                "shipped",
                "completed"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "unique_id": {
            "description": "Unique identifier for the store",
            "type": "string"
          },
          "uuid": {
            "description": "UUID of the store",
            "type": "string"
          },
          "warehouse_id": {
            "description": "Warehouse ID",
            "type": "integer"
          }
        },
        "title": "ListStore",
        "type": "object"
      },
      "OrderChangeStatus": {
        "properties": {
          "id": {
            "description": "Order primary key",
            "type": "integer"
          },
          "order_id": {
            "description": "Order ID in string format",
            "type": "string"
          },
          "payment_status": {
            "description": "Order payment status",
            "enum": [
              "unpaid",
              "paid",
              "conflict",
              "settled"
            ],
            "type": "string"
          },
          "status": {
            "description": "Order status",
            "enum": [
              "draft",
              "pending",
              "confirmed",
              "in_process",
              "ready",
              "shipped",
              "completed",
              "canceled",
              "rts",
              "closed"
            ],
            "type": "string"
          }
        },
        "title": "OrderChangeStatus",
        "type": "object"
      },
      "OrderEmail": {
        "properties": {
          "from": {
            "description": "Sender email address",
            "type": "string"
          },
          "id": {
            "description": "Order email ID",
            "type": "integer"
          },
          "inserted_at": {
            "description": "Email creation timestamp",
            "format": "date-time",
            "type": "string"
          },
          "message_id": {
            "description": "Message ID of the email",
            "type": "string"
          },
          "order_id": {
            "description": "Associated order primary key",
            "type": "integer"
          },
          "status": {
            "description": "Email status",
            "type": "string"
          },
          "status_history": {
            "items": {
              "properties": {
                "status": {
                  "description": "Email status",
                  "type": "string"
                },
                "timestamp": {
                  "description": "Timestamp of the status change",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "subject": {
            "description": "Email subject",
            "type": "string"
          },
          "to": {
            "description": "Recipient email address",
            "type": "string"
          },
          "type": {
            "description": "Type of the email",
            "type": "string"
          },
          "updated_at": {
            "description": "Last update timestamp of the email",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "OrderEmail",
        "type": "object"
      },
      "CreateBundlePartnerRequest": {
        "properties": {
          "partner_unique_id": {
            "description": "Unique identifier of the partner to associate",
            "type": "string"
          }
        },
        "required": [
          "partner_unique_id"
        ],
        "title": "CreateBundlePartnerRequest",
        "type": "object"
      },
      "OrderStatistics": {
        "properties": {
          "breakdown_date": {
            "type": "string"
          },
          "custom_breakdown_key": {
            "type": "string"
          },
          "datetime_type": {
            "type": "string"
          },
          "is_breakdown_status": {
            "type": "boolean"
          },
          "params": {
            "additionalProperties": true,
            "type": "object"
          },
          "results": {
            "items": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "custom_breakdown_id": {
                  "type": "integer"
                },
                "custom_breakdown_name": {
                  "type": "string"
                },
                "day": {
                  "type": "string"
                },
                "gross_revenue": {
                  "type": "number"
                },
                "month": {
                  "type": "string"
                },
                "status": {
                  "description": "Order status",
                  "enum": [
                    "draft",
                    "pending",
                    "confirmed",
                    "in_process",
                    "ready",
                    "shipped",
                    "completed",
                    "canceled",
                    "rts",
                    "closed"
                  ],
                  "type": "string"
                },
                "week": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "tz": {
            "type": "string"
          }
        },
        "title": "OrderStatistics",
        "type": "object"
      },
      "SearchWarehouseRequest": {
        "description": "Schema for searching warehouses",
        "properties": {
          "destination_id": {
            "description": "ID of the destination location",
            "type": "integer"
          },
          "order_id": {
            "description": "ID of the order (for update order)",
            "type": "integer"
          },
          "store_id": {
            "description": "ID of the store",
            "type": "integer"
          },
          "variants": {
            "description": "List of product variant ids and their quantities",
            "items": {
              "properties": {
                "qty": {
                  "description": "Quantity of the product variant",
                  "type": "integer"
                },
                "variant_id": {
                  "description": "ID of the product variant",
                  "type": "integer"
                }
              },
              "required": [
                "variant_id",
                "qty"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "store_id",
          "destination_id",
          "variants"
        ],
        "title": "SearchWarehouseRequest",
        "type": "object"
      },
      "ForOrderStore": {
        "properties": {
          "auto_expire_days": {
            "description": "Days until auto-expire",
            "type": "integer"
          },
          "auto_other_income": {
            "description": "Is auto other income enabled?",
            "type": "boolean"
          },
          "business": {
            "properties": {
              "account_holder": {
                "description": "Name of the account holder",
                "type": "string"
              },
              "email": {
                "description": "Email address of the business",
                "format": "email",
                "type": "string"
              },
              "id": {
                "description": "Business ID",
                "type": "integer"
              },
              "is_banned": {
                "description": "Is the business banned?",
                "type": "boolean"
              },
              "logo": {
                "description": "URL to the business logo",
                "format": "uri",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique identifier for the business",
                "type": "string"
              },
              "username": {
                "description": "Username of the business",
                "type": "string"
              }
            },
            "title": "BusinessSimple",
            "type": "object"
          },
          "capi_purchase_value_type": {
            "description": "Type of CAPI purchase value",
            "enum": [
              "gross_revenue",
              "net_revenue",
              "adj_gross_revenue"
            ],
            "type": "string"
          },
          "cod_purchase_triggers": {
            "description": "COD purchase triggers",
            "items": {
              "enum": [
                "public_upload",
                "internal_upload",
                "confirmed",
                "shipped",
                "completed"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "dynamic_other_income_cod_default_amount": {
            "description": "Default amount for dynamic COD income",
            "format": "float",
            "type": "number"
          },
          "dynamic_other_income_cod_default_percentage": {
            "description": "Default percentage for dynamic COD income",
            "format": "float",
            "type": "number"
          },
          "dynamic_other_income_cod_type": {
            "description": "Type of amount (fixed or percentage)",
            "enum": [
              "fixed",
              "percentage"
            ],
            "type": "string"
          },
          "dynamic_other_income_epayment_default_amount": {
            "description": "Default amount for dynamic e-payment income",
            "format": "float",
            "type": "number"
          },
          "dynamic_other_income_epayment_default_percentage": {
            "description": "Default percentage for dynamic e-payment income",
            "format": "float",
            "type": "number"
          },
          "dynamic_other_income_epayment_type": {
            "description": "Type of amount (fixed or percentage)",
            "enum": [
              "fixed",
              "percentage"
            ],
            "type": "string"
          },
          "fixed_auto_other_income": {
            "description": "Is fixed auto other income enabled?",
            "type": "boolean"
          },
          "id": {
            "description": "Store ID",
            "type": "integer"
          },
          "is_active": {
            "description": "Is the store active?",
            "type": "boolean"
          },
          "is_auto_expire": {
            "description": "Is auto-expire enabled?",
            "type": "boolean"
          },
          "is_discount_editable": {
            "description": "Is discount editable?",
            "type": "boolean"
          },
          "is_dropshipping_allowed": {
            "description": "Is dropshipping allowed in this store?",
            "type": "boolean"
          },
          "is_moota_enabled": {
            "description": "Is Moota integration enabled for this store?",
            "type": "boolean"
          },
          "is_postal_code": {
            "description": "Is postal code required for orders?",
            "type": "boolean"
          },
          "is_transferproof_required": {
            "description": "Is transfer proof required for orders in this store?",
            "type": "boolean"
          },
          "is_unique_code": {
            "description": "Is unique code required for orders?",
            "type": "boolean"
          },
          "is_use_waba": {
            "description": "Is WABA integration enabled?",
            "type": "boolean"
          },
          "max_unique_code_amount": {
            "description": "Maximum amount for unique code orders",
            "type": "integer"
          },
          "name": {
            "description": "Name of the store",
            "type": "string"
          },
          "non_cod_purchase_triggers": {
            "description": "Non-COD purchase triggers",
            "items": {
              "enum": [
                "public_upload",
                "internal_upload",
                "confirmed",
                "shipped",
                "completed"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "other_income_name": {
            "description": "Name of the other income",
            "type": "string"
          },
          "postal_code_requirement": {
            "description": "Postal code requirement options",
            "enum": [
              "autofill",
              "manual"
            ],
            "type": "string"
          },
          "store_courier_other_incomes": {
            "description": "Other incomes for store couriers",
            "items": {
              "description": "Store Courier Other Income Schema",
              "properties": {
                "amount": {
                  "description": "Amount of other income",
                  "format": "float",
                  "type": "number"
                },
                "courier_id": {
                  "description": "Courier ID",
                  "type": "integer"
                },
                "percentage": {
                  "description": "Percentage of other income",
                  "format": "float",
                  "type": "number"
                },
                "type": {
                  "description": "Type of other income",
                  "enum": [
                    "fixed",
                    "percentage"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "courier_id",
                "type"
              ],
              "title": "StoreCourierOtherIncome",
              "type": "object"
            },
            "type": "array"
          },
          "store_method_other_incomes": {
            "description": "Other incomes for store methods",
            "items": {
              "description": "Store Payment Method Other Income Schema",
              "properties": {
                "amount": {
                  "description": "Amount of other income",
                  "format": "float",
                  "type": "number"
                },
                "payment_method": {
                  "description": "Payment Method",
                  "type": "string"
                },
                "percentage": {
                  "description": "Percentage of other income",
                  "format": "float",
                  "type": "number"
                },
                "sub_payment_method": {
                  "description": "Sub Payment Method",
                  "type": "string"
                },
                "type": {
                  "description": "Type of amount (fixed or percentage)",
                  "enum": [
                    "fixed",
                    "percentage"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "payment_method",
                "type"
              ],
              "title": "StorePaymentMethodOtherIncome",
              "type": "object"
            },
            "type": "array"
          },
          "sub_payment_methods": {
            "description": "Xendit VA bank codes",
            "items": {
              "description": "Xendit VA bank code",
              "enum": [
                "BCA",
                "BNI",
                "BRI",
                "MANDIRI",
                "PERMATA",
                "BSI",
                "BJB",
                "CIMB",
                "SAHABAT_SAMPOERNA",
                "ARTAJASA"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "unique_id": {
            "description": "Unique identifier for the store",
            "type": "string"
          },
          "uuid": {
            "description": "UUID of the store",
            "type": "string"
          }
        },
        "title": "ForOrderStore",
        "type": "object"
      },
      "UpdateStore": {
        "properties": {
          "store_custom_audiences": {
            "description": "Store custom audiences",
            "items": {
              "description": "Store Custom Audience Schema",
              "properties": {
                "custom_audience_id": {
                  "description": "Custom Audience ID",
                  "type": "integer"
                },
                "order_status": {
                  "description": "Order status",
                  "enum": [
                    "draft",
                    "pending",
                    "confirmed",
                    "in_process",
                    "ready",
                    "shipped",
                    "completed",
                    "canceled",
                    "rts",
                    "closed"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "order_status",
                "custom_audience_id"
              ],
              "title": "StoreCustomAudience",
              "type": "object"
            },
            "type": "array"
          },
          "is_unique_code": {
            "description": "Is unique code required for orders?",
            "type": "boolean"
          },
          "days_of_payment_processing": {
            "description": "Days of payment processing",
            "type": "integer"
          },
          "min_name_length": {
            "description": "Minimum name length for validation",
            "type": "integer"
          },
          "waba_account_id": {
            "description": "WABA account ID",
            "type": "integer"
          },
          "is_postal_code": {
            "description": "Is postal code required for orders?",
            "type": "boolean"
          },
          "is_email_notifications": {
            "description": "Is email notifications enabled?",
            "type": "boolean"
          },
          "is_discount_editable": {
            "description": "Is discount editable?",
            "type": "boolean"
          },
          "store_method_other_incomes": {
            "description": "Other incomes for store methods",
            "items": {
              "description": "Store Payment Method Other Income Schema",
              "properties": {
                "amount": {
                  "description": "Amount of other income",
                  "format": "float",
                  "type": "number"
                },
                "payment_method": {
                  "description": "Payment Method",
                  "type": "string"
                },
                "percentage": {
                  "description": "Percentage of other income",
                  "format": "float",
                  "type": "number"
                },
                "sub_payment_method": {
                  "description": "Sub Payment Method",
                  "type": "string"
                },
                "type": {
                  "description": "Type of amount (fixed or percentage)",
                  "enum": [
                    "fixed",
                    "percentage"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "payment_method",
                "type"
              ],
              "title": "StorePaymentMethodOtherIncome",
              "type": "object"
            },
            "type": "array"
          },
          "store_courier_other_incomes": {
            "description": "Other incomes for store couriers",
            "items": {
              "description": "Store Courier Other Income Schema",
              "properties": {
                "amount": {
                  "description": "Amount of other income",
                  "format": "float",
                  "type": "number"
                },
                "courier_id": {
                  "description": "Courier ID",
                  "type": "integer"
                },
                "percentage": {
                  "description": "Percentage of other income",
                  "format": "float",
                  "type": "number"
                },
                "type": {
                  "description": "Type of other income",
                  "enum": [
                    "fixed",
                    "percentage"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "courier_id",
                "type"
              ],
              "title": "StoreCourierOtherIncome",
              "type": "object"
            },
            "type": "array"
          },
          "dynamic_other_income_cod_default_percentage": {
            "description": "Default percentage for dynamic COD income",
            "format": "float",
            "type": "number"
          },
          "dynamic_other_income_epayment_type": {
            "description": "Type of amount (fixed or percentage)",
            "enum": [
              "fixed",
              "percentage"
            ],
            "type": "string"
          },
          "dynamic_other_income_cod_default_amount": {
            "description": "Default amount for dynamic COD income",
            "format": "float",
            "type": "number"
          },
          "is_advanced_validation": {
            "description": "Is advanced validation enabled?",
            "type": "boolean"
          },
          "is_fuc_product_enabled": {
            "description": "Is follow-up chat for products enabled?",
            "type": "boolean"
          },
          "is_manual_shipping_cost": {
            "description": "Is manual shipping cost enabled?",
            "type": "boolean"
          },
          "is_email_new_order": {
            "description": "Is email notification for new orders enabled?",
            "type": "boolean"
          },
          "non_cod_purchase_triggers": {
            "description": "Non-COD purchase triggers",
            "items": {
              "enum": [
                "public_upload",
                "internal_upload",
                "confirmed",
                "shipped",
                "completed"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "is_dropshipping_allowed": {
            "description": "Is dropshipping allowed in this store?",
            "type": "boolean"
          },
          "blocked_message": {
            "description": "Blocked message for spam filter",
            "type": "string"
          },
          "max_per_ip": {
            "description": "Maximum orders per IP address",
            "type": "integer"
          },
          "email_notification_statuses": {
            "description": "Email notification statuses",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "greeting_message": {
            "description": "Greeting message for WhatsApp",
            "type": "string"
          },
          "is_spam_filter": {
            "description": "Is spam filter enabled?",
            "type": "boolean"
          },
          "cod_purchase_triggers": {
            "description": "COD purchase triggers",
            "items": {
              "enum": [
                "public_upload",
                "internal_upload",
                "confirmed",
                "shipped",
                "completed"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "is_use_waba": {
            "description": "Is WABA integration enabled?",
            "type": "boolean"
          },
          "email_reply_to_id": {
            "description": "Email reply-to business user ID",
            "type": "integer"
          },
          "email_reply_to_assignment": {
            "description": "Email reply-to assignment type",
            "enum": [
              "fixed",
              "rotator"
            ],
            "type": "string"
          },
          "postal_code_requirement": {
            "description": "Postal code requirement options",
            "enum": [
              "autofill",
              "manual"
            ],
            "type": "string"
          },
          "name": {
            "description": "Store name",
            "type": "string"
          },
          "is_moota_enabled": {
            "description": "Is Moota integration enabled for this store?",
            "type": "boolean"
          },
          "is_ip_spam_filter": {
            "description": "Is IP spam filter enabled?",
            "type": "boolean"
          },
          "inactivity_period": {
            "description": "Inactivity period for WhatsApp",
            "type": "integer"
          },
          "is_customer_otp_required": {
            "description": "Is customer OTP required?",
            "type": "boolean"
          },
          "other_income_name": {
            "description": "Name of the other income",
            "type": "string"
          },
          "auto_expire_days": {
            "description": "Days until auto-expire",
            "type": "integer"
          },
          "max_unique_code_amount": {
            "description": "Maximum amount for unique code orders",
            "format": "float",
            "type": "number"
          },
          "is_greeting_message_enabled": {
            "description": "Is greeting message enabled?",
            "type": "boolean"
          },
          "is_customer_spam_filter": {
            "description": "Is customer spam filter enabled?",
            "type": "boolean"
          },
          "is_show_download_invoice": {
            "description": "Is show download invoice option enabled?",
            "type": "boolean"
          },
          "is_auto_expire": {
            "description": "Is auto-expire enabled",
            "type": "boolean"
          },
          "dynamic_other_income_epayment_default_amount": {
            "description": "Default amount for dynamic e-payment income",
            "format": "float",
            "type": "number"
          },
          "is_fuc_bundle_enabled": {
            "description": "Is follow-up chat for bundles enabled?",
            "type": "boolean"
          },
          "min_address_length": {
            "description": "Minimum address length for validation",
            "type": "integer"
          },
          "store_sales_people": {
            "description": "Store sales people",
            "items": {
              "description": "Store Sales Person Request Schema",
              "properties": {
                "business_user_id": {
                  "description": "Business User ID",
                  "type": "integer"
                },
                "percentage": {
                  "description": "Percentage of sales person",
                  "type": "integer"
                },
                "weekly_schedule": {
                  "description": "Weekly Schedule Schema",
                  "properties": {
                    "friday": {
                      "description": "Day Schedule Schema",
                      "properties": {
                        "end_time": {
                          "description": "End time",
                          "format": "time",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Is active",
                          "type": "boolean"
                        },
                        "start_time": {
                          "description": "Start time",
                          "format": "time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "is_active",
                        "start_time",
                        "end_time"
                      ],
                      "title": "DaySchedule",
                      "type": "object"
                    },
                    "monday": {
                      "description": "Day Schedule Schema",
                      "properties": {
                        "end_time": {
                          "description": "End time",
                          "format": "time",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Is active",
                          "type": "boolean"
                        },
                        "start_time": {
                          "description": "Start time",
                          "format": "time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "is_active",
                        "start_time",
                        "end_time"
                      ],
                      "title": "DaySchedule",
                      "type": "object"
                    },
                    "saturday": {
                      "description": "Day Schedule Schema",
                      "properties": {
                        "end_time": {
                          "description": "End time",
                          "format": "time",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Is active",
                          "type": "boolean"
                        },
                        "start_time": {
                          "description": "Start time",
                          "format": "time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "is_active",
                        "start_time",
                        "end_time"
                      ],
                      "title": "DaySchedule",
                      "type": "object"
                    },
                    "sunday": {
                      "description": "Day Schedule Schema",
                      "properties": {
                        "end_time": {
                          "description": "End time",
                          "format": "time",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Is active",
                          "type": "boolean"
                        },
                        "start_time": {
                          "description": "Start time",
                          "format": "time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "is_active",
                        "start_time",
                        "end_time"
                      ],
                      "title": "DaySchedule",
                      "type": "object"
                    },
                    "thursday": {
                      "description": "Day Schedule Schema",
                      "properties": {
                        "end_time": {
                          "description": "End time",
                          "format": "time",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Is active",
                          "type": "boolean"
                        },
                        "start_time": {
                          "description": "Start time",
                          "format": "time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "is_active",
                        "start_time",
                        "end_time"
                      ],
                      "title": "DaySchedule",
                      "type": "object"
                    },
                    "tuesday": {
                      "description": "Day Schedule Schema",
                      "properties": {
                        "end_time": {
                          "description": "End time",
                          "format": "time",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Is active",
                          "type": "boolean"
                        },
                        "start_time": {
                          "description": "Start time",
                          "format": "time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "is_active",
                        "start_time",
                        "end_time"
                      ],
                      "title": "DaySchedule",
                      "type": "object"
                    },
                    "wednesday": {
                      "description": "Day Schedule Schema",
                      "properties": {
                        "end_time": {
                          "description": "End time",
                          "format": "time",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Is active",
                          "type": "boolean"
                        },
                        "start_time": {
                          "description": "Start time",
                          "format": "time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "is_active",
                        "start_time",
                        "end_time"
                      ],
                      "title": "DaySchedule",
                      "type": "object"
                    }
                  },
                  "title": "WeeklySchedule",
                  "type": "object"
                }
              },
              "required": [
                "business_user_id",
                "percentage",
                "weekly_schedule"
              ],
              "title": "RequestStoreCourierOtherIncome",
              "type": "object"
            },
            "type": "array"
          },
          "is_transferproof_required": {
            "description": "Is transfer proof required for orders in this store?",
            "type": "boolean"
          },
          "fixed_auto_other_income": {
            "description": "Fixed auto other income amount",
            "format": "float",
            "type": "number"
          },
          "auto_other_income": {
            "description": "Type of auto other income",
            "type": "string"
          },
          "max_per_phone": {
            "description": "Maximum orders per phone number",
            "type": "integer"
          },
          "capi_purchase_value_type": {
            "description": "Type of CAPI purchase value",
            "enum": [
              "gross_revenue",
              "net_revenue",
              "adj_gross_revenue"
            ],
            "type": "string"
          },
          "is_show_whatsapp": {
            "description": "Is show WhatsApp option enabled?",
            "type": "boolean"
          },
          "digital_only_complete_type": {
            "description": "Type of digital-only completion",
            "enum": [
              "auto",
              "when_settled",
              "manual"
            ],
            "type": "string"
          },
          "dynamic_other_income_epayment_default_percentage": {
            "description": "Default percentage for dynamic e-payment income",
            "format": "float",
            "type": "number"
          },
          "dynamic_other_income_cod_type": {
            "description": "Type of amount (fixed or percentage)",
            "enum": [
              "fixed",
              "percentage"
            ],
            "type": "string"
          },
          "warehouse_id": {
            "description": "Warehouse ID",
            "type": "integer"
          }
        },
        "title": "UpdateStore",
        "type": "object"
      },
      "StorePaymentMethodOtherIncome": {
        "description": "Store Payment Method Other Income Schema",
        "properties": {
          "amount": {
            "description": "Amount of other income",
            "format": "float",
            "type": "number"
          },
          "payment_method": {
            "description": "Payment Method",
            "type": "string"
          },
          "percentage": {
            "description": "Percentage of other income",
            "format": "float",
            "type": "number"
          },
          "sub_payment_method": {
            "description": "Sub Payment Method",
            "type": "string"
          },
          "type": {
            "description": "Type of amount (fixed or percentage)",
            "enum": [
              "fixed",
              "percentage"
            ],
            "type": "string"
          }
        },
        "required": [
          "payment_method",
          "type"
        ],
        "title": "StorePaymentMethodOtherIncome",
        "type": "object"
      },
      "FollowUpChat": {
        "properties": {
          "bundle_id": {
            "description": "Bundle ID associated with the chat",
            "type": "integer"
          },
          "change_status": {
            "description": "Change status after follow up chat",
            "type": "boolean"
          },
          "hours_after": {
            "description": "Hours after which the follow up chat is triggered",
            "type": "integer"
          },
          "id": {
            "description": "Follow Up Chat ID",
            "type": "integer"
          },
          "image": {
            "description": "Image URL for the follow up chat",
            "format": "uri",
            "type": "string"
          },
          "is_default": {
            "description": "Is this a default follow up chat?",
            "type": "boolean"
          },
          "name": {
            "description": "Name of the follow up chat",
            "type": "string"
          },
          "product_id": {
            "description": "Product ID associated with the chat",
            "type": "integer"
          },
          "provider": {
            "description": "Provider of the follow up chat service",
            "type": "string"
          },
          "store_id": {
            "description": "Store ID associated with the chat",
            "type": "integer"
          },
          "trigger": {
            "description": "Trigger condition for the follow up chat",
            "type": "string"
          }
        },
        "title": "FollowUpChat",
        "type": "object"
      },
      "ForStoreListVariant": {
        "properties": {
          "available_qty": {
            "description": "Available quantity of the variant in inventory",
            "type": "integer"
          },
          "id": {
            "description": "Variant primary key",
            "type": "integer"
          },
          "images": {
            "description": "List of image URLs associated with the variant",
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "is_checked": {
            "description": "Mark variant as sellable",
            "type": "boolean"
          },
          "is_editable": {
            "description": "Indicates if the variant is editable",
            "type": "boolean"
          },
          "item_type": {
            "description": "Type of the product item",
            "enum": [
              "physical",
              "digital",
              "course"
            ],
            "type": "string"
          },
          "metadata": {
            "additionalProperties": true,
            "description": "Additional metadata associated with the variant",
            "type": "object"
          },
          "name": {
            "description": "Full name of the variant",
            "type": "string"
          },
          "option1_color": {
            "description": "Color associated with the first product option",
            "type": "string"
          },
          "option1_icon_url": {
            "description": "Icon URL for the first product option",
            "format": "uri",
            "type": "string"
          },
          "option1_value": {
            "description": "Value of the first product option",
            "type": "string"
          },
          "option2_color": {
            "description": "Color associated with the second product option",
            "type": "string"
          },
          "option2_icon_url": {
            "description": "Icon URL for the second product option",
            "format": "uri",
            "type": "string"
          },
          "option2_value": {
            "description": "Value of the second product option",
            "type": "string"
          },
          "option3_color": {
            "description": "Color associated with the third product option",
            "type": "string"
          },
          "option3_icon_url": {
            "description": "Icon URL for the third product option",
            "format": "uri",
            "type": "string"
          },
          "option3_value": {
            "description": "Value of the third product option",
            "type": "string"
          },
          "price": {
            "description": "Price of the variant",
            "type": "number"
          },
          "product_name": {
            "description": "Name of the associated product",
            "type": "string"
          },
          "reseller_price": {
            "description": "Reseller price of the variant",
            "type": "number"
          },
          "unique_id": {
            "description": "Variant unique identifier",
            "type": "string"
          },
          "uuid": {
            "description": "Variant UUID",
            "type": "string"
          },
          "weight": {
            "description": "Weight of the variant in grams",
            "type": "integer"
          }
        },
        "title": "ForStoreListVariant",
        "type": "object"
      },
      "Store": {
        "properties": {
          "is_unique_code": {
            "description": "Is unique code required for orders?",
            "type": "boolean"
          },
          "days_of_payment_processing": {
            "description": "Days of payment processing",
            "type": "integer"
          },
          "min_name_length": {
            "description": "Minimum name length for validation",
            "type": "integer"
          },
          "warehouse": {
            "properties": {
              "business": {
                "properties": {
                  "account_holder": {
                    "description": "Name of the account holder",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email address of the business",
                    "format": "email",
                    "type": "string"
                  },
                  "id": {
                    "description": "Business ID",
                    "type": "integer"
                  },
                  "is_banned": {
                    "description": "Is the business banned?",
                    "type": "boolean"
                  },
                  "logo": {
                    "description": "URL to the business logo",
                    "format": "uri",
                    "type": "string"
                  },
                  "unique_id": {
                    "description": "Unique identifier for the business",
                    "type": "string"
                  },
                  "username": {
                    "description": "Username of the business",
                    "type": "string"
                  }
                },
                "title": "BusinessSimple",
                "type": "object"
              },
              "contact_name": {
                "description": "Contact name at the warehouse",
                "type": "string"
              },
              "contact_phone": {
                "description": "Contact phone number at the warehouse",
                "type": "string"
              },
              "id": {
                "description": "Warehouse ID",
                "type": "integer"
              },
              "name": {
                "description": "Name of the warehouse",
                "type": "string"
              },
              "warehouse_address": {
                "properties": {
                  "address": {
                    "description": "Full address of the warehouse",
                    "type": "string"
                  },
                  "city": {
                    "description": "City of the warehouse address",
                    "type": "string"
                  },
                  "id": {
                    "description": "Warehouse Address ID",
                    "type": "integer"
                  },
                  "location_id": {
                    "description": "Location ID for the address",
                    "type": "integer"
                  },
                  "postal_code": {
                    "description": "Postal code of the warehouse address",
                    "type": "string"
                  },
                  "province": {
                    "description": "Province of the warehouse address",
                    "type": "string"
                  },
                  "subdistrict": {
                    "description": "Subdistrict of the warehouse address",
                    "type": "string"
                  }
                },
                "title": "WarehouseAddressSimple",
                "type": "object"
              }
            },
            "title": "Warehouse",
            "type": "object"
          },
          "store_sales_person": {
            "description": "List of store sales persons",
            "items": {
              "description": "Store Sales Person Simple Schema",
              "properties": {
                "business_user": {
                  "properties": {
                    "business_phone": {
                      "description": "The business phone number",
                      "type": "string"
                    },
                    "id": {
                      "description": "The business user ID",
                      "type": "integer"
                    },
                    "role": {
                      "properties": {
                        "id": {
                          "description": "The role ID",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the role",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ],
                      "title": "SimpleRole",
                      "type": "object"
                    },
                    "user": {
                      "properties": {
                        "aff_code": {
                          "description": "Affiliate code of the user",
                          "type": "string"
                        },
                        "avatar": {
                          "description": "URL to user avatar",
                          "format": "uri",
                          "type": "string"
                        },
                        "email": {
                          "description": "User email",
                          "format": "email",
                          "type": "string"
                        },
                        "fullname": {
                          "description": "User full name",
                          "type": "string"
                        },
                        "id": {
                          "description": "User ID",
                          "type": "integer"
                        },
                        "phone": {
                          "description": "User phone number",
                          "type": "string"
                        }
                      },
                      "title": "UserSimple",
                      "type": "object"
                    }
                  },
                  "required": [
                    "id",
                    "user",
                    "role",
                    "business_phone"
                  ],
                  "title": "BusinessUser",
                  "type": "object"
                },
                "id": {
                  "description": "Store Sales Person ID",
                  "type": "integer"
                },
                "percentage": {
                  "description": "Percentage of sales person",
                  "type": "integer"
                },
                "weekly_schedule": {
                  "description": "Weekly Schedule Schema",
                  "properties": {
                    "friday": {
                      "description": "Day Schedule Schema",
                      "properties": {
                        "end_time": {
                          "description": "End time",
                          "format": "time",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Is active",
                          "type": "boolean"
                        },
                        "start_time": {
                          "description": "Start time",
                          "format": "time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "is_active",
                        "start_time",
                        "end_time"
                      ],
                      "title": "DaySchedule",
                      "type": "object"
                    },
                    "monday": {
                      "description": "Day Schedule Schema",
                      "properties": {
                        "end_time": {
                          "description": "End time",
                          "format": "time",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Is active",
                          "type": "boolean"
                        },
                        "start_time": {
                          "description": "Start time",
                          "format": "time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "is_active",
                        "start_time",
                        "end_time"
                      ],
                      "title": "DaySchedule",
                      "type": "object"
                    },
                    "saturday": {
                      "description": "Day Schedule Schema",
                      "properties": {
                        "end_time": {
                          "description": "End time",
                          "format": "time",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Is active",
                          "type": "boolean"
                        },
                        "start_time": {
                          "description": "Start time",
                          "format": "time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "is_active",
                        "start_time",
                        "end_time"
                      ],
                      "title": "DaySchedule",
                      "type": "object"
                    },
                    "sunday": {
                      "description": "Day Schedule Schema",
                      "properties": {
                        "end_time": {
                          "description": "End time",
                          "format": "time",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Is active",
                          "type": "boolean"
                        },
                        "start_time": {
                          "description": "Start time",
                          "format": "time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "is_active",
                        "start_time",
                        "end_time"
                      ],
                      "title": "DaySchedule",
                      "type": "object"
                    },
                    "thursday": {
                      "description": "Day Schedule Schema",
                      "properties": {
                        "end_time": {
                          "description": "End time",
                          "format": "time",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Is active",
                          "type": "boolean"
                        },
                        "start_time": {
                          "description": "Start time",
                          "format": "time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "is_active",
                        "start_time",
                        "end_time"
                      ],
                      "title": "DaySchedule",
                      "type": "object"
                    },
                    "tuesday": {
                      "description": "Day Schedule Schema",
                      "properties": {
                        "end_time": {
                          "description": "End time",
                          "format": "time",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Is active",
                          "type": "boolean"
                        },
                        "start_time": {
                          "description": "Start time",
                          "format": "time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "is_active",
                        "start_time",
                        "end_time"
                      ],
                      "title": "DaySchedule",
                      "type": "object"
                    },
                    "wednesday": {
                      "description": "Day Schedule Schema",
                      "properties": {
                        "end_time": {
                          "description": "End time",
                          "format": "time",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Is active",
                          "type": "boolean"
                        },
                        "start_time": {
                          "description": "Start time",
                          "format": "time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "is_active",
                        "start_time",
                        "end_time"
                      ],
                      "title": "DaySchedule",
                      "type": "object"
                    }
                  },
                  "title": "WeeklySchedule",
                  "type": "object"
                }
              },
              "title": "StoreSalesPersonSimple",
              "type": "object"
            },
            "type": "array"
          },
          "is_postal_code": {
            "description": "Is postal code required for orders?",
            "type": "boolean"
          },
          "is_email_notifications": {
            "description": "Is email notifications enabled?",
            "type": "boolean"
          },
          "is_discount_editable": {
            "description": "Is discount editable?",
            "type": "boolean"
          },
          "store_method_other_incomes": {
            "description": "Other incomes for store methods",
            "items": {
              "description": "Store Payment Method Other Income Schema",
              "properties": {
                "amount": {
                  "description": "Amount of other income",
                  "format": "float",
                  "type": "number"
                },
                "payment_method": {
                  "description": "Payment Method",
                  "type": "string"
                },
                "percentage": {
                  "description": "Percentage of other income",
                  "format": "float",
                  "type": "number"
                },
                "sub_payment_method": {
                  "description": "Sub Payment Method",
                  "type": "string"
                },
                "type": {
                  "description": "Type of amount (fixed or percentage)",
                  "enum": [
                    "fixed",
                    "percentage"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "payment_method",
                "type"
              ],
              "title": "StorePaymentMethodOtherIncome",
              "type": "object"
            },
            "type": "array"
          },
          "store_courier_other_incomes": {
            "description": "Other incomes for store couriers",
            "items": {
              "description": "Store Courier Other Income Schema",
              "properties": {
                "amount": {
                  "description": "Amount of other income",
                  "format": "float",
                  "type": "number"
                },
                "courier_id": {
                  "description": "Courier ID",
                  "type": "integer"
                },
                "percentage": {
                  "description": "Percentage of other income",
                  "format": "float",
                  "type": "number"
                },
                "type": {
                  "description": "Type of other income",
                  "enum": [
                    "fixed",
                    "percentage"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "courier_id",
                "type"
              ],
              "title": "StoreCourierOtherIncome",
              "type": "object"
            },
            "type": "array"
          },
          "dynamic_other_income_cod_default_percentage": {
            "description": "Default percentage for dynamic COD income",
            "format": "float",
            "type": "number"
          },
          "dynamic_other_income_epayment_type": {
            "description": "Type of amount (fixed or percentage)",
            "enum": [
              "fixed",
              "percentage"
            ],
            "type": "string"
          },
          "dynamic_other_income_cod_default_amount": {
            "description": "Default amount for dynamic COD income",
            "format": "float",
            "type": "number"
          },
          "is_advanced_validation": {
            "description": "Is advanced validation enabled?",
            "type": "boolean"
          },
          "is_fuc_product_enabled": {
            "description": "Is follow-up chat for products enabled?",
            "type": "boolean"
          },
          "is_manual_shipping_cost": {
            "description": "Is manual shipping cost enabled?",
            "type": "boolean"
          },
          "business": {
            "properties": {
              "account_holder": {
                "description": "Name of the account holder",
                "type": "string"
              },
              "email": {
                "description": "Email address of the business",
                "format": "email",
                "type": "string"
              },
              "id": {
                "description": "Business ID",
                "type": "integer"
              },
              "is_banned": {
                "description": "Is the business banned?",
                "type": "boolean"
              },
              "logo": {
                "description": "URL to the business logo",
                "format": "uri",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique identifier for the business",
                "type": "string"
              },
              "username": {
                "description": "Username of the business",
                "type": "string"
              }
            },
            "title": "BusinessSimple",
            "type": "object"
          },
          "uuid": {
            "description": "UUID of the store",
            "type": "string"
          },
          "last_updated_by": {
            "properties": {
              "aff_code": {
                "description": "Affiliate code of the user",
                "type": "string"
              },
              "avatar": {
                "description": "URL to user avatar",
                "format": "uri",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "format": "email",
                "type": "string"
              },
              "fullname": {
                "description": "User full name",
                "type": "string"
              },
              "id": {
                "description": "User ID",
                "type": "integer"
              },
              "phone": {
                "description": "User phone number",
                "type": "string"
              }
            },
            "title": "UserSimple",
            "type": "object"
          },
          "is_email_new_order": {
            "description": "Is email notification for new orders enabled?",
            "type": "boolean"
          },
          "non_cod_purchase_triggers": {
            "description": "Non-COD purchase triggers",
            "items": {
              "enum": [
                "public_upload",
                "internal_upload",
                "confirmed",
                "shipped",
                "completed"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "email_reply_to": {
            "properties": {
              "business_phone": {
                "description": "The business phone number",
                "type": "string"
              },
              "id": {
                "description": "The business user ID",
                "type": "integer"
              },
              "role": {
                "properties": {
                  "id": {
                    "description": "The role ID",
                    "type": "integer"
                  },
                  "name": {
                    "description": "The name of the role",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ],
                "title": "SimpleRole",
                "type": "object"
              },
              "user": {
                "properties": {
                  "aff_code": {
                    "description": "Affiliate code of the user",
                    "type": "string"
                  },
                  "avatar": {
                    "description": "URL to user avatar",
                    "format": "uri",
                    "type": "string"
                  },
                  "email": {
                    "description": "User email",
                    "format": "email",
                    "type": "string"
                  },
                  "fullname": {
                    "description": "User full name",
                    "type": "string"
                  },
                  "id": {
                    "description": "User ID",
                    "type": "integer"
                  },
                  "phone": {
                    "description": "User phone number",
                    "type": "string"
                  }
                },
                "title": "UserSimple",
                "type": "object"
              }
            },
            "required": [
              "id",
              "user",
              "role",
              "business_phone"
            ],
            "title": "BusinessUser",
            "type": "object"
          },
          "is_dropshipping_allowed": {
            "description": "Is dropshipping allowed in this store?",
            "type": "boolean"
          },
          "blocked_message": {
            "description": "Blocked message for spam filter",
            "type": "string"
          },
          "payment_methods": {
            "description": "Payment methods available in the store",
            "items": {
              "description": "Order payment method",
              "enum": [
                "gopay",
                "va",
                "qris",
                "card",
                "invoice",
                "alfamart",
                "ovo",
                "dana",
                "shopeepay",
                "linkaja",
                "no_payment",
                "bank_transfer",
                "marketplace",
                "cod"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "advertisers": {
            "description": "List of advertisers associated with the store",
            "items": {
              "properties": {
                "business_phone": {
                  "description": "The business phone number",
                  "type": "string"
                },
                "id": {
                  "description": "The business user ID",
                  "type": "integer"
                },
                "role": {
                  "properties": {
                    "id": {
                      "description": "The role ID",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the role",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ],
                  "title": "SimpleRole",
                  "type": "object"
                },
                "user": {
                  "properties": {
                    "aff_code": {
                      "description": "Affiliate code of the user",
                      "type": "string"
                    },
                    "avatar": {
                      "description": "URL to user avatar",
                      "format": "uri",
                      "type": "string"
                    },
                    "email": {
                      "description": "User email",
                      "format": "email",
                      "type": "string"
                    },
                    "fullname": {
                      "description": "User full name",
                      "type": "string"
                    },
                    "id": {
                      "description": "User ID",
                      "type": "integer"
                    },
                    "phone": {
                      "description": "User phone number",
                      "type": "string"
                    }
                  },
                  "title": "UserSimple",
                  "type": "object"
                }
              },
              "required": [
                "id",
                "user",
                "role",
                "business_phone"
              ],
              "title": "BusinessUser",
              "type": "object"
            },
            "type": "array"
          },
          "store_admins": {
            "description": "List of store admins",
            "items": {
              "properties": {
                "business_phone": {
                  "description": "The business phone number",
                  "type": "string"
                },
                "id": {
                  "description": "The business user ID",
                  "type": "integer"
                },
                "role": {
                  "properties": {
                    "id": {
                      "description": "The role ID",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the role",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ],
                  "title": "SimpleRole",
                  "type": "object"
                },
                "user": {
                  "properties": {
                    "aff_code": {
                      "description": "Affiliate code of the user",
                      "type": "string"
                    },
                    "avatar": {
                      "description": "URL to user avatar",
                      "format": "uri",
                      "type": "string"
                    },
                    "email": {
                      "description": "User email",
                      "format": "email",
                      "type": "string"
                    },
                    "fullname": {
                      "description": "User full name",
                      "type": "string"
                    },
                    "id": {
                      "description": "User ID",
                      "type": "integer"
                    },
                    "phone": {
                      "description": "User phone number",
                      "type": "string"
                    }
                  },
                  "title": "UserSimple",
                  "type": "object"
                }
              },
              "required": [
                "id",
                "user",
                "role",
                "business_phone"
              ],
              "title": "BusinessUser",
              "type": "object"
            },
            "type": "array"
          },
          "created_by": {
            "properties": {
              "aff_code": {
                "description": "Affiliate code of the user",
                "type": "string"
              },
              "avatar": {
                "description": "URL to user avatar",
                "format": "uri",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "format": "email",
                "type": "string"
              },
              "fullname": {
                "description": "User full name",
                "type": "string"
              },
              "id": {
                "description": "User ID",
                "type": "integer"
              },
              "phone": {
                "description": "User phone number",
                "type": "string"
              }
            },
            "title": "UserSimple",
            "type": "object"
          },
          "max_per_ip": {
            "description": "Maximum orders per IP address",
            "type": "integer"
          },
          "email_notification_statuses": {
            "description": "Email notification statuses",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "bundles": {
            "description": "List of bundles associated with the store",
            "items": {
              "properties": {
                "bundle_price_options": {
                  "description": "List of Bundle Price Options",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Bundle Price Option ID",
                        "type": "integer"
                      },
                      "is_owned_by_store": {
                        "description": "Is owned by store",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "Name",
                        "type": "string"
                      },
                      "price": {
                        "description": "Price (including tax)",
                        "format": "float",
                        "type": "number"
                      },
                      "price_bt": {
                        "description": "Price before tax",
                        "format": "float",
                        "type": "number"
                      },
                      "slug": {
                        "description": "Slug",
                        "type": "string"
                      },
                      "unique_id": {
                        "description": "Bundle Price Option Unique ID",
                        "type": "string"
                      }
                    },
                    "title": "BundlePriceOptionSimple",
                    "type": "object"
                  },
                  "type": "array"
                },
                "custom_id": {
                  "description": "Custom Identifier",
                  "type": "string"
                },
                "display": {
                  "description": "Display Name",
                  "type": "string"
                },
                "id": {
                  "description": "Bundle ID",
                  "type": "integer"
                },
                "images": {
                  "description": "List of Image URLs",
                  "items": {
                    "format": "uri",
                    "type": "string"
                  },
                  "type": "array"
                },
                "is_bundle_sharing": {
                  "description": "Is Bundle Sharing Enabled",
                  "type": "boolean"
                },
                "name": {
                  "description": "Name",
                  "type": "string"
                },
                "public_name": {
                  "description": "Public Name",
                  "type": "string"
                },
                "weight_bump": {
                  "description": "Weight Bump",
                  "type": "integer"
                }
              },
              "title": "BundleListSimplified",
              "type": "object"
            },
            "type": "array"
          },
          "greeting_message": {
            "description": "Greeting message for WhatsApp",
            "type": "string"
          },
          "logo": {
            "description": "URL of the store logo",
            "format": "uri",
            "type": "string"
          },
          "is_spam_filter": {
            "description": "Is spam filter with AI enabled?",
            "type": "boolean"
          },
          "cod_purchase_triggers": {
            "description": "COD purchase triggers",
            "items": {
              "enum": [
                "public_upload",
                "internal_upload",
                "confirmed",
                "shipped",
                "completed"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "is_use_waba": {
            "description": "Is WABA integration enabled?",
            "type": "boolean"
          },
          "email_reply_to_assignment": {
            "description": "Email reply-to assignment type",
            "enum": [
              "fixed",
              "rotator"
            ],
            "type": "string"
          },
          "postal_code_requirement": {
            "description": "Postal code requirement options",
            "enum": [
              "autofill",
              "manual"
            ],
            "type": "string"
          },
          "waba_account": {
            "properties": {
              "display_phone_number": {
                "description": "Display Phone Number",
                "type": "string"
              },
              "id": {
                "description": "WABA Account ID",
                "type": "integer"
              },
              "inserted_at": {
                "description": "Inserted At",
                "format": "date-time",
                "type": "string"
              },
              "is_pin_enabled": {
                "description": "Is PIN Enabled",
                "type": "boolean"
              },
              "is_webhooks_subscribed": {
                "description": "Is Webhooks Subscribed",
                "type": "boolean"
              },
              "phone_number_id": {
                "description": "Phone Number ID",
                "type": "string"
              },
              "status": {
                "description": "Status",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique Identifier",
                "type": "string"
              },
              "updated_at": {
                "description": "Updated At",
                "format": "date-time",
                "type": "string"
              },
              "verified_name": {
                "description": "Verified Name",
                "type": "string"
              },
              "waba_id": {
                "description": "WABA ID",
                "type": "string"
              }
            },
            "title": "WabaAccount",
            "type": "object"
          },
          "name": {
            "description": "Name of the store",
            "type": "string"
          },
          "id": {
            "description": "Store ID",
            "type": "integer"
          },
          "is_moota_enabled": {
            "description": "Is Moota integration enabled for this store?",
            "type": "boolean"
          },
          "sub_payment_methods": {
            "description": "Xendit VA bank codes",
            "items": {
              "description": "Xendit VA bank code",
              "enum": [
                "BCA",
                "BNI",
                "BRI",
                "MANDIRI",
                "PERMATA",
                "BSI",
                "BJB",
                "CIMB",
                "SAHABAT_SAMPOERNA",
                "ARTAJASA"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "is_ip_spam_filter": {
            "description": "Is IP spam filter enabled?",
            "type": "boolean"
          },
          "products": {
            "description": "List of products associated with the store",
            "items": {
              "properties": {
                "display": {
                  "description": "Display name of the product",
                  "type": "string"
                },
                "id": {
                  "description": "Product primary key",
                  "type": "integer"
                },
                "images": {
                  "description": "List of image URLs associated with the product",
                  "items": {
                    "format": "uri",
                    "type": "string"
                  },
                  "type": "array"
                },
                "item_type": {
                  "description": "Type of the product item",
                  "enum": [
                    "physical",
                    "digital",
                    "course"
                  ],
                  "title": "ItemType",
                  "type": "string"
                },
                "item_type_name": {
                  "description": "Human-readable name of the product item type",
                  "type": "string"
                },
                "labels": {
                  "description": "List of labels associated with the product",
                  "items": {
                    "properties": {
                      "name": {
                        "description": "Label name",
                        "type": "string"
                      }
                    },
                    "title": "ItemLabel",
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "description": "Product name",
                  "type": "string"
                },
                "option1_name": {
                  "description": "Name of first option value",
                  "type": "string"
                },
                "option2_name": {
                  "description": "Name of 2nd option value",
                  "type": "string"
                },
                "option3_name": {
                  "description": "Name of 3rd option value",
                  "type": "string"
                },
                "public_name": {
                  "description": "Product Public name",
                  "type": "string"
                },
                "uuid": {
                  "description": "Product UUID",
                  "type": "string"
                },
                "variant_count": {
                  "description": "Count of variants associated with the product",
                  "type": "integer"
                },
                "variants": {
                  "description": "List of variants associated with the product",
                  "items": {
                    "properties": {
                      "available_qty": {
                        "description": "Available quantity of the variant in inventory",
                        "type": "integer"
                      },
                      "id": {
                        "description": "Variant primary key",
                        "type": "integer"
                      },
                      "images": {
                        "description": "List of image URLs associated with the variant",
                        "items": {
                          "format": "uri",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "is_checked": {
                        "description": "Mark variant as sellable",
                        "type": "boolean"
                      },
                      "is_editable": {
                        "description": "Indicates if the variant is editable",
                        "type": "boolean"
                      },
                      "item_type": {
                        "description": "Type of the product item",
                        "enum": [
                          "physical",
                          "digital",
                          "course"
                        ],
                        "type": "string"
                      },
                      "metadata": {
                        "additionalProperties": true,
                        "description": "Additional metadata associated with the variant",
                        "type": "object"
                      },
                      "name": {
                        "description": "Full name of the variant",
                        "type": "string"
                      },
                      "option1_color": {
                        "description": "Color associated with the first product option",
                        "type": "string"
                      },
                      "option1_icon_url": {
                        "description": "Icon URL for the first product option",
                        "format": "uri",
                        "type": "string"
                      },
                      "option1_value": {
                        "description": "Value of the first product option",
                        "type": "string"
                      },
                      "option2_color": {
                        "description": "Color associated with the second product option",
                        "type": "string"
                      },
                      "option2_icon_url": {
                        "description": "Icon URL for the second product option",
                        "format": "uri",
                        "type": "string"
                      },
                      "option2_value": {
                        "description": "Value of the second product option",
                        "type": "string"
                      },
                      "option3_color": {
                        "description": "Color associated with the third product option",
                        "type": "string"
                      },
                      "option3_icon_url": {
                        "description": "Icon URL for the third product option",
                        "format": "uri",
                        "type": "string"
                      },
                      "option3_value": {
                        "description": "Value of the third product option",
                        "type": "string"
                      },
                      "price": {
                        "description": "Price of the variant",
                        "type": "number"
                      },
                      "product_name": {
                        "description": "Name of the associated product",
                        "type": "string"
                      },
                      "reseller_price": {
                        "description": "Reseller price of the variant",
                        "type": "number"
                      },
                      "unique_id": {
                        "description": "Variant unique identifier",
                        "type": "string"
                      },
                      "uuid": {
                        "description": "Variant UUID",
                        "type": "string"
                      },
                      "weight": {
                        "description": "Weight of the variant in grams",
                        "type": "integer"
                      }
                    },
                    "title": "ForStoreListVariant",
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "title": "ForStoreProductList",
              "type": "object"
            },
            "type": "array"
          },
          "courier_services": {
            "description": "List of courier services associated with the store",
            "items": {
              "properties": {
                "category": {
                  "description": "Category of the courier service",
                  "type": "string"
                },
                "code": {
                  "description": "Code for the courier service",
                  "type": "string"
                },
                "courier": {
                  "properties": {
                    "code": {
                      "description": "Courier code",
                      "type": "string"
                    },
                    "code_ka": {
                      "description": "Courier code in Georgian",
                      "type": "string"
                    },
                    "code_lincah": {
                      "description": "Courier code in Lincah",
                      "type": "string"
                    },
                    "code_mengantar": {
                      "description": "Courier code for Mengantar",
                      "type": "string"
                    },
                    "code_ro": {
                      "description": "Courier code in Romanian",
                      "type": "string"
                    },
                    "courier_type": {
                      "description": "Type of the courier",
                      "enum": [
                        "delivery",
                        "pickup"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "Courier ID",
                      "type": "integer"
                    },
                    "is_pickup": {
                      "description": "Is this a pickup courier?",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Courier name",
                      "type": "string"
                    }
                  },
                  "title": "Courier",
                  "type": "object"
                },
                "description": {
                  "description": "Description of the courier service",
                  "type": "string"
                },
                "id": {
                  "description": "Courier Service ID",
                  "type": "integer"
                },
                "is_cod": {
                  "description": "Is Cash on Delivery available for this courier service",
                  "type": "boolean"
                },
                "name": {
                  "description": "Name of the courier service",
                  "type": "string"
                }
              },
              "title": "ForStoreCourierService",
              "type": "object"
            },
            "type": "array"
          },
          "unique_id": {
            "description": "Unique identifier for the store",
            "type": "string"
          },
          "inactivity_period": {
            "description": "Inactivity period for WhatsApp",
            "type": "integer"
          },
          "payment_accounts": {
            "description": "List of payment accounts associated with the store",
            "items": {
              "properties": {
                "account_holder": {
                  "description": "Account Holder Name",
                  "type": "string"
                },
                "account_number": {
                  "description": "Account Number",
                  "type": "string"
                },
                "financial_entity": {
                  "properties": {
                    "code": {
                      "description": "Code of the financial entity",
                      "type": "string"
                    },
                    "duitku_code": {
                      "description": "Duitku code for the financial entity",
                      "type": "string"
                    },
                    "entity_type": {
                      "description": "Type of the financial entity",
                      "type": "string"
                    },
                    "id": {
                      "description": "Financial Entity ID",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Name of the financial entity",
                      "type": "string"
                    },
                    "platform": {
                      "description": "Platform associated with the financial entity",
                      "type": "string"
                    },
                    "xendit_code": {
                      "description": "Xendit code for the financial entity",
                      "type": "string"
                    }
                  },
                  "title": "FinancialEntity",
                  "type": "object"
                },
                "id": {
                  "description": "Payment Account ID",
                  "type": "integer"
                },
                "method": {
                  "description": "Payment Method",
                  "type": "string"
                },
                "unique_id": {
                  "description": "Unique Identifier",
                  "type": "string"
                }
              },
              "title": "PaymentAccount",
              "type": "object"
            },
            "type": "array"
          },
          "is_customer_otp_required": {
            "description": "Is customer OTP required?",
            "type": "boolean"
          },
          "other_income_name": {
            "description": "Name of the other income",
            "type": "string"
          },
          "auto_expire_days": {
            "description": "Days until auto-expire",
            "type": "integer"
          },
          "max_unique_code_amount": {
            "description": "Maximum amount for unique code orders",
            "format": "float",
            "type": "number"
          },
          "is_greeting_message_enabled": {
            "description": "Is greeting message enabled?",
            "type": "boolean"
          },
          "is_customer_spam_filter": {
            "description": "Is customer spam filter enabled?",
            "type": "boolean"
          },
          "is_show_download_invoice": {
            "description": "Is show download invoice option enabled?",
            "type": "boolean"
          },
          "is_auto_expire": {
            "description": "Is auto-expire enabled?",
            "type": "boolean"
          },
          "is_show_scalev_branding": {
            "description": "Is Scalev branding shown?",
            "type": "boolean"
          },
          "dynamic_other_income_epayment_default_amount": {
            "description": "Default amount for dynamic e-payment income",
            "format": "float",
            "type": "number"
          },
          "is_fuc_bundle_enabled": {
            "description": "Is follow-up chat for bundles enabled?",
            "type": "boolean"
          },
          "min_address_length": {
            "description": "Minimum address length for validation",
            "type": "integer"
          },
          "is_transferproof_required": {
            "description": "Is transfer proof required for orders in this store?",
            "type": "boolean"
          },
          "fixed_auto_other_income": {
            "description": "Fixed auto other income amount",
            "format": "float",
            "type": "number"
          },
          "auto_other_income": {
            "description": "Type of auto other income",
            "type": "string"
          },
          "max_per_phone": {
            "description": "Maximum orders per phone number",
            "type": "integer"
          },
          "capi_purchase_value_type": {
            "description": "Type of CAPI purchase value",
            "enum": [
              "gross_revenue",
              "net_revenue",
              "adj_gross_revenue"
            ],
            "type": "string"
          },
          "last_updated_at": {
            "description": "Last update timestamp",
            "format": "date-time",
            "type": "string"
          },
          "is_show_whatsapp": {
            "description": "Is show WhatsApp option enabled?",
            "type": "boolean"
          },
          "digital_only_complete_type": {
            "description": "Digital only complete type",
            "type": "string"
          },
          "is_active": {
            "description": "Is the store active?",
            "type": "boolean"
          },
          "dynamic_other_income_epayment_default_percentage": {
            "description": "Default percentage for dynamic e-payment income",
            "format": "float",
            "type": "number"
          },
          "dynamic_other_income_cod_type": {
            "description": "Type of amount (fixed or percentage)",
            "enum": [
              "fixed",
              "percentage"
            ],
            "type": "string"
          },
          "created_at": {
            "description": "Creation timestamp",
            "format": "date-time",
            "type": "string"
          },
          "custom_domain": {
            "properties": {
              "full_url": {
                "description": "Full URL",
                "format": "uri",
                "type": "string"
              },
              "id": {
                "description": "Custom Domain ID",
                "type": "integer"
              },
              "is_verified": {
                "description": "Is Verified",
                "type": "boolean"
              }
            },
            "title": "SimpleCustomDomain",
            "type": "object"
          }
        },
        "title": "Store",
        "type": "object"
      },
      "PageRelation": {
        "properties": {
          "business": {
            "properties": {
              "account_holder": {
                "description": "Name of the account holder",
                "type": "string"
              },
              "email": {
                "description": "Email address of the business",
                "format": "email",
                "type": "string"
              },
              "id": {
                "description": "Business ID",
                "type": "integer"
              },
              "is_banned": {
                "description": "Is the business banned?",
                "type": "boolean"
              },
              "logo": {
                "description": "URL to the business logo",
                "format": "uri",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique identifier for the business",
                "type": "string"
              },
              "username": {
                "description": "Username of the business",
                "type": "string"
              }
            },
            "title": "BusinessSimple",
            "type": "object"
          },
          "id": {
            "description": "Page ID",
            "type": "integer"
          },
          "name": {
            "description": "Name of the page",
            "type": "string"
          },
          "slug": {
            "description": "Slug for the page URL",
            "type": "string"
          },
          "unique_id": {
            "description": "Unique identifier for the page",
            "type": "string"
          }
        },
        "title": "PageRelation",
        "type": "object"
      },
      "BlankSuccessResponse": {
        "properties": {
          "code": {
            "example": 200,
            "type": "integer"
          },
          "status": {
            "example": "Success",
            "type": "string"
          }
        },
        "title": "BlankSuccessResponse",
        "type": "object"
      },
      "BundlePartner": {
        "properties": {
          "created_at": {
            "description": "Creation timestamp",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Bundle Partner ID",
            "type": "integer"
          },
          "partner": {
            "properties": {
              "account_holder": {
                "description": "Name of the account holder",
                "type": "string"
              },
              "email": {
                "description": "Email address of the business",
                "format": "email",
                "type": "string"
              },
              "id": {
                "description": "Business ID",
                "type": "integer"
              },
              "is_banned": {
                "description": "Is the business banned?",
                "type": "boolean"
              },
              "logo": {
                "description": "URL to the business logo",
                "format": "uri",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique identifier for the business",
                "type": "string"
              },
              "username": {
                "description": "Username of the business",
                "type": "string"
              }
            },
            "title": "BusinessSimple",
            "type": "object"
          }
        },
        "required": [
          "id",
          "partner",
          "created_at"
        ],
        "title": "BundlePartner",
        "type": "object"
      },
      "UploadOrders": {
        "properties": {
          "failed": {
            "properties": {
              "ID_OF_ORDER": {
                "description": "Error for the order with this ID",
                "type": "string"
              }
            },
            "type": "object"
          },
          "success": {
            "items": {
              "properties": {
                "external_id": {
                  "description": "External ID of the order",
                  "nullable": true,
                  "type": "string"
                },
                "id": {
                  "description": "Order primary key",
                  "type": "integer"
                },
                "order_id": {
                  "description": "Order ID in string format",
                  "type": "string"
                },
                "payment_status": {
                  "description": "Order payment status",
                  "enum": [
                    "unpaid",
                    "paid",
                    "conflict",
                    "settled"
                  ],
                  "type": "string"
                },
                "status": {
                  "description": "Order status",
                  "enum": [
                    "draft",
                    "pending",
                    "confirmed",
                    "in_process",
                    "ready",
                    "shipped",
                    "completed",
                    "canceled",
                    "rts",
                    "closed"
                  ],
                  "type": "string"
                }
              },
              "title": "SuccessUploadOrders",
              "type": "object"
            },
            "type": "array"
          }
        },
        "title": "UploadOrders",
        "type": "object"
      },
      "ForbiddenError": {
        "properties": {
          "code": {
            "example": 403,
            "type": "integer"
          },
          "status": {
            "example": "Forbidden",
            "type": "string"
          }
        },
        "title": "ForbiddenError",
        "type": "object"
      },
      "CourierServiceResult": {
        "properties": {
          "cost": {
            "description": "Cost of the shipment",
            "format": "float",
            "type": "number"
          },
          "cost_source": {
            "description": "Source of the cost",
            "type": "string"
          },
          "courier_service": {
            "properties": {
              "code": {
                "description": "Code for the courier service",
                "type": "string"
              },
              "courier": {
                "properties": {
                  "code": {
                    "description": "Courier code",
                    "type": "string"
                  },
                  "courier_type": {
                    "description": "Type of the courier",
                    "enum": [
                      "instant",
                      "cashless",
                      "standard"
                    ],
                    "example": "standard",
                    "title": "CourierType",
                    "type": "string"
                  },
                  "id": {
                    "description": "Courier ID",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Courier name",
                    "type": "string"
                  }
                },
                "title": "CourierLocationData",
                "type": "object"
              },
              "id": {
                "description": "Courier Service ID",
                "type": "integer"
              },
              "name": {
                "description": "Name of the courier service",
                "type": "string"
              }
            },
            "title": "CourierServiceLocationData",
            "type": "object"
          },
          "etd": {
            "description": "Estimated time of delivery",
            "type": "string"
          },
          "is_cod": {
            "description": "Is Cash on Delivery available",
            "type": "boolean"
          },
          "is_pickup": {
            "description": "Is Pickup available",
            "type": "boolean"
          },
          "shipment_provider_code": {
            "description": "Code of the shipment provider",
            "type": "string"
          },
          "warehouse": {
            "properties": {
              "address": {
                "description": "Address of the warehouse",
                "type": "string"
              },
              "city_name": {
                "description": "City name of the warehouse location",
                "type": "string"
              },
              "id": {
                "description": "Warehouse ID",
                "type": "integer"
              },
              "lincah_origin_id": {
                "description": "Lincah origin ID for the warehouse",
                "type": "string"
              },
              "mengantar_origin_id": {
                "description": "Mengantar origin ID for the warehouse",
                "type": "string"
              },
              "name": {
                "description": "Name of the warehouse",
                "type": "string"
              },
              "province_name": {
                "description": "Province name of the warehouse location",
                "type": "string"
              },
              "subdistrict_name": {
                "description": "Subdistrict name of the warehouse location",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique identifier of the warehouse",
                "type": "string"
              }
            },
            "title": "ForLocationWarehouse",
            "type": "object"
          },
          "weight": {
            "description": "Weight of the shipment in grams",
            "type": "integer"
          }
        },
        "title": "CourierServiceResult",
        "type": "object"
      },
      "SuccessUploadOrders": {
        "properties": {
          "external_id": {
            "description": "External ID of the order",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Order primary key",
            "type": "integer"
          },
          "order_id": {
            "description": "Order ID in string format",
            "type": "string"
          },
          "payment_status": {
            "description": "Order payment status",
            "enum": [
              "unpaid",
              "paid",
              "conflict",
              "settled"
            ],
            "type": "string"
          },
          "status": {
            "description": "Order status",
            "enum": [
              "draft",
              "pending",
              "confirmed",
              "in_process",
              "ready",
              "shipped",
              "completed",
              "canceled",
              "rts",
              "closed"
            ],
            "type": "string"
          }
        },
        "title": "SuccessUploadOrders",
        "type": "object"
      },
      "CreatePartnerRequest": {
        "properties": {
          "partner_unique_id": {
            "description": "Partner Unique ID",
            "type": "string"
          }
        },
        "required": [
          "partner_unique_id"
        ],
        "title": "CreatePartnerRequest",
        "type": "object"
      },
      "BundlePriceOption": {
        "properties": {
          "bundle_id": {
            "description": "Bundle ID",
            "type": "integer"
          },
          "id": {
            "description": "Bundle Price Option ID",
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "price": {
            "description": "Price (including tax)",
            "format": "float",
            "type": "number"
          },
          "price_bt": {
            "description": "Price before tax",
            "format": "float",
            "type": "number"
          },
          "slug": {
            "description": "Slug",
            "type": "string"
          },
          "stores": {
            "description": "List of stores where the bundle price option is available",
            "items": {
              "properties": {
                "custom_domain": {
                  "properties": {
                    "full_url": {
                      "description": "Full URL",
                      "format": "uri",
                      "type": "string"
                    },
                    "id": {
                      "description": "Custom Domain ID",
                      "type": "integer"
                    },
                    "is_verified": {
                      "description": "Is Verified",
                      "type": "boolean"
                    }
                  },
                  "title": "SimpleCustomDomain",
                  "type": "object"
                },
                "id": {
                  "description": "Store ID",
                  "type": "integer"
                },
                "name": {
                  "description": "Store name",
                  "type": "string"
                }
              },
              "title": "DomainStore",
              "type": "object"
            },
            "type": "array"
          },
          "unique_id": {
            "description": "Bundle Price Option Unique ID",
            "type": "string"
          }
        },
        "title": "BundlePriceOption",
        "type": "object"
      },
      "ShippingCostResult": {
        "description": "Schema for a single shipping cost result",
        "properties": {
          "cost": {
            "description": "Cost of the shipment",
            "format": "float",
            "type": "number"
          },
          "cost_source": {
            "description": "Source of the cost",
            "type": "string"
          },
          "courier_service": {
            "properties": {
              "code": {
                "description": "Code for the courier service",
                "type": "string"
              },
              "courier": {
                "properties": {
                  "code": {
                    "description": "Courier code",
                    "type": "string"
                  },
                  "courier_type": {
                    "description": "Type of the courier",
                    "enum": [
                      "instant",
                      "cashless",
                      "standard"
                    ],
                    "example": "standard",
                    "title": "CourierType",
                    "type": "string"
                  },
                  "id": {
                    "description": "Courier ID",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Courier name",
                    "type": "string"
                  }
                },
                "title": "CourierLocationData",
                "type": "object"
              },
              "id": {
                "description": "Courier Service ID",
                "type": "integer"
              },
              "name": {
                "description": "Name of the courier service",
                "type": "string"
              }
            },
            "title": "CourierServiceLocationData",
            "type": "object"
          },
          "etd": {
            "description": "Estimated time of delivery",
            "type": "string"
          },
          "weight": {
            "description": "Weight of the shipment in grams",
            "type": "integer"
          }
        },
        "required": [
          "cost_source",
          "courier_service",
          "weight",
          "etd",
          "cost"
        ],
        "title": "ShippingCostResult",
        "type": "object"
      },
      "OrderUpdateShipmentDataBody": {
        "properties": {
          "awb_ca_status": {
            "description": "Order AWB courier aggregator status",
            "enum": [
              "unavailable",
              "pending",
              "waiting",
              "failed",
              "created",
              "canceled"
            ],
            "type": "string"
          },
          "courier_additional_info": {
            "description": "Additional courier information",
            "nullable": true,
            "type": "string"
          },
          "is_shipment_completed": {
            "description": "Is the shipment completed",
            "type": "boolean"
          },
          "shipment_provider_code": {
            "description": "Shipment provider code",
            "enum": [
              "mengantar",
              "lincah",
              "ninja"
            ],
            "nullable": true,
            "type": "string"
          },
          "shipment_receipt": {
            "description": "Shipment receipt / tracking ID",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "OrderUpdateShipmentDataBody",
        "type": "object"
      },
      "BusinessUser": {
        "properties": {
          "business_phone": {
            "description": "The business phone number",
            "type": "string"
          },
          "id": {
            "description": "The business user ID",
            "type": "integer"
          },
          "role": {
            "properties": {
              "id": {
                "description": "The role ID",
                "type": "integer"
              },
              "name": {
                "description": "The name of the role",
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ],
            "title": "SimpleRole",
            "type": "object"
          },
          "user": {
            "properties": {
              "aff_code": {
                "description": "Affiliate code of the user",
                "type": "string"
              },
              "avatar": {
                "description": "URL to user avatar",
                "format": "uri",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "format": "email",
                "type": "string"
              },
              "fullname": {
                "description": "User full name",
                "type": "string"
              },
              "id": {
                "description": "User ID",
                "type": "integer"
              },
              "phone": {
                "description": "User phone number",
                "type": "string"
              }
            },
            "title": "UserSimple",
            "type": "object"
          }
        },
        "required": [
          "id",
          "user",
          "role",
          "business_phone"
        ],
        "title": "BusinessUser",
        "type": "object"
      },
      "GetCourierServiceRequest": {
        "description": "Schema for requesting courier services",
        "properties": {
          "is_show_all": {
            "description": "Whether to show all courier services or only those available",
            "type": "boolean"
          },
          "location_id": {
            "description": "ID of the destination location",
            "type": "integer"
          },
          "payment_method": {
            "description": "Order payment method",
            "enum": [
              "gopay",
              "va",
              "qris",
              "card",
              "invoice",
              "alfamart",
              "ovo",
              "dana",
              "shopeepay",
              "linkaja",
              "no_payment",
              "bank_transfer",
              "marketplace",
              "cod"
            ],
            "type": "string"
          },
          "postal_code": {
            "description": "Postal code of the destination",
            "type": "string"
          },
          "store_id": {
            "description": "ID of the store",
            "type": "integer"
          },
          "warehouse_id": {
            "description": "ID of the warehouse",
            "type": "integer"
          },
          "weight": {
            "description": "Weight of the shipment in grams",
            "type": "integer"
          }
        },
        "required": [
          "store_id",
          "location_id",
          "warehouse_id",
          "payment_method",
          "weight"
        ],
        "title": "GetCourierServiceRequest",
        "type": "object"
      },
      "NotFoundError": {
        "properties": {
          "code": {
            "example": 404,
            "type": "integer"
          },
          "error": {
            "type": "string"
          },
          "status": {
            "example": "Not Found",
            "type": "string"
          }
        },
        "title": "NotFoundError",
        "type": "object"
      },
      "CourierService": {
        "properties": {
          "code": {
            "description": "Code for the courier service",
            "type": "string"
          },
          "code_co": {
            "description": "Code for CO courier service",
            "type": "string"
          },
          "code_ka": {
            "description": "Code for KA courier service",
            "type": "string"
          },
          "code_lincah": {
            "description": "Code for Lincah courier service",
            "type": "string"
          },
          "code_mengantar": {
            "description": "Code for Mengantar courier service",
            "type": "string"
          },
          "code_ro": {
            "description": "Code for RO courier service",
            "type": "string"
          },
          "courier": {
            "properties": {
              "code": {
                "description": "Courier code",
                "type": "string"
              },
              "code_ka": {
                "description": "Courier code in Georgian",
                "type": "string"
              },
              "code_lincah": {
                "description": "Courier code in Lincah",
                "type": "string"
              },
              "code_mengantar": {
                "description": "Courier code for Mengantar",
                "type": "string"
              },
              "code_ro": {
                "description": "Courier code in Romanian",
                "type": "string"
              },
              "courier_type": {
                "description": "Type of the courier",
                "enum": [
                  "delivery",
                  "pickup"
                ],
                "type": "string"
              },
              "id": {
                "description": "Courier ID",
                "type": "integer"
              },
              "is_pickup": {
                "description": "Is this a pickup courier?",
                "type": "boolean"
              },
              "name": {
                "description": "Courier name",
                "type": "string"
              }
            },
            "title": "Courier",
            "type": "object"
          },
          "id": {
            "description": "Courier Service ID",
            "type": "integer"
          },
          "name": {
            "description": "Name of the courier service",
            "type": "string"
          }
        },
        "title": "CourierService",
        "type": "object"
      },
      "UpdateRequestProduct": {
        "properties": {
          "description": {
            "description": "Description",
            "type": "string"
          },
          "is_inventory": {
            "description": "Is Inventory",
            "type": "boolean"
          },
          "is_multiple": {
            "description": "Is Multiple",
            "type": "boolean"
          },
          "is_product_sharing": {
            "description": "Is Product Sharing",
            "type": "boolean"
          },
          "item_type": {
            "description": "Type of the product item",
            "enum": [
              "physical",
              "digital",
              "course"
            ],
            "title": "ItemType",
            "type": "string"
          },
          "meta_thumbnail": {
            "description": "Meta Thumbnail",
            "format": "uri",
            "type": "string"
          },
          "name": {
            "description": "Product Name",
            "type": "string"
          },
          "option1_name": {
            "description": "Option 1 Name",
            "type": "string"
          },
          "option2_name": {
            "description": "Option 2 Name",
            "type": "string"
          },
          "option3_name": {
            "description": "Option 3 Name",
            "type": "string"
          },
          "public_name": {
            "description": "Product Public Name",
            "type": "string"
          },
          "rich_description": {
            "description": "Rich Description",
            "type": "string"
          },
          "slug": {
            "description": "Product Slug",
            "type": "string"
          },
          "taxonomy_id": {
            "description": "Taxonomy ID",
            "type": "integer"
          },
          "variants": {
            "description": "List of variants associated with the product",
            "items": {
              "properties": {
                "cogs": {
                  "description": "Cost of Goods Sold",
                  "type": "number"
                },
                "description": {
                  "description": "Variant Description",
                  "type": "string"
                },
                "images": {
                  "description": "List of image URLs",
                  "items": {
                    "format": "uri",
                    "type": "string"
                  },
                  "type": "array"
                },
                "is_checked": {
                  "description": "Mark variant as sellable",
                  "type": "boolean"
                },
                "is_deleted": {
                  "description": "Mark variant as deleted",
                  "type": "boolean"
                },
                "metadata": {
                  "additionalProperties": true,
                  "description": "Additional metadata",
                  "type": "object"
                },
                "option1_value": {
                  "description": "Option 1 Value",
                  "type": "string"
                },
                "option2_value": {
                  "description": "Option 2 Value",
                  "type": "string"
                },
                "option3_value": {
                  "description": "Option 3 Value",
                  "type": "string"
                },
                "price": {
                  "description": "Price",
                  "type": "number"
                },
                "reseller_price": {
                  "description": "Reseller Price",
                  "type": "number"
                },
                "rich_description": {
                  "description": "Variant Rich Description",
                  "type": "string"
                },
                "self_file_urls": {
                  "description": "List of self file URLs",
                  "items": {
                    "format": "uri",
                    "type": "string"
                  },
                  "type": "array"
                },
                "sku": {
                  "description": "SKU",
                  "type": "string"
                },
                "variant_id": {
                  "description": "Variant ID for update; leave empty for create",
                  "type": "integer"
                },
                "weight": {
                  "description": "Weight in grams",
                  "type": "integer"
                }
              },
              "required": [
                "price",
                "weight"
              ],
              "title": "RequestVariant",
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "item_type"
        ],
        "title": "UpdateRequestProduct",
        "type": "object"
      },
      "VariantList": {
        "properties": {
          "digital_product_files": {
            "description": "List of digital product files associated with the variant",
            "items": {
              "properties": {
                "content_type": {
                  "description": "MIME type of the digital product file",
                  "type": "string"
                },
                "id": {
                  "description": "Digital product file primary key",
                  "type": "integer"
                },
                "name": {
                  "description": "File name of the digital product file",
                  "type": "string"
                },
                "size_in_bytes": {
                  "description": "Size of the digital product file in bytes",
                  "type": "integer"
                },
                "url": {
                  "description": "URL to access the digital product file",
                  "format": "uri",
                  "type": "string"
                }
              },
              "title": "DigitalProductFile",
              "type": "object"
            },
            "type": "array"
          },
          "id": {
            "description": "Variant primary key",
            "type": "integer"
          },
          "images": {
            "description": "List of image URLs associated with the variant",
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "is_checked": {
            "description": "Mark variant as sellable",
            "type": "boolean"
          },
          "is_editable": {
            "description": "Indicates if the variant is editable",
            "type": "boolean"
          },
          "item_type": {
            "description": "Type of the product item",
            "enum": [
              "physical",
              "digital",
              "course"
            ],
            "type": "string"
          },
          "metadata": {
            "additionalProperties": true,
            "description": "Additional metadata associated with the variant",
            "type": "object"
          },
          "name": {
            "description": "Full name of the variant",
            "type": "string"
          },
          "product_name": {
            "description": "Name of the associated product",
            "type": "string"
          },
          "self_file_urls": {
            "description": "List of self file URLs associated with the variant",
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "unique_id": {
            "description": "Variant unique identifier",
            "type": "string"
          },
          "uuid": {
            "description": "Variant UUID",
            "type": "string"
          },
          "weight": {
            "description": "Weight of the variant in grams",
            "type": "integer"
          }
        },
        "title": "VariantList",
        "type": "object"
      },
      "OrderMessageHistory": {
        "properties": {
          "id": {
            "description": "Order primary key",
            "type": "integer"
          },
          "message_history": {
            "description": "Message history associated with the order",
            "items": {
              "properties": {
                "id": {
                  "description": "ID of the Follow Up Chat",
                  "type": "integer"
                },
                "is_from_bot": {
                  "description": "Is the message from bot",
                  "type": "boolean"
                },
                "message": {
                  "description": "Message content",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the sender",
                  "type": "string"
                },
                "provider": {
                  "description": "Message provider",
                  "type": "string"
                },
                "recipient_name": {
                  "description": "Recipient name",
                  "type": "string"
                },
                "recipient_phone": {
                  "description": "Recipient phone number",
                  "type": "string"
                },
                "sender_name": {
                  "description": "Sender name",
                  "type": "string"
                },
                "sender_phone": {
                  "description": "Sender phone number",
                  "type": "string"
                },
                "timestamp": {
                  "description": "Timestamp of the message",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "title": "MessageHistoryItem",
              "type": "object"
            },
            "type": "array"
          }
        },
        "title": "OrderMessageHistory",
        "type": "object"
      },
      "CourierLocationData": {
        "properties": {
          "code": {
            "description": "Courier code",
            "type": "string"
          },
          "courier_type": {
            "description": "Type of the courier",
            "enum": [
              "instant",
              "cashless",
              "standard"
            ],
            "example": "standard",
            "title": "CourierType",
            "type": "string"
          },
          "id": {
            "description": "Courier ID",
            "type": "integer"
          },
          "name": {
            "description": "Courier name",
            "type": "string"
          }
        },
        "title": "CourierLocationData",
        "type": "object"
      },
      "ManagingFollowUpChat": {
        "properties": {
          "bundle_id": {
            "description": "Bundle ID associated with the follow-up chat",
            "type": "integer"
          },
          "change_status": {
            "description": "Triggered after order status change to this status",
            "type": "boolean"
          },
          "hours_after": {
            "description": "Hours after which the follow-up chat is sent",
            "type": "integer"
          },
          "id": {
            "description": "Follow-up chat ID",
            "type": "integer"
          },
          "image": {
            "description": "Image URL for the follow-up chat",
            "format": "uri",
            "type": "string"
          },
          "is_default": {
            "description": "Is this a default follow-up chat",
            "type": "boolean"
          },
          "name": {
            "description": "Name of the follow-up chat",
            "type": "string"
          },
          "product_id": {
            "description": "Product ID associated with the follow-up chat",
            "type": "integer"
          },
          "provider": {
            "description": "Provider of the follow-up chat",
            "type": "string"
          },
          "store_id": {
            "description": "Store ID associated with the follow-up chat",
            "type": "integer"
          },
          "text_for_bank_transfer": {
            "description": "Text for bank transfer payments",
            "type": "string"
          },
          "text_for_cod": {
            "description": "Text for cash on delivery payments",
            "type": "string"
          },
          "text_for_epayment": {
            "description": "Text for electronic payments",
            "type": "string"
          },
          "trigger": {
            "description": "Trigger for the follow-up chat",
            "type": "string"
          },
          "wa_gateway_assignation_type": {
            "description": "WhatsApp gateway assignation type",
            "type": "string"
          },
          "wa_integration": {
            "properties": {
              "id": {
                "description": "Whatsapp Integration ID",
                "type": "integer"
              },
              "name": {
                "description": "Name",
                "type": "string"
              },
              "phone_number": {
                "description": "Phone Number",
                "type": "string"
              },
              "provider": {
                "description": "Provider",
                "type": "string"
              }
            },
            "title": "WhatsappIntegration",
            "type": "object"
          }
        },
        "title": "ManagingFollowUpChat",
        "type": "object"
      },
      "ForStoreCourierService": {
        "properties": {
          "category": {
            "description": "Category of the courier service",
            "type": "string"
          },
          "code": {
            "description": "Code for the courier service",
            "type": "string"
          },
          "courier": {
            "properties": {
              "code": {
                "description": "Courier code",
                "type": "string"
              },
              "code_ka": {
                "description": "Courier code in Georgian",
                "type": "string"
              },
              "code_lincah": {
                "description": "Courier code in Lincah",
                "type": "string"
              },
              "code_mengantar": {
                "description": "Courier code for Mengantar",
                "type": "string"
              },
              "code_ro": {
                "description": "Courier code in Romanian",
                "type": "string"
              },
              "courier_type": {
                "description": "Type of the courier",
                "enum": [
                  "delivery",
                  "pickup"
                ],
                "type": "string"
              },
              "id": {
                "description": "Courier ID",
                "type": "integer"
              },
              "is_pickup": {
                "description": "Is this a pickup courier?",
                "type": "boolean"
              },
              "name": {
                "description": "Courier name",
                "type": "string"
              }
            },
            "title": "Courier",
            "type": "object"
          },
          "description": {
            "description": "Description of the courier service",
            "type": "string"
          },
          "id": {
            "description": "Courier Service ID",
            "type": "integer"
          },
          "is_cod": {
            "description": "Is Cash on Delivery available for this courier service",
            "type": "boolean"
          },
          "name": {
            "description": "Name of the courier service",
            "type": "string"
          }
        },
        "title": "ForStoreCourierService",
        "type": "object"
      },
      "CourierServiceLocationData": {
        "properties": {
          "code": {
            "description": "Code for the courier service",
            "type": "string"
          },
          "courier": {
            "properties": {
              "code": {
                "description": "Courier code",
                "type": "string"
              },
              "courier_type": {
                "description": "Type of the courier",
                "enum": [
                  "instant",
                  "cashless",
                  "standard"
                ],
                "example": "standard",
                "title": "CourierType",
                "type": "string"
              },
              "id": {
                "description": "Courier ID",
                "type": "integer"
              },
              "name": {
                "description": "Courier name",
                "type": "string"
              }
            },
            "title": "CourierLocationData",
            "type": "object"
          },
          "id": {
            "description": "Courier Service ID",
            "type": "integer"
          },
          "name": {
            "description": "Name of the courier service",
            "type": "string"
          }
        },
        "title": "CourierServiceLocationData",
        "type": "object"
      },
      "OrderAvailableActions": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "is_digital_product_present": {
            "type": "boolean"
          },
          "is_physical_product_present": {
            "type": "boolean"
          },
          "order_id": {
            "type": "string"
          }
        },
        "title": "OrderAvailableActions",
        "type": "object"
      },
      "OrderMarkNotSpam": {
        "properties": {
          "id": {
            "description": "Order primary key",
            "type": "integer"
          },
          "is_probably_spam": {
            "description": "Is probably spam",
            "type": "boolean"
          },
          "mark_as_spam_by": {
            "description": "Who marked as spam",
            "nullable": true,
            "type": "string"
          },
          "order_id": {
            "description": "Order ID in string format",
            "type": "string"
          },
          "payment_status": {
            "description": "Order payment status",
            "enum": [
              "unpaid",
              "paid",
              "conflict",
              "settled"
            ],
            "type": "string"
          },
          "status": {
            "description": "Order status",
            "enum": [
              "draft",
              "pending",
              "confirmed",
              "in_process",
              "ready",
              "shipped",
              "completed",
              "canceled",
              "rts",
              "closed"
            ],
            "type": "string"
          }
        },
        "title": "OrderMarkNotSpam",
        "type": "object"
      },
      "CreateStore": {
        "properties": {
          "name": {
            "description": "Store name",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "CreateStore",
        "type": "object"
      },
      "StoreCustomAudience": {
        "description": "Store Custom Audience Schema",
        "properties": {
          "custom_audience_id": {
            "description": "Custom Audience ID",
            "type": "integer"
          },
          "order_status": {
            "description": "Order status",
            "enum": [
              "draft",
              "pending",
              "confirmed",
              "in_process",
              "ready",
              "shipped",
              "completed",
              "canceled",
              "rts",
              "closed"
            ],
            "type": "string"
          }
        },
        "required": [
          "order_status",
          "custom_audience_id"
        ],
        "title": "StoreCustomAudience",
        "type": "object"
      },
      "BundleLineForPageWithProduct": {
        "properties": {
          "id": {
            "description": "Bundle Line ID",
            "type": "integer"
          },
          "quantity": {
            "description": "Quantity of the variant in the bundle line",
            "type": "integer"
          },
          "variant": {
            "properties": {
              "description": {
                "description": "Variant Description",
                "type": "string"
              },
              "id": {
                "description": "Variant ID",
                "type": "integer"
              },
              "images": {
                "items": {
                  "format": "uri",
                  "type": "string"
                },
                "type": "array"
              },
              "item_type": {
                "description": "Type of the product item",
                "enum": [
                  "physical",
                  "digital",
                  "course"
                ],
                "title": "ItemType",
                "type": "string"
              },
              "metadata": {
                "additionalProperties": true,
                "type": "object"
              },
              "name": {
                "description": "Variant Fullname",
                "type": "string"
              },
              "option1_value": {
                "description": "Option 1 Value",
                "type": "string"
              },
              "option2_value": {
                "description": "Option 2 Value",
                "type": "string"
              },
              "option3_value": {
                "description": "Option 3 Value",
                "type": "string"
              },
              "price": {
                "description": "Price",
                "type": "number"
              },
              "product": {
                "properties": {
                  "id": {
                    "description": "Product ID",
                    "type": "integer"
                  },
                  "item_type": {
                    "description": "Type of the product item",
                    "enum": [
                      "physical",
                      "digital",
                      "course"
                    ],
                    "title": "ItemType",
                    "type": "string"
                  },
                  "name": {
                    "description": "Product Name",
                    "type": "string"
                  }
                },
                "title": "ProductNameType",
                "type": "object"
              },
              "product_id": {
                "description": "Product ID",
                "type": "integer"
              },
              "product_name": {
                "description": "Product Name",
                "type": "string"
              },
              "rich_description": {
                "description": "Variant Rich Description",
                "type": "string"
              },
              "sku": {
                "description": "SKU",
                "type": "string"
              },
              "unique_id": {
                "description": "Variant Unique ID",
                "type": "string"
              },
              "weight": {
                "description": "Weight",
                "type": "integer"
              }
            },
            "title": "VariantForPageWithProduct",
            "type": "object"
          }
        },
        "title": "BundleLineForPageWithProduct",
        "type": "object"
      },
      "ProductForStoreRelation": {
        "properties": {
          "id": {
            "description": "Product ID",
            "type": "integer"
          },
          "name": {
            "description": "Product Name",
            "type": "string"
          },
          "pages": {
            "properties": {
              "all": {
                "items": {
                  "properties": {
                    "business": {
                      "properties": {
                        "account_holder": {
                          "description": "Name of the account holder",
                          "type": "string"
                        },
                        "email": {
                          "description": "Email address of the business",
                          "format": "email",
                          "type": "string"
                        },
                        "id": {
                          "description": "Business ID",
                          "type": "integer"
                        },
                        "is_banned": {
                          "description": "Is the business banned?",
                          "type": "boolean"
                        },
                        "logo": {
                          "description": "URL to the business logo",
                          "format": "uri",
                          "type": "string"
                        },
                        "unique_id": {
                          "description": "Unique identifier for the business",
                          "type": "string"
                        },
                        "username": {
                          "description": "Username of the business",
                          "type": "string"
                        }
                      },
                      "title": "BusinessSimple",
                      "type": "object"
                    },
                    "id": {
                      "description": "Page ID",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Name of the page",
                      "type": "string"
                    },
                    "slug": {
                      "description": "Slug for the page URL",
                      "type": "string"
                    },
                    "unique_id": {
                      "description": "Unique identifier for the page",
                      "type": "string"
                    }
                  },
                  "title": "PageRelation",
                  "type": "object"
                },
                "type": "array"
              },
              "will_unpublish": {
                "items": {
                  "properties": {
                    "business": {
                      "properties": {
                        "account_holder": {
                          "description": "Name of the account holder",
                          "type": "string"
                        },
                        "email": {
                          "description": "Email address of the business",
                          "format": "email",
                          "type": "string"
                        },
                        "id": {
                          "description": "Business ID",
                          "type": "integer"
                        },
                        "is_banned": {
                          "description": "Is the business banned?",
                          "type": "boolean"
                        },
                        "logo": {
                          "description": "URL to the business logo",
                          "format": "uri",
                          "type": "string"
                        },
                        "unique_id": {
                          "description": "Unique identifier for the business",
                          "type": "string"
                        },
                        "username": {
                          "description": "Username of the business",
                          "type": "string"
                        }
                      },
                      "title": "BusinessSimple",
                      "type": "object"
                    },
                    "id": {
                      "description": "Page ID",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Name of the page",
                      "type": "string"
                    },
                    "slug": {
                      "description": "Slug for the page URL",
                      "type": "string"
                    },
                    "unique_id": {
                      "description": "Unique identifier for the page",
                      "type": "string"
                    }
                  },
                  "title": "PageRelation",
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "title": "ProductForStoreRelation",
        "type": "object"
      },
      "BundleList": {
        "properties": {
          "available_qty": {
            "description": "Available Quantity",
            "type": "integer"
          },
          "bundle_price_options": {
            "description": "List of Bundle Price Options",
            "items": {
              "properties": {
                "id": {
                  "description": "Bundle Price Option ID",
                  "type": "integer"
                },
                "is_owned_by_store": {
                  "description": "Is owned by store",
                  "type": "boolean"
                },
                "name": {
                  "description": "Name",
                  "type": "string"
                },
                "price": {
                  "description": "Price (including tax)",
                  "format": "float",
                  "type": "number"
                },
                "price_bt": {
                  "description": "Price before tax",
                  "format": "float",
                  "type": "number"
                },
                "slug": {
                  "description": "Slug",
                  "type": "string"
                },
                "unique_id": {
                  "description": "Bundle Price Option Unique ID",
                  "type": "string"
                }
              },
              "title": "BundlePriceOptionSimple",
              "type": "object"
            },
            "type": "array"
          },
          "bundlelines": {
            "description": "List of Bundle Lines with Product details",
            "items": {
              "properties": {
                "id": {
                  "description": "Bundle Line ID",
                  "type": "integer"
                },
                "quantity": {
                  "description": "Quantity of the variant in the bundle line",
                  "type": "integer"
                },
                "variant": {
                  "properties": {
                    "description": {
                      "description": "Variant Description",
                      "type": "string"
                    },
                    "id": {
                      "description": "Variant ID",
                      "type": "integer"
                    },
                    "images": {
                      "items": {
                        "format": "uri",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "item_type": {
                      "description": "Type of the product item",
                      "enum": [
                        "physical",
                        "digital",
                        "course"
                      ],
                      "title": "ItemType",
                      "type": "string"
                    },
                    "metadata": {
                      "additionalProperties": true,
                      "type": "object"
                    },
                    "name": {
                      "description": "Variant Fullname",
                      "type": "string"
                    },
                    "option1_value": {
                      "description": "Option 1 Value",
                      "type": "string"
                    },
                    "option2_value": {
                      "description": "Option 2 Value",
                      "type": "string"
                    },
                    "option3_value": {
                      "description": "Option 3 Value",
                      "type": "string"
                    },
                    "price": {
                      "description": "Price",
                      "type": "number"
                    },
                    "product": {
                      "properties": {
                        "id": {
                          "description": "Product ID",
                          "type": "integer"
                        },
                        "item_type": {
                          "description": "Type of the product item",
                          "enum": [
                            "physical",
                            "digital",
                            "course"
                          ],
                          "title": "ItemType",
                          "type": "string"
                        },
                        "name": {
                          "description": "Product Name",
                          "type": "string"
                        }
                      },
                      "title": "ProductNameType",
                      "type": "object"
                    },
                    "product_id": {
                      "description": "Product ID",
                      "type": "integer"
                    },
                    "product_name": {
                      "description": "Product Name",
                      "type": "string"
                    },
                    "rich_description": {
                      "description": "Variant Rich Description",
                      "type": "string"
                    },
                    "sku": {
                      "description": "SKU",
                      "type": "string"
                    },
                    "unique_id": {
                      "description": "Variant Unique ID",
                      "type": "string"
                    },
                    "weight": {
                      "description": "Weight",
                      "type": "integer"
                    }
                  },
                  "title": "VariantForPageWithProduct",
                  "type": "object"
                }
              },
              "title": "BundleLineForPageWithProduct",
              "type": "object"
            },
            "type": "array"
          },
          "custom_id": {
            "description": "Custom Identifier",
            "type": "string"
          },
          "display": {
            "description": "Display Name",
            "type": "string"
          },
          "id": {
            "description": "Bundle ID",
            "type": "integer"
          },
          "images": {
            "description": "List of Image URLs",
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "is_bundle_sharing": {
            "description": "Is Bundle Sharing Enabled",
            "type": "boolean"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "public_name": {
            "description": "Public Name",
            "type": "string"
          },
          "weight_bump": {
            "description": "Weight Bump",
            "type": "integer"
          }
        },
        "title": "BundleList",
        "type": "object"
      },
      "CustomAudience": {
        "properties": {
          "custom_audience_id": {
            "description": "The ID of the custom audience",
            "type": "string"
          },
          "errors": {
            "description": "List of errors associated with the custom audience",
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the custom audience",
            "type": "string"
          }
        },
        "required": [
          "name",
          "custom_audience_id"
        ],
        "title": "CustomAudience",
        "type": "object"
      },
      "OrderList": {
        "description": "Order data based on requested columns",
        "properties": {
          "advertiser": {
            "properties": {
              "aff_code": {
                "description": "Affiliate code of the user",
                "type": "string"
              },
              "avatar": {
                "description": "URL to user avatar",
                "format": "uri",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "format": "email",
                "type": "string"
              },
              "fullname": {
                "description": "User full name",
                "type": "string"
              },
              "id": {
                "description": "User ID",
                "type": "integer"
              },
              "phone": {
                "description": "User phone number",
                "type": "string"
              }
            },
            "title": "UserSimple",
            "type": "object"
          },
          "dropshipper_name": {
            "description": "Dropshipper name",
            "nullable": true,
            "type": "string"
          },
          "transferproof_url": {
            "description": "Transfer proof URL",
            "nullable": true,
            "type": "string"
          },
          "scalev_fee": {
            "description": "Scalev fee associated with the order",
            "type": "number"
          },
          "discount_code_code": {
            "description": "Discount code used in the order",
            "nullable": true,
            "type": "string"
          },
          "warehouse": {
            "properties": {
              "business": {
                "properties": {
                  "account_holder": {
                    "description": "Name of the account holder",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email address of the business",
                    "format": "email",
                    "type": "string"
                  },
                  "id": {
                    "description": "Business ID",
                    "type": "integer"
                  },
                  "is_banned": {
                    "description": "Is the business banned?",
                    "type": "boolean"
                  },
                  "logo": {
                    "description": "URL to the business logo",
                    "format": "uri",
                    "type": "string"
                  },
                  "unique_id": {
                    "description": "Unique identifier for the business",
                    "type": "string"
                  },
                  "username": {
                    "description": "Username of the business",
                    "type": "string"
                  }
                },
                "title": "BusinessSimple",
                "type": "object"
              },
              "contact_name": {
                "description": "Contact name at the warehouse",
                "type": "string"
              },
              "contact_phone": {
                "description": "Contact phone number at the warehouse",
                "type": "string"
              },
              "id": {
                "description": "Warehouse ID",
                "type": "integer"
              },
              "name": {
                "description": "Name of the warehouse",
                "type": "string"
              }
            },
            "title": "ForOrderWarehouse",
            "type": "object"
          },
          "transfer_time": {
            "description": "Transfer timestamp of the order",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "dropshipper_phone": {
            "description": "Dropshipper phone number",
            "nullable": true,
            "type": "string"
          },
          "shipping_cost": {
            "description": "Shipping cost associated with the order",
            "type": "number"
          },
          "product_price": {
            "description": "Total product price before discounts",
            "type": "number"
          },
          "net_revenue": {
            "description": "Net revenue from the order",
            "type": "number"
          },
          "customer": {
            "properties": {
              "confirmed_at": {
                "description": "Confirmation timestamp",
                "format": "date-time",
                "type": "string"
              },
              "created_at": {
                "description": "Creation timestamp",
                "format": "date-time",
                "type": "string"
              },
              "email": {
                "description": "Customer email",
                "format": "email",
                "type": "string"
              },
              "id": {
                "description": "Customer ID",
                "type": "integer"
              },
              "last_updated_at": {
                "description": "Last update timestamp",
                "format": "date-time",
                "type": "string"
              },
              "name": {
                "description": "Customer name",
                "type": "string"
              },
              "phone": {
                "description": "Customer phone number",
                "type": "string"
              },
              "status": {
                "description": "Customer status",
                "type": "string"
              }
            },
            "title": "CustomerOrder",
            "type": "object"
          },
          "handler_phone": {
            "description": "Handler phone number",
            "nullable": true,
            "type": "string"
          },
          "order_id": {
            "description": "Order ID in string format",
            "type": "string"
          },
          "product_discount": {
            "description": "Total product discount applied to the order",
            "type": "number"
          },
          "handler": {
            "properties": {
              "aff_code": {
                "description": "Affiliate code of the user",
                "type": "string"
              },
              "avatar": {
                "description": "URL to user avatar",
                "format": "uri",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "format": "email",
                "type": "string"
              },
              "fullname": {
                "description": "User full name",
                "type": "string"
              },
              "id": {
                "description": "User ID",
                "type": "integer"
              },
              "phone": {
                "description": "User phone number",
                "type": "string"
              }
            },
            "title": "UserSimple",
            "type": "object"
          },
          "payment_account_number": {
            "description": "Payment account number",
            "nullable": true,
            "type": "string"
          },
          "payment_method": {
            "description": "Order payment method",
            "enum": [
              "gopay",
              "va",
              "qris",
              "card",
              "invoice",
              "alfamart",
              "ovo",
              "dana",
              "shopeepay",
              "linkaja",
              "no_payment",
              "bank_transfer",
              "marketplace",
              "cod"
            ],
            "type": "string"
          },
          "origin_address": {
            "properties": {
              "address": {
                "description": "Full address of the warehouse",
                "type": "string"
              },
              "city": {
                "description": "City of the warehouse address",
                "type": "string"
              },
              "id": {
                "description": "Warehouse Address ID",
                "type": "integer"
              },
              "location": {
                "description": "Location ID for the address",
                "type": "integer"
              },
              "location_id": {
                "description": "Location ID for the address",
                "type": "integer"
              },
              "postal_code": {
                "description": "Postal code of the warehouse address",
                "type": "string"
              },
              "province": {
                "description": "Province of the warehouse address",
                "type": "string"
              },
              "subdistrict": {
                "description": "Subdistrict of the warehouse address",
                "type": "string"
              },
              "warehouse": {
                "description": "ID of the associated warehouse",
                "type": "integer"
              }
            },
            "title": "WarehouseAddress",
            "type": "object"
          },
          "epayment_provider": {
            "description": "E-payment provider",
            "nullable": true,
            "type": "string"
          },
          "pg_reference_id": {
            "description": "Payment gateway reference ID",
            "nullable": true,
            "type": "string"
          },
          "follow_up_chat_type": {
            "description": "Type of follow up chat",
            "enum": [
              "product",
              "order"
            ],
            "type": "string"
          },
          "awb_status": {
            "description": "Order AWB status",
            "enum": [
              "unavailable",
              "pending",
              "waiting",
              "failed",
              "created",
              "canceled"
            ],
            "type": "string"
          },
          "platform": {
            "description": "Platform where the order was placed",
            "type": "string"
          },
          "follow_up_chats": {
            "description": "Follow up chats associated with the order",
            "items": {
              "properties": {
                "bundle_id": {
                  "description": "Bundle ID associated with the chat",
                  "type": "integer"
                },
                "change_status": {
                  "description": "Change status after follow up chat",
                  "type": "boolean"
                },
                "hours_after": {
                  "description": "Hours after which the follow up chat is triggered",
                  "type": "integer"
                },
                "id": {
                  "description": "Follow Up Chat ID",
                  "type": "integer"
                },
                "image": {
                  "description": "Image URL for the follow up chat",
                  "format": "uri",
                  "type": "string"
                },
                "is_default": {
                  "description": "Is this a default follow up chat?",
                  "type": "boolean"
                },
                "name": {
                  "description": "Name of the follow up chat",
                  "type": "string"
                },
                "product_id": {
                  "description": "Product ID associated with the chat",
                  "type": "integer"
                },
                "provider": {
                  "description": "Provider of the follow up chat service",
                  "type": "string"
                },
                "store_id": {
                  "description": "Store ID associated with the chat",
                  "type": "integer"
                },
                "trigger": {
                  "description": "Trigger condition for the follow up chat",
                  "type": "string"
                }
              },
              "title": "FollowUpChat",
              "type": "object"
            },
            "type": "array"
          },
          "is_purchase_kwai": {
            "description": "Is the order a Kwai purchase",
            "type": "boolean"
          },
          "shipping_discount": {
            "description": "Shipping discount applied to the order",
            "type": "number"
          },
          "confirmed_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "canceled_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Order status",
            "enum": [
              "draft",
              "pending",
              "confirmed",
              "in_process",
              "ready",
              "shipped",
              "completed",
              "canceled",
              "rts",
              "closed"
            ],
            "type": "string"
          },
          "is_dropshipping": {
            "description": "Is the order a dropshipping order",
            "type": "boolean"
          },
          "payment_account_id": {
            "description": "Payment account ID",
            "nullable": true,
            "type": "integer"
          },
          "is_repeat": {
            "description": "Is the order a repeat order",
            "type": "boolean"
          },
          "tiktok_pixel_ids": {
            "items": {
              "description": "TikTok Pixel ID",
              "type": "string"
            },
            "type": "array"
          },
          "fb_pixel_ids": {
            "items": {
              "description": "Facebook Pixel ID",
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "description": "Order primary key",
            "type": "integer"
          },
          "is_purchase_tiktok": {
            "description": "Is the order a TikTok purchase",
            "type": "boolean"
          },
          "shipment_status": {
            "description": "Current shipment status of the order",
            "nullable": true,
            "type": "string"
          },
          "kwai_pixel_ids": {
            "items": {
              "description": "Kwai Pixel ID",
              "type": "string"
            },
            "type": "array"
          },
          "sub_payment_method": {
            "description": "Xendit VA bank code",
            "enum": [
              "BCA",
              "BNI",
              "BRI",
              "MANDIRI",
              "PERMATA",
              "BSI",
              "BJB",
              "CIMB",
              "SAHABAT_SAMPOERNA",
              "ARTAJASA"
            ],
            "type": "string"
          },
          "payment_fee": {
            "description": "Payment fee associated with the order",
            "type": "number"
          },
          "channel_name": {
            "description": "Channel name",
            "nullable": true,
            "type": "string"
          },
          "final_variants": {
            "additionalProperties": {
              "description": "Final variant quantity",
              "type": "integer"
            },
            "type": "object"
          },
          "other_income_name": {
            "description": "Name of the other income",
            "nullable": true,
            "type": "string"
          },
          "gross_revenue": {
            "description": "Gross revenue from the order",
            "format": "decimal",
            "type": "string"
          },
          "tags": {
            "description": "Tags associated with the order",
            "items": {
              "properties": {
                "id": {
                  "description": "Tag ID",
                  "type": "integer"
                },
                "name": {
                  "description": "Tag Name",
                  "type": "string"
                }
              },
              "title": "Tag",
              "type": "object"
            },
            "type": "array"
          },
          "other_income": {
            "description": "Other income associated with the order",
            "type": "number"
          },
          "total_weight": {
            "description": "Total weight of the order",
            "type": "number"
          },
          "is_probably_spam": {
            "description": "Is the order probably spam",
            "type": "boolean"
          },
          "external_id": {
            "description": "External ID for the order",
            "nullable": true,
            "type": "string"
          },
          "discount_code_discount": {
            "description": "Discount amount from the discount code",
            "format": "decimal",
            "type": "string"
          },
          "store": {
            "properties": {
              "business": {
                "properties": {
                  "account_holder": {
                    "description": "Name of the account holder",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email address of the business",
                    "format": "email",
                    "type": "string"
                  },
                  "id": {
                    "description": "Business ID",
                    "type": "integer"
                  },
                  "is_banned": {
                    "description": "Is the business banned?",
                    "type": "boolean"
                  },
                  "logo": {
                    "description": "URL to the business logo",
                    "format": "uri",
                    "type": "string"
                  },
                  "unique_id": {
                    "description": "Unique identifier for the business",
                    "type": "string"
                  },
                  "username": {
                    "description": "Username of the business",
                    "type": "string"
                  }
                },
                "title": "BusinessSimple",
                "type": "object"
              },
              "id": {
                "description": "Store ID",
                "type": "integer"
              },
              "name": {
                "description": "Name of the store",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique identifier for the store",
                "type": "string"
              },
              "uuid": {
                "description": "UUID of the store",
                "type": "string"
              }
            },
            "title": "SimpleForOrderStore",
            "type": "object"
          },
          "pg_payment_info": {
            "additionalProperties": true,
            "description": "Payment gateway payment info",
            "nullable": true,
            "type": "object"
          },
          "courier_service": {
            "properties": {
              "code": {
                "description": "Code for the courier service",
                "type": "string"
              },
              "code_co": {
                "description": "Code for CO courier service",
                "type": "string"
              },
              "code_ka": {
                "description": "Code for KA courier service",
                "type": "string"
              },
              "code_lincah": {
                "description": "Code for Lincah courier service",
                "type": "string"
              },
              "code_mengantar": {
                "description": "Code for Mengantar courier service",
                "type": "string"
              },
              "code_ro": {
                "description": "Code for RO courier service",
                "type": "string"
              },
              "courier": {
                "properties": {
                  "code": {
                    "description": "Courier code",
                    "type": "string"
                  },
                  "code_ka": {
                    "description": "Courier code in Georgian",
                    "type": "string"
                  },
                  "code_lincah": {
                    "description": "Courier code in Lincah",
                    "type": "string"
                  },
                  "code_mengantar": {
                    "description": "Courier code for Mengantar",
                    "type": "string"
                  },
                  "code_ro": {
                    "description": "Courier code in Romanian",
                    "type": "string"
                  },
                  "courier_type": {
                    "description": "Type of the courier",
                    "enum": [
                      "delivery",
                      "pickup"
                    ],
                    "type": "string"
                  },
                  "id": {
                    "description": "Courier ID",
                    "type": "integer"
                  },
                  "is_pickup": {
                    "description": "Is this a pickup courier?",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Courier name",
                    "type": "string"
                  }
                },
                "title": "Courier",
                "type": "object"
              },
              "id": {
                "description": "Courier Service ID",
                "type": "integer"
              },
              "name": {
                "description": "Name of the courier service",
                "type": "string"
              }
            },
            "title": "CourierService",
            "type": "object"
          },
          "mark_as_spam_by": {
            "description": "Who marked the order as spam",
            "nullable": true,
            "type": "string"
          },
          "net_payment_revenue": {
            "description": "Net payment revenue from the order",
            "format": "decimal",
            "type": "string"
          },
          "rts_time": {
            "description": "Ready to ship timestamp",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "secret_slug": {
            "description": "Secret slug for the order",
            "nullable": true,
            "type": "string"
          },
          "draft_time": {
            "description": "Draft timestamp",
            "format": "date-time",
            "type": "string"
          },
          "last_updated_at": {
            "description": "Last updated timestamp of the order",
            "format": "date-time",
            "type": "string"
          },
          "courier_additional_info": {
            "description": "Additional courier information",
            "nullable": true,
            "type": "string"
          },
          "closed_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "financial_entity": {
            "properties": {
              "code": {
                "description": "Code of the financial entity",
                "type": "string"
              },
              "duitku_code": {
                "description": "Duitku code for the financial entity",
                "type": "string"
              },
              "entity_type": {
                "description": "Type of the financial entity",
                "type": "string"
              },
              "id": {
                "description": "Financial Entity ID",
                "type": "integer"
              },
              "name": {
                "description": "Name of the financial entity",
                "type": "string"
              },
              "platform": {
                "description": "Platform associated with the financial entity",
                "type": "string"
              },
              "xendit_code": {
                "description": "Xendit code for the financial entity",
                "type": "string"
              }
            },
            "title": "FinancialEntity",
            "type": "object"
          },
          "page": {
            "properties": {
              "id": {
                "description": "Page ID",
                "type": "integer"
              },
              "is_published": {
                "description": "Is the page published?",
                "type": "boolean"
              },
              "name": {
                "description": "Name of the page",
                "type": "string"
              },
              "published_at": {
                "description": "Publication date of the page",
                "format": "date-time",
                "type": "string"
              },
              "slug": {
                "description": "Slug for the page URL",
                "type": "string"
              },
              "store_id": {
                "description": "ID of the store the page belongs to",
                "type": "integer"
              },
              "unique_id": {
                "description": "Unique identifier for the page",
                "type": "string"
              }
            },
            "title": "PageSimple",
            "type": "object"
          },
          "is_purchase_fb": {
            "description": "Is the order a Facebook purchase",
            "type": "boolean"
          },
          "completed_time": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "utm_source": {
            "description": "UTM source for tracking",
            "nullable": true,
            "type": "string"
          },
          "payment_account_holder": {
            "description": "Payment account holder name",
            "nullable": true,
            "type": "string"
          },
          "shipment_receipt": {
            "description": "Shipment receipt URL",
            "nullable": true,
            "type": "string"
          },
          "message_history": {
            "items": {
              "properties": {
                "id": {
                  "description": "ID of the Follow Up Chat",
                  "type": "integer"
                },
                "is_from_bot": {
                  "description": "Is the message from bot",
                  "type": "boolean"
                },
                "message": {
                  "description": "Message content",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the sender",
                  "type": "string"
                },
                "provider": {
                  "description": "Message provider",
                  "type": "string"
                },
                "recipient_name": {
                  "description": "Recipient name",
                  "type": "string"
                },
                "recipient_phone": {
                  "description": "Recipient phone number",
                  "type": "string"
                },
                "sender_name": {
                  "description": "Sender name",
                  "type": "string"
                },
                "sender_phone": {
                  "description": "Sender phone number",
                  "type": "string"
                },
                "timestamp": {
                  "description": "Timestamp of the message",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "title": "MessageHistoryItem",
              "type": "object"
            },
            "type": "array"
          },
          "payment_status": {
            "description": "Order payment status",
            "enum": [
              "unpaid",
              "paid",
              "conflict",
              "settled"
            ],
            "type": "string"
          },
          "shipment_provider_code": {
            "description": "Shipment provider code",
            "enum": [
              "mengantar",
              "lincah",
              "ninja"
            ],
            "nullable": true,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": true,
            "description": "Metadata associated with the order",
            "type": "object"
          },
          "discount_code_applied_to": {
            "description": "Discount code applied to the order",
            "nullable": true,
            "type": "string"
          },
          "shipped_time": {
            "description": "Shipped timestamp of the order",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "awb_ca_status": {
            "description": "Order AWB courier aggregator status",
            "enum": [
              "unavailable",
              "pending",
              "waiting",
              "failed",
              "created",
              "canceled"
            ],
            "type": "string"
          },
          "created_at": {
            "description": "Order creation timestamp",
            "format": "date-time",
            "type": "string"
          },
          "pending_time": {
            "description": "Pending timestamp of the order",
            "format": "date-time",
            "type": "string"
          },
          "notes": {
            "description": "Notes associated with the order",
            "nullable": true,
            "type": "string"
          },
          "destination_address": {
            "properties": {
              "address": {
                "description": "Full address",
                "type": "string"
              },
              "city": {
                "description": "City of the address",
                "type": "string"
              },
              "id": {
                "description": "Order Address ID",
                "type": "integer"
              },
              "location": {
                "description": "Location ID for the address",
                "type": "integer"
              },
              "name": {
                "description": "Name of the recipient",
                "type": "string"
              },
              "phone": {
                "description": "Phone number of the recipient",
                "type": "string"
              },
              "postal_code": {
                "description": "Postal code of the address",
                "type": "string"
              },
              "province": {
                "description": "Province of the address",
                "type": "string"
              },
              "subdistrict": {
                "description": "Subdistrict of the address",
                "type": "string"
              }
            },
            "title": "OrderAddress",
            "type": "object"
          },
          "unique_code_discount": {
            "description": "Discount from unique code applied to the order",
            "type": "number"
          }
        },
        "title": "OrderList",
        "type": "object"
      },
      "BundleCount": {
        "properties": {
          "count": {
            "description": "Total number of bundles",
            "type": "integer"
          }
        },
        "title": "BundleCount",
        "type": "object"
      },
      "PGReferenceID": {
        "properties": {
          "id": {
            "type": "integer"
          }
        },
        "title": "PGReferenceID",
        "type": "object"
      },
      "BundleRelation": {
        "properties": {
          "bundle_price_options": {
            "description": "List of bundle price options",
            "items": {
              "properties": {
                "id": {
                  "description": "Bundle Price Option ID",
                  "type": "integer"
                },
                "name": {
                  "description": "Name",
                  "type": "string"
                },
                "unique_id": {
                  "description": "Bundle Price Option Unique ID",
                  "type": "string"
                }
              },
              "title": "BundlePriceOptionRelation",
              "type": "object"
            },
            "type": "array"
          },
          "business": {
            "properties": {
              "account_holder": {
                "description": "Name of the account holder",
                "type": "string"
              },
              "email": {
                "description": "Email address of the business",
                "format": "email",
                "type": "string"
              },
              "id": {
                "description": "Business ID",
                "type": "integer"
              },
              "is_banned": {
                "description": "Is the business banned?",
                "type": "boolean"
              },
              "logo": {
                "description": "URL to the business logo",
                "format": "uri",
                "type": "string"
              },
              "unique_id": {
                "description": "Unique identifier for the business",
                "type": "string"
              },
              "username": {
                "description": "Username of the business",
                "type": "string"
              }
            },
            "title": "BusinessSimple",
            "type": "object"
          },
          "id": {
            "description": "Bundle ID",
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "pages": {
            "description": "Pages associated with the bundle",
            "properties": {
              "all": {
                "description": "All pages associated with the bundle",
                "items": {
                  "properties": {
                    "business": {
                      "properties": {
                        "account_holder": {
                          "description": "Name of the account holder",
                          "type": "string"
                        },
                        "email": {
                          "description": "Email address of the business",
                          "format": "email",
                          "type": "string"
                        },
                        "id": {
                          "description": "Business ID",
                          "type": "integer"
                        },
                        "is_banned": {
                          "description": "Is the business banned?",
                          "type": "boolean"
                        },
                        "logo": {
                          "description": "URL to the business logo",
                          "format": "uri",
                          "type": "string"
                        },
                        "unique_id": {
                          "description": "Unique identifier for the business",
                          "type": "string"
                        },
                        "username": {
                          "description": "Username of the business",
                          "type": "string"
                        }
                      },
                      "title": "BusinessSimple",
                      "type": "object"
                    },
                    "id": {
                      "description": "Page ID",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Name of the page",
                      "type": "string"
                    },
                    "slug": {
                      "description": "Slug for the page URL",
                      "type": "string"
                    },
                    "unique_id": {
                      "description": "Unique identifier for the page",
                      "type": "string"
                    }
                  },
                  "title": "PageRelation",
                  "type": "object"
                },
                "type": "array"
              },
              "will_unpublish": {
                "description": "Pages that will be unpublished",
                "items": {
                  "properties": {
                    "business": {
                      "properties": {
                        "account_holder": {
                          "description": "Name of the account holder",
                          "type": "string"
                        },
                        "email": {
                          "description": "Email address of the business",
                          "format": "email",
                          "type": "string"
                        },
                        "id": {
                          "description": "Business ID",
                          "type": "integer"
                        },
                        "is_banned": {
                          "description": "Is the business banned?",
                          "type": "boolean"
                        },
                        "logo": {
                          "description": "URL to the business logo",
                          "format": "uri",
                          "type": "string"
                        },
                        "unique_id": {
                          "description": "Unique identifier for the business",
                          "type": "string"
                        },
                        "username": {
                          "description": "Username of the business",
                          "type": "string"
                        }
                      },
                      "title": "BusinessSimple",
                      "type": "object"
                    },
                    "id": {
                      "description": "Page ID",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Name of the page",
                      "type": "string"
                    },
                    "slug": {
                      "description": "Slug for the page URL",
                      "type": "string"
                    },
                    "unique_id": {
                      "description": "Unique identifier for the page",
                      "type": "string"
                    }
                  },
                  "title": "PageRelation",
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "stores": {
            "description": "List of stores associated with the bundle",
            "items": {
              "properties": {
                "business": {
                  "properties": {
                    "account_holder": {
                      "description": "Name of the account holder",
                      "type": "string"
                    },
                    "email": {
                      "description": "Email address of the business",
                      "format": "email",
                      "type": "string"
                    },
                    "id": {
                      "description": "Business ID",
                      "type": "integer"
                    },
                    "is_banned": {
                      "description": "Is the business banned?",
                      "type": "boolean"
                    },
                    "logo": {
                      "description": "URL to the business logo",
                      "format": "uri",
                      "type": "string"
                    },
                    "unique_id": {
                      "description": "Unique identifier for the business",
                      "type": "string"
                    },
                    "username": {
                      "description": "Username of the business",
                      "type": "string"
                    }
                  },
                  "title": "BusinessSimple",
                  "type": "object"
                },
                "id": {
                  "description": "Store ID",
                  "type": "integer"
                },
                "name": {
                  "description": "Store name",
                  "type": "string"
                },
                "unique_id": {
                  "description": "Unique identifier for the store",
                  "type": "string"
                }
              },
              "title": "StoreRelation",
              "type": "object"
            },
            "type": "array"
          }
        },
        "title": "BundleRelation",
        "type": "object"
      },
      "BundlePriceOptionExtendedRelation": {
        "properties": {
          "bundle_id": {
            "description": "Bundle ID",
            "type": "integer"
          },
          "id": {
            "description": "Bundle Price Option ID",
            "type": "integer"
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "pages": {
            "properties": {
              "all": {
                "items": {
                  "properties": {
                    "business": {
                      "properties": {
                        "account_holder": {
                          "description": "Name of the account holder",
                          "type": "string"
                        },
                        "email": {
                          "description": "Email address of the business",
                          "format": "email",
                          "type": "string"
                        },
                        "id": {
                          "description": "Business ID",
                          "type": "integer"
                        },
                        "is_banned": {
                          "description": "Is the business banned?",
                          "type": "boolean"
                        },
                        "logo": {
                          "description": "URL to the business logo",
                          "format": "uri",
                          "type": "string"
                        },
                        "unique_id": {
                          "description": "Unique identifier for the business",
                          "type": "string"
                        },
                        "username": {
                          "description": "Username of the business",
                          "type": "string"
                        }
                      },
                      "title": "BusinessSimple",
                      "type": "object"
                    },
                    "id": {
                      "description": "Page ID",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Name of the page",
                      "type": "string"
                    },
                    "slug": {
                      "description": "Slug for the page URL",
                      "type": "string"
                    },
                    "unique_id": {
                      "description": "Unique identifier for the page",
                      "type": "string"
                    }
                  },
                  "title": "PageRelation",
                  "type": "object"
                },
                "type": "array"
              },
              "will_unpublish": {
                "items": {
                  "properties": {
                    "business": {
                      "properties": {
                        "account_holder": {
                          "description": "Name of the account holder",
                          "type": "string"
                        },
                        "email": {
                          "description": "Email address of the business",
                          "format": "email",
                          "type": "string"
                        },
                        "id": {
                          "description": "Business ID",
                          "type": "integer"
                        },
                        "is_banned": {
                          "description": "Is the business banned?",
                          "type": "boolean"
                        },
                        "logo": {
                          "description": "URL to the business logo",
                          "format": "uri",
                          "type": "string"
                        },
                        "unique_id": {
                          "description": "Unique identifier for the business",
                          "type": "string"
                        },
                        "username": {
                          "description": "Username of the business",
                          "type": "string"
                        }
                      },
                      "title": "BusinessSimple",
                      "type": "object"
                    },
                    "id": {
                      "description": "Page ID",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Name of the page",
                      "type": "string"
                    },
                    "slug": {
                      "description": "Slug for the page URL",
                      "type": "string"
                    },
                    "unique_id": {
                      "description": "Unique identifier for the page",
                      "type": "string"
                    }
                  },
                  "title": "PageRelation",
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "price": {
            "description": "Price (including tax)",
            "format": "float",
            "type": "number"
          },
          "price_bt": {
            "description": "Price before tax",
            "format": "float",
            "type": "number"
          },
          "slug": {
            "description": "Slug",
            "type": "string"
          },
          "stores": {
            "description": "List of stores where the bundle price option is available",
            "items": {
              "properties": {
                "business": {
                  "properties": {
                    "account_holder": {
                      "description": "Name of the account holder",
                      "type": "string"
                    },
                    "email": {
                      "description": "Email address of the business",
                      "format": "email",
                      "type": "string"
                    },
                    "id": {
                      "description": "Business ID",
                      "type": "integer"
                    },
                    "is_banned": {
                      "description": "Is the business banned?",
                      "type": "boolean"
                    },
                    "logo": {
                      "description": "URL to the business logo",
                      "format": "uri",
                      "type": "string"
                    },
                    "unique_id": {
                      "description": "Unique identifier for the business",
                      "type": "string"
                    },
                    "username": {
                      "description": "Username of the business",
                      "type": "string"
                    }
                  },
                  "title": "BusinessSimple",
                  "type": "object"
                },
                "id": {
                  "description": "Store ID",
                  "type": "integer"
                },
                "name": {
                  "description": "Store name",
                  "type": "string"
                },
                "unique_id": {
                  "description": "Unique identifier for the store",
                  "type": "string"
                }
              },
              "title": "StoreRelation",
              "type": "object"
            },
            "type": "array"
          },
          "unique_id": {
            "description": "Bundle Price Option Unique ID",
            "type": "string"
          }
        },
        "title": "BundlePriceOptionExtendedRelation",
        "type": "object"
      },
      "ProductVariant": {
        "properties": {
          "cogs": {
            "description": "Cost of Goods Sold",
            "type": "number"
          },
          "price_bt": {
            "description": "Price Before Tax",
            "type": "number"
          },
          "option1_value": {
            "description": "Option 1 Value",
            "type": "string"
          },
          "option3_icon_url": {
            "description": "Icon URL for the third product option",
            "format": "uri",
            "type": "string"
          },
          "option1_icon_url": {
            "description": "Icon URL for the first product option",
            "format": "uri",
            "type": "string"
          },
          "reseller_price_bt": {
            "description": "Reseller Price Before Tax",
            "type": "number"
          },
          "option2_value": {
            "description": "Option 2 Value",
            "type": "string"
          },
          "reseller_price": {
            "description": "Reseller Price",
            "type": "number"
          },
          "fullname": {
            "description": "Variant Fullname",
            "type": "string"
          },
          "uuid": {
            "description": "Variant UUID",
            "type": "string"
          },
          "rich_description": {
            "description": "Variant Rich Description",
            "type": "string"
          },
          "option2_icon_url": {
            "description": "Icon URL for the second product option",
            "format": "uri",
            "type": "string"
          },
          "sku": {
            "description": "SKU",
            "type": "string"
          },
          "digital_product_files": {
            "items": {
              "properties": {
                "content_type": {
                  "description": "MIME type of the digital product file",
                  "type": "string"
                },
                "id": {
                  "description": "Digital product file primary key",
                  "type": "integer"
                },
                "name": {
                  "description": "File name of the digital product file",
                  "type": "string"
                },
                "size_in_bytes": {
                  "description": "Size of the digital product file in bytes",
                  "type": "integer"
                },
                "url": {
                  "description": "URL to access the digital product file",
                  "format": "uri",
                  "type": "string"
                }
              },
              "title": "DigitalProductFile",
              "type": "object"
            },
            "type": "array"
          },
          "product_name": {
            "description": "Product Name",
            "type": "string"
          },
          "item_type": {
            "description": "Type of the product item",
            "enum": [
              "physical",
              "digital",
              "course"
            ],
            "title": "ItemType",
            "type": "string"
          },
          "upsell_form_displays": {
            "items": {
              "properties": {
                "id": {
                  "description": "Form Display ID",
                  "type": "integer"
                },
                "page_display": {
                  "properties": {
                    "id": {
                      "description": "Page Display ID",
                      "type": "integer"
                    },
                    "page": {
                      "properties": {
                        "id": {
                          "description": "Page ID",
                          "type": "integer"
                        },
                        "is_published": {
                          "description": "Is the page published?",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Name of the page",
                          "type": "string"
                        },
                        "published_at": {
                          "description": "Publication date of the page",
                          "format": "date-time",
                          "type": "string"
                        },
                        "slug": {
                          "description": "Slug for the page URL",
                          "type": "string"
                        },
                        "store_id": {
                          "description": "ID of the store the page belongs to",
                          "type": "integer"
                        },
                        "unique_id": {
                          "description": "Unique identifier for the page",
                          "type": "string"
                        }
                      },
                      "title": "PageSimple",
                      "type": "object"
                    }
                  },
                  "title": "ForProductPageDisplay",
                  "type": "object"
                }
              },
              "title": "ForProductFormDisplay",
              "type": "object"
            },
            "type": "array"
          },
          "description": {
            "description": "Variant Description",
            "type": "string"
          },
          "self_file_urls": {
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Variant Name",
            "type": "string"
          },
          "id": {
            "description": "Variant ID",
            "type": "integer"
          },
          "option3_color": {
            "description": "Color associated with the third product option",
            "type": "string"
          },
          "unique_id": {
            "description": "Variant Unique ID",
            "type": "string"
          },
          "cogs_bt": {
            "description": "Cost of Goods Sold Before Tax",
            "type": "number"
          },
          "option2_color": {
            "description": "Color associated with the second product option",
            "type": "string"
          },
          "price": {
            "description": "Price",
            "type": "number"
          },
          "images": {
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "weight": {
            "description": "Weight",
            "type": "integer"
          },
          "form_displays": {
            "items": {
              "properties": {
                "id": {
                  "description": "Form Display ID",
                  "type": "integer"
                },
                "page_display": {
                  "properties": {
                    "id": {
                      "description": "Page Display ID",
                      "type": "integer"
                    },
                    "page": {
                      "properties": {
                        "id": {
                          "description": "Page ID",
                          "type": "integer"
                        },
                        "is_published": {
                          "description": "Is the page published?",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Name of the page",
                          "type": "string"
                        },
                        "published_at": {
                          "description": "Publication date of the page",
                          "format": "date-time",
                          "type": "string"
                        },
                        "slug": {
                          "description": "Slug for the page URL",
                          "type": "string"
                        },
                        "store_id": {
                          "description": "ID of the store the page belongs to",
                          "type": "integer"
                        },
                        "unique_id": {
                          "description": "Unique identifier for the page",
                          "type": "string"
                        }
                      },
                      "title": "PageSimple",
                      "type": "object"
                    }
                  },
                  "title": "ForProductPageDisplay",
                  "type": "object"
                }
              },
              "title": "ForProductFormDisplay",
              "type": "object"
            },
            "type": "array"
          },
          "is_checked": {
            "description": "Mark variant as sellable",
            "type": "boolean"
          },
          "option1_color": {
            "description": "Color associated with the first product option",
            "type": "string"
          },
          "last_updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "product_id": {
            "description": "Product ID",
            "type": "integer"
          },
          "option3_value": {
            "description": "Option 3 Value",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "is_editable": {
            "description": "Is Editable",
            "type": "boolean"
          }
        },
        "title": "ProductVariant",
        "type": "object"
      },
      "NameOnlyWarehouse": {
        "properties": {
          "id": {
            "description": "Warehouse ID",
            "type": "integer"
          },
          "name": {
            "description": "Name of the warehouse",
            "type": "string"
          }
        },
        "title": "NameOnlyWarehouse",
        "type": "object"
      },
      "BadRequestError": {
        "properties": {
          "code": {
            "example": 400,
            "type": "integer"
          },
          "error": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": true,
                "description": "Validation errors from changeset",
                "type": "object"
              }
            ]
          },
          "status": {
            "example": "Bad Request",
            "type": "string"
          }
        },
        "title": "BadRequestError",
        "type": "object"
      },
      "OrderChat": {
        "properties": {
          "chat_message": {
            "description": "Chat message associated with the order",
            "type": "string"
          },
          "follow_up_chat_type": {
            "description": "Type of follow-up chat for the order",
            "nullable": true,
            "type": "string"
          },
          "follow_up_chats": {
            "items": {
              "properties": {
                "change_status": {
                  "description": "Triggered after order status change to this status",
                  "type": "boolean"
                },
                "hours_after": {
                  "description": "Hours after which the follow-up chat is sent",
                  "type": "integer"
                },
                "id": {
                  "description": "Follow-up chat ID",
                  "type": "integer"
                },
                "image": {
                  "description": "Image URL for the follow-up chat",
                  "format": "uri",
                  "type": "string"
                },
                "is_default": {
                  "description": "Is this a default follow-up chat",
                  "type": "boolean"
                },
                "name": {
                  "description": "Name of the follow-up chat",
                  "type": "string"
                },
                "provider": {
                  "description": "Provider of the follow-up chat",
                  "type": "string"
                },
                "text": {
                  "description": "Text of the follow-up chat",
                  "type": "string"
                },
                "text_url": {
                  "description": "URL encoded text of the follow-up chat",
                  "type": "string"
                },
                "trigger": {
                  "description": "Trigger for the follow-up chat",
                  "type": "string"
                },
                "wa_integration_id": {
                  "description": "WhatsApp integration ID for the follow-up chat",
                  "type": "integer"
                }
              },
              "title": "FollowUpChatDetail",
              "type": "object"
            },
            "type": "array"
          },
          "id": {
            "description": "Order primary key",
            "type": "integer"
          },
          "is_probably_spam": {
            "description": "Is probably spam",
            "type": "boolean"
          },
          "mark_as_spam_by": {
            "description": "Who marked as spam",
            "nullable": true,
            "type": "string"
          },
          "order_id": {
            "description": "Order ID in string format",
            "type": "string"
          },
          "payment_status": {
            "description": "Order payment status",
            "enum": [
              "unpaid",
              "paid",
              "conflict",
              "settled"
            ],
            "type": "string"
          },
          "secret_slug": {
            "description": "Secret slug of the order",
            "type": "string"
          },
          "status": {
            "description": "Order status",
            "enum": [
              "draft",
              "pending",
              "confirmed",
              "in_process",
              "ready",
              "shipped",
              "completed",
              "canceled",
              "rts",
              "closed"
            ],
            "type": "string"
          }
        },
        "title": "OrderChat",
        "type": "object"
      },
      "VariantRelation": {
        "properties": {
          "id": {
            "description": "Variant ID",
            "type": "integer"
          },
          "item_type": {
            "description": "Type of the product item",
            "enum": [
              "physical",
              "digital",
              "course"
            ],
            "title": "ItemType",
            "type": "string"
          },
          "name": {
            "description": "Variant Name",
            "type": "string"
          },
          "product_name": {
            "description": "Product Name",
            "type": "string"
          }
        },
        "title": "VariantRelation",
        "type": "object"
      },
      "PaymentAccountList": {
        "properties": {
          "account_holder": {
            "description": "Account Holder Name",
            "type": "string"
          },
          "account_number": {
            "description": "Account Number",
            "type": "string"
          },
          "financial_entity": {
            "properties": {
              "code": {
                "description": "Code of the financial entity",
                "type": "string"
              },
              "duitku_code": {
                "description": "Duitku code for the financial entity",
                "type": "string"
              },
              "entity_type": {
                "description": "Type of the financial entity",
                "type": "string"
              },
              "id": {
                "description": "Financial Entity ID",
                "type": "integer"
              },
              "name": {
                "description": "Name of the financial entity",
                "type": "string"
              },
              "platform": {
                "description": "Platform associated with the financial entity",
                "type": "string"
              },
              "xendit_code": {
                "description": "Xendit code for the financial entity",
                "type": "string"
              }
            },
            "title": "FinancialEntity",
            "type": "object"
          },
          "id": {
            "description": "Payment Account ID",
            "type": "integer"
          },
          "is_owned_by_store": {
            "description": "Is Owned By Store",
            "type": "boolean"
          },
          "method": {
            "description": "Payment Method",
            "type": "string"
          },
          "unique_id": {
            "description": "Unique Identifier",
            "type": "string"
          }
        },
        "title": "PaymentAccountList",
        "type": "object"
      },
      "MessageHistoryItem": {
        "properties": {
          "id": {
            "description": "ID of the Follow Up Chat",
            "type": "integer"
          },
          "is_from_bot": {
            "description": "Is the message from bot",
            "type": "boolean"
          },
          "message": {
            "description": "Message content",
            "type": "string"
          },
          "name": {
            "description": "Name of the sender",
            "type": "string"
          },
          "provider": {
            "description": "Message provider",
            "type": "string"
          },
          "recipient_name": {
            "description": "Recipient name",
            "type": "string"
          },
          "recipient_phone": {
            "description": "Recipient phone number",
            "type": "string"
          },
          "sender_name": {
            "description": "Sender name",
            "type": "string"
          },
          "sender_phone": {
            "description": "Sender phone number",
            "type": "string"
          },
          "timestamp": {
            "description": "Timestamp of the message",
            "format": "date-time",
            "type": "string"
          }
        },
        "title": "MessageHistoryItem",
        "type": "object"
      },
      "WarehousePartnerSearchData": {
        "properties": {
          "id": {
            "description": "Warehouse Partner ID",
            "type": "integer"
          },
          "ka_origin_id": {
            "description": "KA Origin ID",
            "type": "string"
          },
          "lincah_origin_id": {
            "description": "Lincah Origin ID",
            "type": "string"
          },
          "mengantar_origin_id": {
            "description": "Mengantar Origin ID",
            "type": "string"
          },
          "partner_id": {
            "description": "Partner Business ID",
            "type": "integer"
          }
        },
        "title": "WarehousePartnerSearchData",
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearerApiKey": {
        "bearerFormat": "opaque",
        "scheme": "bearer",
        "type": "http"
      },
      "oauth2": {
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://app.scalev.id/oauth/authorize",
            "refreshUrl": "https://api.scalev.id/v2/oauth/token/",
            "scopes": {
              "add_bundle": "Create New Bundles",
              "add_customer": "Create New Customers",
              "add_order": "Create New Orders",
              "add_product": "Create New Products",
              "add_store": "Create New Stores",
              "change_status_order": "Change Order Status",
              "create_awb": "Request for Order Pickup",
              "delete_bundle": "Delete Bundles",
              "delete_order": "Delete Orders",
              "delete_product": "Delete Products",
              "delete_store": "Delete Stores",
              "edit_bundle": "Update Bundles",
              "edit_customer": "Update Customers",
              "edit_order": "Update Orders",
              "edit_product": "Update Products",
              "edit_store": "Update Stores",
              "view_bundle": "List and View Bundles",
              "view_customer": "List and View Customers",
              "view_order": "List and View Orders",
              "view_order_statistics": "View Order Statistics",
              "view_product": "List and View Products",
              "view_store": "List and View Stores"
            },
            "tokenUrl": "https://api.scalev.id/v2/oauth/token/"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "info": {
    "title": "Scalev API",
    "version": "2.0.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/v2/bundles": {
      "post": {
        "callbacks": {},
        "description": "Creates a new bundle with the provided data.",
        "operationId": "ScalevApiWeb.BundleController.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bundle_price_options": {
                    "description": "List of Bundle Price Options",
                    "items": {
                      "properties": {
                        "name": {
                          "description": "Name",
                          "type": "string"
                        },
                        "price": {
                          "description": "Price (including tax)",
                          "format": "float",
                          "type": "number"
                        },
                        "slug": {
                          "description": "Slug",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "price"
                      ],
                      "title": "BundlePriceOptionRequest",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "bundlelines": {
                    "description": "List of Bundle Lines",
                    "items": {
                      "properties": {
                        "quantity": {
                          "description": "Quantity of the variant in the bundle line",
                          "type": "integer"
                        },
                        "variant_id": {
                          "description": "Variant ID",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "variant_id",
                        "quantity"
                      ],
                      "title": "BundleLineCreateRequest",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "custom_id": {
                    "description": "Custom Identifier",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "images": {
                    "description": "List of Image URLs",
                    "items": {
                      "format": "uri",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "meta_thumbnail": {
                    "description": "Meta Thumbnail URL",
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "public_name": {
                    "description": "Public Name",
                    "type": "string"
                  },
                  "rich_description": {
                    "description": "Rich Description",
                    "type": "string"
                  },
                  "weight_bump": {
                    "description": "Weight Bump",
                    "type": "integer"
                  }
                },
                "required": [
                  "name"
                ],
                "title": "BundleCreateRequest",
                "type": "object"
              }
            }
          },
          "description": "Bundle data to create",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundle_price_options": {
                          "description": "List of Bundle Price Options",
                          "items": {
                            "properties": {
                              "form_displays": {
                                "description": "List of form displays associated with the bundle price option",
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Form Display ID",
                                      "type": "integer"
                                    },
                                    "page_display": {
                                      "properties": {
                                        "id": {
                                          "description": "Page Display ID",
                                          "type": "integer"
                                        },
                                        "page": {
                                          "properties": {
                                            "id": {
                                              "description": "Page ID",
                                              "type": "integer"
                                            },
                                            "is_published": {
                                              "description": "Is the page published?",
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "description": "Name of the page",
                                              "type": "string"
                                            },
                                            "published_at": {
                                              "description": "Publication date of the page",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "slug": {
                                              "description": "Slug for the page URL",
                                              "type": "string"
                                            },
                                            "store_id": {
                                              "description": "ID of the store the page belongs to",
                                              "type": "integer"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the page",
                                              "type": "string"
                                            }
                                          },
                                          "title": "PageSimple",
                                          "type": "object"
                                        }
                                      },
                                      "title": "ForProductPageDisplay",
                                      "type": "object"
                                    }
                                  },
                                  "title": "ForProductFormDisplay",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "id": {
                                "description": "Bundle Price Option ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "price": {
                                "description": "Price (including tax)",
                                "format": "float",
                                "type": "number"
                              },
                              "price_bt": {
                                "description": "Price before tax",
                                "format": "float",
                                "type": "number"
                              },
                              "slug": {
                                "description": "Slug",
                                "type": "string"
                              },
                              "stores": {
                                "description": "List of stores where the bundle price option is available",
                                "items": {
                                  "properties": {
                                    "custom_domain": {
                                      "properties": {
                                        "full_url": {
                                          "description": "Full URL",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "Custom Domain ID",
                                          "type": "integer"
                                        },
                                        "is_verified": {
                                          "description": "Is Verified",
                                          "type": "boolean"
                                        }
                                      },
                                      "title": "SimpleCustomDomain",
                                      "type": "object"
                                    },
                                    "id": {
                                      "description": "Store ID",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "description": "Store name",
                                      "type": "string"
                                    }
                                  },
                                  "title": "DomainStore",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "unique_id": {
                                "description": "Bundle Price Option Unique ID",
                                "type": "string"
                              },
                              "upsell_form_displays": {
                                "description": "sell form displays associated with the bundle price option",
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Form Display ID",
                                      "type": "integer"
                                    },
                                    "page_display": {
                                      "properties": {
                                        "id": {
                                          "description": "Page Display ID",
                                          "type": "integer"
                                        },
                                        "page": {
                                          "properties": {
                                            "id": {
                                              "description": "Page ID",
                                              "type": "integer"
                                            },
                                            "is_published": {
                                              "description": "Is the page published?",
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "description": "Name of the page",
                                              "type": "string"
                                            },
                                            "published_at": {
                                              "description": "Publication date of the page",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "slug": {
                                              "description": "Slug for the page URL",
                                              "type": "string"
                                            },
                                            "store_id": {
                                              "description": "ID of the store the page belongs to",
                                              "type": "integer"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the page",
                                              "type": "string"
                                            }
                                          },
                                          "title": "PageSimple",
                                          "type": "object"
                                        }
                                      },
                                      "title": "ForProductPageDisplay",
                                      "type": "object"
                                    }
                                  },
                                  "title": "ForProductFormDisplay",
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "title": "BundlePriceOptionForBundle",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "bundlelines": {
                          "description": "List of Bundle Lines with Product details",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Bundle Line ID",
                                "type": "integer"
                              },
                              "quantity": {
                                "description": "Quantity of the variant in the bundle line",
                                "type": "integer"
                              },
                              "subtotal": {
                                "description": "Subtotal price for the bundle line (variant price * quantity)",
                                "format": "decimal",
                                "type": "string"
                              },
                              "variant": {
                                "properties": {
                                  "cogs": {
                                    "description": "Cost of Goods Sold",
                                    "type": "number"
                                  },
                                  "cogs_bt": {
                                    "description": "Cost of Goods Sold before tax",
                                    "type": "number"
                                  },
                                  "created_at": {
                                    "description": "Timestamp when the variant was created",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "digital_product_files": {
                                    "description": "List of digital product files associated with the variant",
                                    "items": {
                                      "properties": {
                                        "content_type": {
                                          "description": "MIME type of the digital product file",
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "Digital product file primary key",
                                          "type": "integer"
                                        },
                                        "name": {
                                          "description": "File name of the digital product file",
                                          "type": "string"
                                        },
                                        "size_in_bytes": {
                                          "description": "Size of the digital product file in bytes",
                                          "type": "integer"
                                        },
                                        "url": {
                                          "description": "URL to access the digital product file",
                                          "format": "uri",
                                          "type": "string"
                                        }
                                      },
                                      "title": "DigitalProductFile",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "display": {
                                    "description": "Display name for the variant",
                                    "type": "string"
                                  },
                                  "fullname": {
                                    "description": "Full name of the variant",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Variant primary key",
                                    "type": "integer"
                                  },
                                  "images": {
                                    "description": "List of image URLs associated with the variant",
                                    "items": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "is_checked": {
                                    "description": "Mark variant as sellable",
                                    "type": "boolean"
                                  },
                                  "is_editable": {
                                    "description": "Indicates if the variant is editable",
                                    "type": "boolean"
                                  },
                                  "item_type": {
                                    "description": "Type of the product item",
                                    "enum": [
                                      "physical",
                                      "digital",
                                      "course"
                                    ],
                                    "type": "string"
                                  },
                                  "last_updated_at": {
                                    "description": "Timestamp when the variant was last updated",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "additionalProperties": true,
                                    "description": "Additional metadata associated with the variant",
                                    "type": "object"
                                  },
                                  "name": {
                                    "description": "Full name of the variant",
                                    "type": "string"
                                  },
                                  "option1_value": {
                                    "description": "Value of the first product option",
                                    "type": "string"
                                  },
                                  "option2_value": {
                                    "description": "Value of the second product option",
                                    "type": "string"
                                  },
                                  "option3_value": {
                                    "description": "Value of the third product option",
                                    "type": "string"
                                  },
                                  "price": {
                                    "description": "Price of the variant",
                                    "type": "number"
                                  },
                                  "price_bt": {
                                    "description": "Price before tax",
                                    "type": "number"
                                  },
                                  "product": {
                                    "properties": {
                                      "business": {
                                        "properties": {
                                          "account_holder": {
                                            "description": "Name of the account holder",
                                            "type": "string"
                                          },
                                          "email": {
                                            "description": "Email address of the business",
                                            "format": "email",
                                            "type": "string"
                                          },
                                          "id": {
                                            "description": "Business ID",
                                            "type": "integer"
                                          },
                                          "is_banned": {
                                            "description": "Is the business banned?",
                                            "type": "boolean"
                                          },
                                          "logo": {
                                            "description": "URL to the business logo",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "unique_id": {
                                            "description": "Unique identifier for the business",
                                            "type": "string"
                                          },
                                          "username": {
                                            "description": "Username of the business",
                                            "type": "string"
                                          }
                                        },
                                        "title": "BusinessSimple",
                                        "type": "object"
                                      },
                                      "description": {
                                        "description": "Description",
                                        "type": "string"
                                      },
                                      "display": {
                                        "description": "Product name for display",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Product ID",
                                        "type": "integer"
                                      },
                                      "is_inventory": {
                                        "description": "Is Inventory",
                                        "type": "boolean"
                                      },
                                      "is_multiple": {
                                        "description": "Is Multiple",
                                        "type": "boolean"
                                      },
                                      "is_product_sharing": {
                                        "description": "Is Product Sharing",
                                        "type": "boolean"
                                      },
                                      "item_type": {
                                        "description": "Type of the product item",
                                        "enum": [
                                          "physical",
                                          "digital",
                                          "course"
                                        ],
                                        "title": "ItemType",
                                        "type": "string"
                                      },
                                      "item_type_name": {
                                        "description": "Item Type Name",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Product Name",
                                        "type": "string"
                                      },
                                      "option1_name": {
                                        "description": "Option 1 Name",
                                        "type": "string"
                                      },
                                      "option2_name": {
                                        "description": "Option 2 Name",
                                        "type": "string"
                                      },
                                      "option3_name": {
                                        "description": "Option 3 Name",
                                        "type": "string"
                                      },
                                      "uuid": {
                                        "description": "Product UUID",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Product",
                                    "type": "object"
                                  },
                                  "product_name": {
                                    "description": "Name of the associated product",
                                    "type": "string"
                                  },
                                  "reseller_price": {
                                    "description": "Reseller price of the variant",
                                    "type": "number"
                                  },
                                  "reseller_price_bt": {
                                    "description": "Reseller price before tax",
                                    "type": "number"
                                  },
                                  "self_file_urls": {
                                    "description": "List of self file URLs associated with the variant",
                                    "items": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "sku": {
                                    "description": "Stock Keeping Unit",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Variant unique identifier",
                                    "type": "string"
                                  },
                                  "uuid": {
                                    "description": "Variant UUID",
                                    "type": "string"
                                  },
                                  "weight": {
                                    "description": "Weight of the variant in grams",
                                    "type": "integer"
                                  }
                                },
                                "title": "Variant",
                                "type": "object"
                              }
                            },
                            "title": "BundleLine",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "created_at": {
                          "description": "Creation timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "created_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "custom_id": {
                          "description": "Custom Identifier",
                          "type": "string"
                        },
                        "description": {
                          "description": "Description",
                          "type": "string"
                        },
                        "id": {
                          "description": "Bundle ID",
                          "type": "integer"
                        },
                        "images": {
                          "description": "List of Image URLs",
                          "items": {
                            "format": "uri",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "is_bundle_sharing": {
                          "description": "Is Bundle Sharing Enabled",
                          "type": "boolean"
                        },
                        "labels": {
                          "description": "List of labels associated with the product",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "Label name",
                                "type": "string"
                              }
                            },
                            "title": "ItemLabel",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "last_updated_at": {
                          "description": "Last update timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "meta_thumbnail": {
                          "description": "Meta Thumbnail URL",
                          "format": "uri",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name",
                          "type": "string"
                        },
                        "public_name": {
                          "description": "Public Name",
                          "type": "string"
                        },
                        "rich_description": {
                          "description": "Rich Description",
                          "type": "string"
                        },
                        "weight_bump": {
                          "description": "Weight Bump",
                          "type": "integer"
                        }
                      },
                      "title": "Bundle",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Bundle created successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "add_bundle"
            ]
          }
        ],
        "summary": "Create a new bundle",
        "tags": [
          "Bundles"
        ]
      },
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of bundles with optional filtering. The data is sorted by id in descending order and cannot be changed. Uses cursor-based pagination with default page size of 25 and maximum of 25.",
        "operationId": "ScalevApiWeb.BundleController.index",
        "parameters": [
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          },
          {
            "description": "Last order ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term to filter bundles by name (case-insensitive, partial match)",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter bundles by their sharing status",
            "in": "query",
            "name": "is_bundle_sharing",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter bundles that have price options available in the specified store ID",
            "in": "query",
            "name": "store_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Filter bundles that are associated with the specified label",
            "in": "query",
            "name": "label",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "business": {
                                "properties": {
                                  "account_holder": {
                                    "description": "Name of the account holder",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "Email address of the business",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Business ID",
                                    "type": "integer"
                                  },
                                  "is_banned": {
                                    "description": "Is the business banned?",
                                    "type": "boolean"
                                  },
                                  "logo": {
                                    "description": "URL to the business logo",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the business",
                                    "type": "string"
                                  },
                                  "username": {
                                    "description": "Username of the business",
                                    "type": "string"
                                  }
                                },
                                "title": "BusinessSimple",
                                "type": "object"
                              },
                              "created_at": {
                                "description": "Creation timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "created_by": {
                                "properties": {
                                  "aff_code": {
                                    "description": "Affiliate code of the user",
                                    "type": "string"
                                  },
                                  "avatar": {
                                    "description": "URL to user avatar",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "User email",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "fullname": {
                                    "description": "User full name",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "User ID",
                                    "type": "integer"
                                  },
                                  "phone": {
                                    "description": "User phone number",
                                    "type": "string"
                                  }
                                },
                                "title": "UserSimple",
                                "type": "object"
                              },
                              "custom_id": {
                                "description": "Custom Identifier",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description",
                                "type": "string"
                              },
                              "display": {
                                "description": "Display Name",
                                "type": "string"
                              },
                              "id": {
                                "description": "Bundle ID",
                                "type": "integer"
                              },
                              "images": {
                                "description": "List of Image URLs",
                                "items": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "is_bundle_sharing": {
                                "description": "Is Bundle Sharing Enabled",
                                "type": "boolean"
                              },
                              "last_updated_at": {
                                "description": "Last update timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "last_updated_by": {
                                "properties": {
                                  "aff_code": {
                                    "description": "Affiliate code of the user",
                                    "type": "string"
                                  },
                                  "avatar": {
                                    "description": "URL to user avatar",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "User email",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "fullname": {
                                    "description": "User full name",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "User ID",
                                    "type": "integer"
                                  },
                                  "phone": {
                                    "description": "User phone number",
                                    "type": "string"
                                  }
                                },
                                "title": "UserSimple",
                                "type": "object"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "public_name": {
                                "description": "Public Name",
                                "type": "string"
                              },
                              "variants_count": {
                                "description": "Number of variants in the bundle",
                                "type": "integer"
                              },
                              "weight_bump": {
                                "description": "Weight Bump",
                                "type": "integer"
                              }
                            },
                            "title": "BundleList",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Bundles list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_bundle"
            ]
          }
        ],
        "summary": "List bundles",
        "tags": [
          "Bundles"
        ]
      }
    },
    "/v2/bundles/count": {
      "get": {
        "callbacks": {},
        "description": "Retrieves the total count of bundles for the authenticated business. This endpoint does not support any filtering or pagination.",
        "operationId": "ScalevApiWeb.BundleController.show_count",
        "parameters": [
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          },
          {
            "description": "Last order ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term to filter bundles by name (case-insensitive, partial match)",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter bundles by their sharing status",
            "in": "query",
            "name": "is_bundle_sharing",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter bundles that have price options available in the specified store ID",
            "in": "query",
            "name": "store_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Filter bundles that are associated with the specified label",
            "in": "query",
            "name": "label",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "count": {
                          "description": "Total number of bundles",
                          "type": "integer"
                        }
                      },
                      "title": "BundleCount",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Bundles count"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_bundle"
            ]
          }
        ],
        "summary": "Count bundles",
        "tags": [
          "Bundles"
        ]
      }
    },
    "/v2/bundles/simplified": {
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of bundles with optional filtering. The data is sorted by id in descending order and cannot be changed. Uses cursor-based pagination with default page size of 25 and maximum of 25. This endpoint returns a simplified version of the bundle data, including only essential fields and active bundle price options.",
        "operationId": "ScalevApiWeb.BundleController.index_simplified",
        "parameters": [
          {
            "description": "If provided, includes `is_owned_by_store` field in the bundle price options to indicate if the option is already included in the specified store.",
            "in": "query",
            "name": "for_store_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          },
          {
            "description": "Last order ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term to filter bundles by name (case-insensitive, partial match)",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter bundles by their sharing status",
            "in": "query",
            "name": "is_bundle_sharing",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter bundles that have price options available in the specified store ID",
            "in": "query",
            "name": "store_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Filter bundles that are associated with the specified label",
            "in": "query",
            "name": "label",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "bundle_price_options": {
                                "description": "List of Bundle Price Options",
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Bundle Price Option ID",
                                      "type": "integer"
                                    },
                                    "is_owned_by_store": {
                                      "description": "Is owned by store",
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "description": "Name",
                                      "type": "string"
                                    },
                                    "price": {
                                      "description": "Price (including tax)",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "price_bt": {
                                      "description": "Price before tax",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "slug": {
                                      "description": "Slug",
                                      "type": "string"
                                    },
                                    "unique_id": {
                                      "description": "Bundle Price Option Unique ID",
                                      "type": "string"
                                    }
                                  },
                                  "title": "BundlePriceOptionSimple",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "custom_id": {
                                "description": "Custom Identifier",
                                "type": "string"
                              },
                              "display": {
                                "description": "Display Name",
                                "type": "string"
                              },
                              "id": {
                                "description": "Bundle ID",
                                "type": "integer"
                              },
                              "images": {
                                "description": "List of Image URLs",
                                "items": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "is_bundle_sharing": {
                                "description": "Is Bundle Sharing Enabled",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "public_name": {
                                "description": "Public Name",
                                "type": "string"
                              },
                              "weight_bump": {
                                "description": "Weight Bump",
                                "type": "integer"
                              }
                            },
                            "title": "BundleListSimplified",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Bundles list (simplified)"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_bundle"
            ]
          }
        ],
        "summary": "List bundles (simplified)",
        "tags": [
          "Bundles"
        ]
      }
    },
    "/v2/bundles/{bundle_id}/bpos": {
      "post": {
        "callbacks": {},
        "description": "Creates a new bundle price option associated with a specific bundle using the provided data.",
        "operationId": "ScalevApiWeb.BundleController.create_bpo",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "price": {
                    "description": "Price (including tax)",
                    "format": "float",
                    "type": "number"
                  },
                  "slug": {
                    "description": "Slug",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "price"
                ],
                "title": "BundlePriceOptionRequest",
                "type": "object"
              }
            }
          },
          "description": "Bundle Price Option data to create",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundle_id": {
                          "description": "Bundle ID",
                          "type": "integer"
                        },
                        "id": {
                          "description": "Bundle Price Option ID",
                          "type": "integer"
                        },
                        "name": {
                          "description": "Name",
                          "type": "string"
                        },
                        "price": {
                          "description": "Price (including tax)",
                          "format": "float",
                          "type": "number"
                        },
                        "price_bt": {
                          "description": "Price before tax",
                          "format": "float",
                          "type": "number"
                        },
                        "slug": {
                          "description": "Slug",
                          "type": "string"
                        },
                        "stores": {
                          "description": "List of stores where the bundle price option is available",
                          "items": {
                            "properties": {
                              "custom_domain": {
                                "properties": {
                                  "full_url": {
                                    "description": "Full URL",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Custom Domain ID",
                                    "type": "integer"
                                  },
                                  "is_verified": {
                                    "description": "Is Verified",
                                    "type": "boolean"
                                  }
                                },
                                "title": "SimpleCustomDomain",
                                "type": "object"
                              },
                              "id": {
                                "description": "Store ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Store name",
                                "type": "string"
                              }
                            },
                            "title": "DomainStore",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "unique_id": {
                          "description": "Bundle Price Option Unique ID",
                          "type": "string"
                        }
                      },
                      "title": "BundlePriceOption",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Bundle Price Option created successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "add_bundle"
            ]
          }
        ],
        "summary": "Create a new bundle price option for a bundle",
        "tags": [
          "Bundles"
        ]
      },
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of bundle price options associated with a specific bundle. The data is sorted by id in descending order and cannot be changed. Uses cursor-based pagination with default page size of 25 and maximum of 25.",
        "operationId": "ScalevApiWeb.BundleController.index_bpo",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The ID of the last item from the previous page. Used for cursor-based pagination.",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of items to return per page. Default is 25, maximum is 25.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 25,
              "maximum": 25,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "bundle_id": {
                                "description": "Bundle ID",
                                "type": "integer"
                              },
                              "id": {
                                "description": "Bundle Price Option ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "price": {
                                "description": "Price (including tax)",
                                "format": "float",
                                "type": "number"
                              },
                              "price_bt": {
                                "description": "Price before tax",
                                "format": "float",
                                "type": "number"
                              },
                              "slug": {
                                "description": "Slug",
                                "type": "string"
                              },
                              "stores": {
                                "description": "List of stores where the bundle price option is available",
                                "items": {
                                  "properties": {
                                    "custom_domain": {
                                      "properties": {
                                        "full_url": {
                                          "description": "Full URL",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "Custom Domain ID",
                                          "type": "integer"
                                        },
                                        "is_verified": {
                                          "description": "Is Verified",
                                          "type": "boolean"
                                        }
                                      },
                                      "title": "SimpleCustomDomain",
                                      "type": "object"
                                    },
                                    "id": {
                                      "description": "Store ID",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "description": "Store name",
                                      "type": "string"
                                    }
                                  },
                                  "title": "DomainStore",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "unique_id": {
                                "description": "Bundle Price Option Unique ID",
                                "type": "string"
                              }
                            },
                            "title": "BundlePriceOption",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Bundle price options list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_bundle"
            ]
          }
        ],
        "summary": "List bundle price options for a bundle",
        "tags": [
          "Bundles"
        ]
      }
    },
    "/v2/bundles/{bundle_id}/bpos/{id}": {
      "patch": {
        "callbacks": {},
        "description": "Updates an existing bundle price option associated with a specific bundle using the provided data.",
        "operationId": "ScalevApiWeb.BundleController.update_bpo",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Bundle Price Option ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "price": {
                    "description": "Price (including tax)",
                    "format": "float",
                    "type": "number"
                  },
                  "slug": {
                    "description": "Slug",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "price"
                ],
                "title": "BundlePriceOptionRequest",
                "type": "object"
              }
            }
          },
          "description": "Bundle Price Option data to update",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundle_id": {
                          "description": "Bundle ID",
                          "type": "integer"
                        },
                        "id": {
                          "description": "Bundle Price Option ID",
                          "type": "integer"
                        },
                        "name": {
                          "description": "Name",
                          "type": "string"
                        },
                        "price": {
                          "description": "Price (including tax)",
                          "format": "float",
                          "type": "number"
                        },
                        "price_bt": {
                          "description": "Price before tax",
                          "format": "float",
                          "type": "number"
                        },
                        "slug": {
                          "description": "Slug",
                          "type": "string"
                        },
                        "stores": {
                          "description": "List of stores where the bundle price option is available",
                          "items": {
                            "properties": {
                              "custom_domain": {
                                "properties": {
                                  "full_url": {
                                    "description": "Full URL",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Custom Domain ID",
                                    "type": "integer"
                                  },
                                  "is_verified": {
                                    "description": "Is Verified",
                                    "type": "boolean"
                                  }
                                },
                                "title": "SimpleCustomDomain",
                                "type": "object"
                              },
                              "id": {
                                "description": "Store ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Store name",
                                "type": "string"
                              }
                            },
                            "title": "DomainStore",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "unique_id": {
                          "description": "Bundle Price Option Unique ID",
                          "type": "string"
                        }
                      },
                      "title": "BundlePriceOption",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Bundle Price Option updated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_bundle"
            ]
          }
        ],
        "summary": "Update a bundle price option for a bundle",
        "tags": [
          "Bundles"
        ]
      },
      "delete": {
        "callbacks": {},
        "description": "Deletes a bundle price option associated with a specific bundle by its ID.",
        "operationId": "ScalevApiWeb.BundleController.delete_bpo",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Bundle Price Option ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Bundle Price Option deleted successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "delete_bundle"
            ]
          }
        ],
        "summary": "Delete a bundle price option from a bundle",
        "tags": [
          "Bundles"
        ]
      }
    },
    "/v2/bundles/{bundle_id}/bpos/{id}/relations": {
      "get": {
        "callbacks": {},
        "description": "Retrieves a bundle price option along with its related entities such as associated stores and form displays.",
        "operationId": "ScalevApiWeb.BundleController.show_bpo_relations",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Bundle Price Option ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundle_id": {
                          "description": "Bundle ID",
                          "type": "integer"
                        },
                        "id": {
                          "description": "Bundle Price Option ID",
                          "type": "integer"
                        },
                        "name": {
                          "description": "Name",
                          "type": "string"
                        },
                        "pages": {
                          "properties": {
                            "all": {
                              "items": {
                                "properties": {
                                  "business": {
                                    "properties": {
                                      "account_holder": {
                                        "description": "Name of the account holder",
                                        "type": "string"
                                      },
                                      "email": {
                                        "description": "Email address of the business",
                                        "format": "email",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Business ID",
                                        "type": "integer"
                                      },
                                      "is_banned": {
                                        "description": "Is the business banned?",
                                        "type": "boolean"
                                      },
                                      "logo": {
                                        "description": "URL to the business logo",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "unique_id": {
                                        "description": "Unique identifier for the business",
                                        "type": "string"
                                      },
                                      "username": {
                                        "description": "Username of the business",
                                        "type": "string"
                                      }
                                    },
                                    "title": "BusinessSimple",
                                    "type": "object"
                                  },
                                  "id": {
                                    "description": "Page ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the page",
                                    "type": "string"
                                  },
                                  "slug": {
                                    "description": "Slug for the page URL",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the page",
                                    "type": "string"
                                  }
                                },
                                "title": "PageRelation",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "will_unpublish": {
                              "items": {
                                "properties": {
                                  "business": {
                                    "properties": {
                                      "account_holder": {
                                        "description": "Name of the account holder",
                                        "type": "string"
                                      },
                                      "email": {
                                        "description": "Email address of the business",
                                        "format": "email",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Business ID",
                                        "type": "integer"
                                      },
                                      "is_banned": {
                                        "description": "Is the business banned?",
                                        "type": "boolean"
                                      },
                                      "logo": {
                                        "description": "URL to the business logo",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "unique_id": {
                                        "description": "Unique identifier for the business",
                                        "type": "string"
                                      },
                                      "username": {
                                        "description": "Username of the business",
                                        "type": "string"
                                      }
                                    },
                                    "title": "BusinessSimple",
                                    "type": "object"
                                  },
                                  "id": {
                                    "description": "Page ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the page",
                                    "type": "string"
                                  },
                                  "slug": {
                                    "description": "Slug for the page URL",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the page",
                                    "type": "string"
                                  }
                                },
                                "title": "PageRelation",
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "price": {
                          "description": "Price (including tax)",
                          "format": "float",
                          "type": "number"
                        },
                        "price_bt": {
                          "description": "Price before tax",
                          "format": "float",
                          "type": "number"
                        },
                        "slug": {
                          "description": "Slug",
                          "type": "string"
                        },
                        "stores": {
                          "description": "List of stores where the bundle price option is available",
                          "items": {
                            "properties": {
                              "business": {
                                "properties": {
                                  "account_holder": {
                                    "description": "Name of the account holder",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "Email address of the business",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Business ID",
                                    "type": "integer"
                                  },
                                  "is_banned": {
                                    "description": "Is the business banned?",
                                    "type": "boolean"
                                  },
                                  "logo": {
                                    "description": "URL to the business logo",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the business",
                                    "type": "string"
                                  },
                                  "username": {
                                    "description": "Username of the business",
                                    "type": "string"
                                  }
                                },
                                "title": "BusinessSimple",
                                "type": "object"
                              },
                              "id": {
                                "description": "Store ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Store name",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Unique identifier for the store",
                                "type": "string"
                              }
                            },
                            "title": "StoreRelation",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "unique_id": {
                          "description": "Bundle Price Option Unique ID",
                          "type": "string"
                        }
                      },
                      "title": "BundlePriceOptionExtendedRelation",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Bundle Price Option with relations"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_bundle"
            ]
          }
        ],
        "summary": "Show bundle price option relations",
        "tags": [
          "Bundles"
        ]
      }
    },
    "/v2/bundles/{bundle_id}/follow-up-chats": {
      "post": {
        "callbacks": {},
        "description": "Create a follow up chat template for a bundle.",
        "operationId": "ScalevApiWeb.BundleController.create_fuc",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "change_status": {
                    "description": "Triggered after order status change to this status",
                    "type": "boolean"
                  },
                  "hours_after": {
                    "description": "Hours after which the follow up chat is triggered",
                    "type": "integer"
                  },
                  "image": {
                    "description": "Image URL for the follow up chat",
                    "format": "uri",
                    "type": "string"
                  },
                  "is_default": {
                    "description": "Is this a default follow up chat?",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Name of the follow up chat",
                    "type": "string"
                  },
                  "provider": {
                    "description": "Provider of the follow up chat",
                    "type": "string"
                  },
                  "text_for_bank_transfer": {
                    "description": "Text for bank transfer",
                    "type": "string"
                  },
                  "text_for_cod": {
                    "description": "Text for cash on delivery",
                    "type": "string"
                  },
                  "text_for_epayment": {
                    "description": "Text for e-payments",
                    "type": "string"
                  },
                  "trigger": {
                    "description": "Trigger condition for the follow up chat",
                    "type": "string"
                  },
                  "wa_gateway_assignation_type": {
                    "description": "WhatsApp gateway assignation type",
                    "type": "string"
                  },
                  "wa_integration_id": {
                    "description": "WhatsApp integration ID",
                    "type": "integer"
                  }
                },
                "required": [
                  "name",
                  "provider"
                ],
                "title": "CreateUpdateFollowUpChatRequest",
                "type": "object"
              }
            }
          },
          "description": "Follow up chat data",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundle_id": {
                          "description": "Bundle ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "change_status": {
                          "description": "Triggered after order status change to this status",
                          "type": "boolean"
                        },
                        "hours_after": {
                          "description": "Hours after which the follow-up chat is sent",
                          "type": "integer"
                        },
                        "id": {
                          "description": "Follow-up chat ID",
                          "type": "integer"
                        },
                        "image": {
                          "description": "Image URL for the follow-up chat",
                          "format": "uri",
                          "type": "string"
                        },
                        "is_default": {
                          "description": "Is this a default follow-up chat",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Name of the follow-up chat",
                          "type": "string"
                        },
                        "product_id": {
                          "description": "Product ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "provider": {
                          "description": "Provider of the follow-up chat",
                          "type": "string"
                        },
                        "store_id": {
                          "description": "Store ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "text_for_bank_transfer": {
                          "description": "Text for bank transfer payments",
                          "type": "string"
                        },
                        "text_for_cod": {
                          "description": "Text for cash on delivery payments",
                          "type": "string"
                        },
                        "text_for_epayment": {
                          "description": "Text for electronic payments",
                          "type": "string"
                        },
                        "trigger": {
                          "description": "Trigger for the follow-up chat",
                          "type": "string"
                        },
                        "wa_gateway_assignation_type": {
                          "description": "WhatsApp gateway assignation type",
                          "type": "string"
                        },
                        "wa_integration": {
                          "properties": {
                            "id": {
                              "description": "Whatsapp Integration ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "phone_number": {
                              "description": "Phone Number",
                              "type": "string"
                            },
                            "provider": {
                              "description": "Provider",
                              "type": "string"
                            }
                          },
                          "title": "WhatsappIntegration",
                          "type": "object"
                        }
                      },
                      "title": "ManagingFollowUpChat",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Follow up chat template created successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_bundle"
            ]
          }
        ],
        "summary": "Create a follow up chat template",
        "tags": [
          "Bundles"
        ]
      },
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of follow up chats for a bundle.",
        "operationId": "ScalevApiWeb.BundleController.index_fucs",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "bundle_id": {
                                "description": "Bundle ID associated with the follow-up chat",
                                "type": "integer"
                              },
                              "change_status": {
                                "description": "Triggered after order status change to this status",
                                "type": "boolean"
                              },
                              "hours_after": {
                                "description": "Hours after which the follow-up chat is sent",
                                "type": "integer"
                              },
                              "id": {
                                "description": "Follow-up chat ID",
                                "type": "integer"
                              },
                              "image": {
                                "description": "Image URL for the follow-up chat",
                                "format": "uri",
                                "type": "string"
                              },
                              "is_default": {
                                "description": "Is this a default follow-up chat",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name of the follow-up chat",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "Product ID associated with the follow-up chat",
                                "type": "integer"
                              },
                              "provider": {
                                "description": "Provider of the follow-up chat",
                                "type": "string"
                              },
                              "store_id": {
                                "description": "Store ID associated with the follow-up chat",
                                "type": "integer"
                              },
                              "text_for_bank_transfer": {
                                "description": "Text for bank transfer payments",
                                "type": "string"
                              },
                              "text_for_cod": {
                                "description": "Text for cash on delivery payments",
                                "type": "string"
                              },
                              "text_for_epayment": {
                                "description": "Text for electronic payments",
                                "type": "string"
                              },
                              "trigger": {
                                "description": "Trigger for the follow-up chat",
                                "type": "string"
                              },
                              "wa_gateway_assignation_type": {
                                "description": "WhatsApp gateway assignation type",
                                "type": "string"
                              },
                              "wa_integration": {
                                "properties": {
                                  "id": {
                                    "description": "Whatsapp Integration ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name",
                                    "type": "string"
                                  },
                                  "phone_number": {
                                    "description": "Phone Number",
                                    "type": "string"
                                  },
                                  "provider": {
                                    "description": "Provider",
                                    "type": "string"
                                  }
                                },
                                "title": "WhatsappIntegration",
                                "type": "object"
                              }
                            },
                            "title": "ManagingFollowUpChat",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Paginated list of follow up chats"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_bundle"
            ]
          }
        ],
        "summary": "List follow up chats",
        "tags": [
          "Bundles"
        ]
      }
    },
    "/v2/bundles/{bundle_id}/follow-up-chats/generate": {
      "post": {
        "callbacks": {},
        "description": "Generates a new follow up chat for a bundle.",
        "operationId": "ScalevApiWeb.BundleController.generate_fuc",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Follow up chat generated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_bundle"
            ]
          }
        ],
        "summary": "Generate a follow up chat",
        "tags": [
          "Bundles"
        ]
      }
    },
    "/v2/bundles/{bundle_id}/follow-up-chats/{id}": {
      "get": {
        "callbacks": {},
        "description": "Retrieves a follow up chat template by its ID.",
        "operationId": "ScalevApiWeb.BundleController.show_fuc",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Follow up chat ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundle_id": {
                          "description": "Bundle ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "change_status": {
                          "description": "Triggered after order status change to this status",
                          "type": "boolean"
                        },
                        "hours_after": {
                          "description": "Hours after which the follow-up chat is sent",
                          "type": "integer"
                        },
                        "id": {
                          "description": "Follow-up chat ID",
                          "type": "integer"
                        },
                        "image": {
                          "description": "Image URL for the follow-up chat",
                          "format": "uri",
                          "type": "string"
                        },
                        "is_default": {
                          "description": "Is this a default follow-up chat",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Name of the follow-up chat",
                          "type": "string"
                        },
                        "product_id": {
                          "description": "Product ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "provider": {
                          "description": "Provider of the follow-up chat",
                          "type": "string"
                        },
                        "store_id": {
                          "description": "Store ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "text_for_bank_transfer": {
                          "description": "Text for bank transfer payments",
                          "type": "string"
                        },
                        "text_for_cod": {
                          "description": "Text for cash on delivery payments",
                          "type": "string"
                        },
                        "text_for_epayment": {
                          "description": "Text for electronic payments",
                          "type": "string"
                        },
                        "trigger": {
                          "description": "Trigger for the follow-up chat",
                          "type": "string"
                        },
                        "wa_gateway_assignation_type": {
                          "description": "WhatsApp gateway assignation type",
                          "type": "string"
                        },
                        "wa_integration": {
                          "properties": {
                            "id": {
                              "description": "Whatsapp Integration ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "phone_number": {
                              "description": "Phone Number",
                              "type": "string"
                            },
                            "provider": {
                              "description": "Provider",
                              "type": "string"
                            }
                          },
                          "title": "WhatsappIntegration",
                          "type": "object"
                        }
                      },
                      "title": "ManagingFollowUpChat",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Follow up chat template details"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_bundle"
            ]
          }
        ],
        "summary": "Show a follow up chat template",
        "tags": [
          "Bundles"
        ]
      },
      "patch": {
        "callbacks": {},
        "description": "Updates a follow up chat template.",
        "operationId": "ScalevApiWeb.BundleController.update_fuc",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Follow up chat ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "change_status": {
                    "description": "Triggered after order status change to this status",
                    "type": "boolean"
                  },
                  "hours_after": {
                    "description": "Hours after which the follow up chat is triggered",
                    "type": "integer"
                  },
                  "image": {
                    "description": "Image URL for the follow up chat",
                    "format": "uri",
                    "type": "string"
                  },
                  "is_default": {
                    "description": "Is this a default follow up chat?",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Name of the follow up chat",
                    "type": "string"
                  },
                  "provider": {
                    "description": "Provider of the follow up chat",
                    "type": "string"
                  },
                  "text_for_bank_transfer": {
                    "description": "Text for bank transfer",
                    "type": "string"
                  },
                  "text_for_cod": {
                    "description": "Text for cash on delivery",
                    "type": "string"
                  },
                  "text_for_epayment": {
                    "description": "Text for e-payments",
                    "type": "string"
                  },
                  "trigger": {
                    "description": "Trigger condition for the follow up chat",
                    "type": "string"
                  },
                  "wa_gateway_assignation_type": {
                    "description": "WhatsApp gateway assignation type",
                    "type": "string"
                  },
                  "wa_integration_id": {
                    "description": "WhatsApp integration ID",
                    "type": "integer"
                  }
                },
                "required": [
                  "name",
                  "provider"
                ],
                "title": "CreateUpdateFollowUpChatRequest",
                "type": "object"
              }
            }
          },
          "description": "Follow up chat data to update",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundle_id": {
                          "description": "Bundle ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "change_status": {
                          "description": "Triggered after order status change to this status",
                          "type": "boolean"
                        },
                        "hours_after": {
                          "description": "Hours after which the follow-up chat is sent",
                          "type": "integer"
                        },
                        "id": {
                          "description": "Follow-up chat ID",
                          "type": "integer"
                        },
                        "image": {
                          "description": "Image URL for the follow-up chat",
                          "format": "uri",
                          "type": "string"
                        },
                        "is_default": {
                          "description": "Is this a default follow-up chat",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Name of the follow-up chat",
                          "type": "string"
                        },
                        "product_id": {
                          "description": "Product ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "provider": {
                          "description": "Provider of the follow-up chat",
                          "type": "string"
                        },
                        "store_id": {
                          "description": "Store ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "text_for_bank_transfer": {
                          "description": "Text for bank transfer payments",
                          "type": "string"
                        },
                        "text_for_cod": {
                          "description": "Text for cash on delivery payments",
                          "type": "string"
                        },
                        "text_for_epayment": {
                          "description": "Text for electronic payments",
                          "type": "string"
                        },
                        "trigger": {
                          "description": "Trigger for the follow-up chat",
                          "type": "string"
                        },
                        "wa_gateway_assignation_type": {
                          "description": "WhatsApp gateway assignation type",
                          "type": "string"
                        },
                        "wa_integration": {
                          "properties": {
                            "id": {
                              "description": "Whatsapp Integration ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "phone_number": {
                              "description": "Phone Number",
                              "type": "string"
                            },
                            "provider": {
                              "description": "Provider",
                              "type": "string"
                            }
                          },
                          "title": "WhatsappIntegration",
                          "type": "object"
                        }
                      },
                      "title": "ManagingFollowUpChat",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Follow up chat template updated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_bundle"
            ]
          }
        ],
        "summary": "Update a follow up chat template",
        "tags": [
          "Bundles"
        ]
      },
      "delete": {
        "callbacks": {},
        "description": "Deletes a follow up chat template.",
        "operationId": "ScalevApiWeb.BundleController.delete_fuc",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Follow up chat ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Follow up chat template deleted successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_bundle"
            ]
          }
        ],
        "summary": "Delete a follow up chat template",
        "tags": [
          "Bundles"
        ]
      }
    },
    "/v2/bundles/{bundle_id}/partners": {
      "post": {
        "callbacks": {},
        "description": "Associates a partner with a specific bundle using the provided unique identifier.",
        "operationId": "ScalevApiWeb.BundleController.create_partner",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "partner_unique_id": {
                    "description": "Unique identifier of the partner to associate",
                    "type": "string"
                  }
                },
                "required": [
                  "partner_unique_id"
                ],
                "title": "CreateBundlePartnerRequest",
                "type": "object"
              }
            }
          },
          "description": "Partner data to associate",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "created_at": {
                          "description": "Creation timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": {
                          "description": "Bundle Partner ID",
                          "type": "integer"
                        },
                        "partner": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        }
                      },
                      "required": [
                        "id",
                        "partner",
                        "created_at"
                      ],
                      "title": "BundlePartner",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Partner associated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_bundle"
            ]
          }
        ],
        "summary": "Add a partner to a bundle",
        "tags": [
          "Bundles"
        ]
      },
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of partners associated with a specific bundle. The data is sorted by id in descending order and cannot be changed. Uses cursor-based pagination with default page size of 25 and maximum of 25.",
        "operationId": "ScalevApiWeb.BundleController.index_partners",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The ID of the last item from the previous page. Used for cursor-based pagination.",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of items to return per page. Default is 25, maximum is 25.",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 25,
              "maximum": 25,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "created_at": {
                                "description": "Creation timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "id": {
                                "description": "Bundle Partner ID",
                                "type": "integer"
                              },
                              "partner": {
                                "properties": {
                                  "account_holder": {
                                    "description": "Name of the account holder",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "Email address of the business",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Business ID",
                                    "type": "integer"
                                  },
                                  "is_banned": {
                                    "description": "Is the business banned?",
                                    "type": "boolean"
                                  },
                                  "logo": {
                                    "description": "URL to the business logo",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the business",
                                    "type": "string"
                                  },
                                  "username": {
                                    "description": "Username of the business",
                                    "type": "string"
                                  }
                                },
                                "title": "BusinessSimple",
                                "type": "object"
                              }
                            },
                            "required": [
                              "id",
                              "partner",
                              "created_at"
                            ],
                            "title": "BundlePartner",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Partners list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_bundle"
            ]
          }
        ],
        "summary": "List partners for a bundle",
        "tags": [
          "Bundles"
        ]
      }
    },
    "/v2/bundles/{bundle_id}/partners/{id}": {
      "delete": {
        "callbacks": {},
        "description": "Dissociates a partner from a specific bundle by its ID.",
        "operationId": "ScalevApiWeb.BundleController.delete_partner",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Bundle Partner ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Partner removed successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_bundle"
            ]
          }
        ],
        "summary": "Remove a partner from a bundle",
        "tags": [
          "Bundles"
        ]
      }
    },
    "/v2/bundles/{bundle_id}/relations": {
      "get": {
        "callbacks": {},
        "description": "Retrieves a bundle along with its related entities such as active bundle price options and their associated stores and form displays.",
        "operationId": "ScalevApiWeb.BundleController.show_relations",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundle_price_options": {
                          "description": "List of bundle price options",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Bundle Price Option ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Bundle Price Option Unique ID",
                                "type": "string"
                              }
                            },
                            "title": "BundlePriceOptionRelation",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "id": {
                          "description": "Bundle ID",
                          "type": "integer"
                        },
                        "name": {
                          "description": "Name",
                          "type": "string"
                        },
                        "pages": {
                          "description": "Pages associated with the bundle",
                          "properties": {
                            "all": {
                              "description": "All pages associated with the bundle",
                              "items": {
                                "properties": {
                                  "business": {
                                    "properties": {
                                      "account_holder": {
                                        "description": "Name of the account holder",
                                        "type": "string"
                                      },
                                      "email": {
                                        "description": "Email address of the business",
                                        "format": "email",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Business ID",
                                        "type": "integer"
                                      },
                                      "is_banned": {
                                        "description": "Is the business banned?",
                                        "type": "boolean"
                                      },
                                      "logo": {
                                        "description": "URL to the business logo",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "unique_id": {
                                        "description": "Unique identifier for the business",
                                        "type": "string"
                                      },
                                      "username": {
                                        "description": "Username of the business",
                                        "type": "string"
                                      }
                                    },
                                    "title": "BusinessSimple",
                                    "type": "object"
                                  },
                                  "id": {
                                    "description": "Page ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the page",
                                    "type": "string"
                                  },
                                  "slug": {
                                    "description": "Slug for the page URL",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the page",
                                    "type": "string"
                                  }
                                },
                                "title": "PageRelation",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "will_unpublish": {
                              "description": "Pages that will be unpublished",
                              "items": {
                                "properties": {
                                  "business": {
                                    "properties": {
                                      "account_holder": {
                                        "description": "Name of the account holder",
                                        "type": "string"
                                      },
                                      "email": {
                                        "description": "Email address of the business",
                                        "format": "email",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Business ID",
                                        "type": "integer"
                                      },
                                      "is_banned": {
                                        "description": "Is the business banned?",
                                        "type": "boolean"
                                      },
                                      "logo": {
                                        "description": "URL to the business logo",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "unique_id": {
                                        "description": "Unique identifier for the business",
                                        "type": "string"
                                      },
                                      "username": {
                                        "description": "Username of the business",
                                        "type": "string"
                                      }
                                    },
                                    "title": "BusinessSimple",
                                    "type": "object"
                                  },
                                  "id": {
                                    "description": "Page ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the page",
                                    "type": "string"
                                  },
                                  "slug": {
                                    "description": "Slug for the page URL",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the page",
                                    "type": "string"
                                  }
                                },
                                "title": "PageRelation",
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "stores": {
                          "description": "List of stores associated with the bundle",
                          "items": {
                            "properties": {
                              "business": {
                                "properties": {
                                  "account_holder": {
                                    "description": "Name of the account holder",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "Email address of the business",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Business ID",
                                    "type": "integer"
                                  },
                                  "is_banned": {
                                    "description": "Is the business banned?",
                                    "type": "boolean"
                                  },
                                  "logo": {
                                    "description": "URL to the business logo",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the business",
                                    "type": "string"
                                  },
                                  "username": {
                                    "description": "Username of the business",
                                    "type": "string"
                                  }
                                },
                                "title": "BusinessSimple",
                                "type": "object"
                              },
                              "id": {
                                "description": "Store ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Store name",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Unique identifier for the store",
                                "type": "string"
                              }
                            },
                            "title": "StoreRelation",
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "title": "BundleRelation",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Bundle with relations"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_bundle"
            ]
          }
        ],
        "summary": "Show bundle relations",
        "tags": [
          "Bundles"
        ]
      }
    },
    "/v2/bundles/{bundle_id}/sharing": {
      "patch": {
        "callbacks": {},
        "description": "Updates the sharing setting of an existing bundle.",
        "operationId": "ScalevApiWeb.BundleController.update_sharing",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "is_bundle_sharing": {
                    "description": "Is Bundle Sharing",
                    "type": "boolean"
                  }
                },
                "required": [
                  "is_bundle_sharing"
                ],
                "title": "UpdateSharingRequestBundle",
                "type": "object"
              }
            }
          },
          "description": "Bundle sharing data to update",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundle_price_options": {
                          "description": "List of Bundle Price Options",
                          "items": {
                            "properties": {
                              "form_displays": {
                                "description": "List of form displays associated with the bundle price option",
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Form Display ID",
                                      "type": "integer"
                                    },
                                    "page_display": {
                                      "properties": {
                                        "id": {
                                          "description": "Page Display ID",
                                          "type": "integer"
                                        },
                                        "page": {
                                          "properties": {
                                            "id": {
                                              "description": "Page ID",
                                              "type": "integer"
                                            },
                                            "is_published": {
                                              "description": "Is the page published?",
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "description": "Name of the page",
                                              "type": "string"
                                            },
                                            "published_at": {
                                              "description": "Publication date of the page",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "slug": {
                                              "description": "Slug for the page URL",
                                              "type": "string"
                                            },
                                            "store_id": {
                                              "description": "ID of the store the page belongs to",
                                              "type": "integer"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the page",
                                              "type": "string"
                                            }
                                          },
                                          "title": "PageSimple",
                                          "type": "object"
                                        }
                                      },
                                      "title": "ForProductPageDisplay",
                                      "type": "object"
                                    }
                                  },
                                  "title": "ForProductFormDisplay",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "id": {
                                "description": "Bundle Price Option ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "price": {
                                "description": "Price (including tax)",
                                "format": "float",
                                "type": "number"
                              },
                              "price_bt": {
                                "description": "Price before tax",
                                "format": "float",
                                "type": "number"
                              },
                              "slug": {
                                "description": "Slug",
                                "type": "string"
                              },
                              "stores": {
                                "description": "List of stores where the bundle price option is available",
                                "items": {
                                  "properties": {
                                    "custom_domain": {
                                      "properties": {
                                        "full_url": {
                                          "description": "Full URL",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "Custom Domain ID",
                                          "type": "integer"
                                        },
                                        "is_verified": {
                                          "description": "Is Verified",
                                          "type": "boolean"
                                        }
                                      },
                                      "title": "SimpleCustomDomain",
                                      "type": "object"
                                    },
                                    "id": {
                                      "description": "Store ID",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "description": "Store name",
                                      "type": "string"
                                    }
                                  },
                                  "title": "DomainStore",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "unique_id": {
                                "description": "Bundle Price Option Unique ID",
                                "type": "string"
                              },
                              "upsell_form_displays": {
                                "description": "sell form displays associated with the bundle price option",
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Form Display ID",
                                      "type": "integer"
                                    },
                                    "page_display": {
                                      "properties": {
                                        "id": {
                                          "description": "Page Display ID",
                                          "type": "integer"
                                        },
                                        "page": {
                                          "properties": {
                                            "id": {
                                              "description": "Page ID",
                                              "type": "integer"
                                            },
                                            "is_published": {
                                              "description": "Is the page published?",
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "description": "Name of the page",
                                              "type": "string"
                                            },
                                            "published_at": {
                                              "description": "Publication date of the page",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "slug": {
                                              "description": "Slug for the page URL",
                                              "type": "string"
                                            },
                                            "store_id": {
                                              "description": "ID of the store the page belongs to",
                                              "type": "integer"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the page",
                                              "type": "string"
                                            }
                                          },
                                          "title": "PageSimple",
                                          "type": "object"
                                        }
                                      },
                                      "title": "ForProductPageDisplay",
                                      "type": "object"
                                    }
                                  },
                                  "title": "ForProductFormDisplay",
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "title": "BundlePriceOptionForBundle",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "bundlelines": {
                          "description": "List of Bundle Lines with Product details",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Bundle Line ID",
                                "type": "integer"
                              },
                              "quantity": {
                                "description": "Quantity of the variant in the bundle line",
                                "type": "integer"
                              },
                              "subtotal": {
                                "description": "Subtotal price for the bundle line (variant price * quantity)",
                                "format": "decimal",
                                "type": "string"
                              },
                              "variant": {
                                "properties": {
                                  "cogs": {
                                    "description": "Cost of Goods Sold",
                                    "type": "number"
                                  },
                                  "cogs_bt": {
                                    "description": "Cost of Goods Sold before tax",
                                    "type": "number"
                                  },
                                  "created_at": {
                                    "description": "Timestamp when the variant was created",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "digital_product_files": {
                                    "description": "List of digital product files associated with the variant",
                                    "items": {
                                      "properties": {
                                        "content_type": {
                                          "description": "MIME type of the digital product file",
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "Digital product file primary key",
                                          "type": "integer"
                                        },
                                        "name": {
                                          "description": "File name of the digital product file",
                                          "type": "string"
                                        },
                                        "size_in_bytes": {
                                          "description": "Size of the digital product file in bytes",
                                          "type": "integer"
                                        },
                                        "url": {
                                          "description": "URL to access the digital product file",
                                          "format": "uri",
                                          "type": "string"
                                        }
                                      },
                                      "title": "DigitalProductFile",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "display": {
                                    "description": "Display name for the variant",
                                    "type": "string"
                                  },
                                  "fullname": {
                                    "description": "Full name of the variant",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Variant primary key",
                                    "type": "integer"
                                  },
                                  "images": {
                                    "description": "List of image URLs associated with the variant",
                                    "items": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "is_checked": {
                                    "description": "Mark variant as sellable",
                                    "type": "boolean"
                                  },
                                  "is_editable": {
                                    "description": "Indicates if the variant is editable",
                                    "type": "boolean"
                                  },
                                  "item_type": {
                                    "description": "Type of the product item",
                                    "enum": [
                                      "physical",
                                      "digital",
                                      "course"
                                    ],
                                    "type": "string"
                                  },
                                  "last_updated_at": {
                                    "description": "Timestamp when the variant was last updated",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "additionalProperties": true,
                                    "description": "Additional metadata associated with the variant",
                                    "type": "object"
                                  },
                                  "name": {
                                    "description": "Full name of the variant",
                                    "type": "string"
                                  },
                                  "option1_value": {
                                    "description": "Value of the first product option",
                                    "type": "string"
                                  },
                                  "option2_value": {
                                    "description": "Value of the second product option",
                                    "type": "string"
                                  },
                                  "option3_value": {
                                    "description": "Value of the third product option",
                                    "type": "string"
                                  },
                                  "price": {
                                    "description": "Price of the variant",
                                    "type": "number"
                                  },
                                  "price_bt": {
                                    "description": "Price before tax",
                                    "type": "number"
                                  },
                                  "product": {
                                    "properties": {
                                      "business": {
                                        "properties": {
                                          "account_holder": {
                                            "description": "Name of the account holder",
                                            "type": "string"
                                          },
                                          "email": {
                                            "description": "Email address of the business",
                                            "format": "email",
                                            "type": "string"
                                          },
                                          "id": {
                                            "description": "Business ID",
                                            "type": "integer"
                                          },
                                          "is_banned": {
                                            "description": "Is the business banned?",
                                            "type": "boolean"
                                          },
                                          "logo": {
                                            "description": "URL to the business logo",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "unique_id": {
                                            "description": "Unique identifier for the business",
                                            "type": "string"
                                          },
                                          "username": {
                                            "description": "Username of the business",
                                            "type": "string"
                                          }
                                        },
                                        "title": "BusinessSimple",
                                        "type": "object"
                                      },
                                      "description": {
                                        "description": "Description",
                                        "type": "string"
                                      },
                                      "display": {
                                        "description": "Product name for display",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Product ID",
                                        "type": "integer"
                                      },
                                      "is_inventory": {
                                        "description": "Is Inventory",
                                        "type": "boolean"
                                      },
                                      "is_multiple": {
                                        "description": "Is Multiple",
                                        "type": "boolean"
                                      },
                                      "is_product_sharing": {
                                        "description": "Is Product Sharing",
                                        "type": "boolean"
                                      },
                                      "item_type": {
                                        "description": "Type of the product item",
                                        "enum": [
                                          "physical",
                                          "digital",
                                          "course"
                                        ],
                                        "title": "ItemType",
                                        "type": "string"
                                      },
                                      "item_type_name": {
                                        "description": "Item Type Name",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Product Name",
                                        "type": "string"
                                      },
                                      "option1_name": {
                                        "description": "Option 1 Name",
                                        "type": "string"
                                      },
                                      "option2_name": {
                                        "description": "Option 2 Name",
                                        "type": "string"
                                      },
                                      "option3_name": {
                                        "description": "Option 3 Name",
                                        "type": "string"
                                      },
                                      "uuid": {
                                        "description": "Product UUID",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Product",
                                    "type": "object"
                                  },
                                  "product_name": {
                                    "description": "Name of the associated product",
                                    "type": "string"
                                  },
                                  "reseller_price": {
                                    "description": "Reseller price of the variant",
                                    "type": "number"
                                  },
                                  "reseller_price_bt": {
                                    "description": "Reseller price before tax",
                                    "type": "number"
                                  },
                                  "self_file_urls": {
                                    "description": "List of self file URLs associated with the variant",
                                    "items": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "sku": {
                                    "description": "Stock Keeping Unit",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Variant unique identifier",
                                    "type": "string"
                                  },
                                  "uuid": {
                                    "description": "Variant UUID",
                                    "type": "string"
                                  },
                                  "weight": {
                                    "description": "Weight of the variant in grams",
                                    "type": "integer"
                                  }
                                },
                                "title": "Variant",
                                "type": "object"
                              }
                            },
                            "title": "BundleLine",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "created_at": {
                          "description": "Creation timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "created_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "custom_id": {
                          "description": "Custom Identifier",
                          "type": "string"
                        },
                        "description": {
                          "description": "Description",
                          "type": "string"
                        },
                        "id": {
                          "description": "Bundle ID",
                          "type": "integer"
                        },
                        "images": {
                          "description": "List of Image URLs",
                          "items": {
                            "format": "uri",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "is_bundle_sharing": {
                          "description": "Is Bundle Sharing Enabled",
                          "type": "boolean"
                        },
                        "labels": {
                          "description": "List of labels associated with the product",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "Label name",
                                "type": "string"
                              }
                            },
                            "title": "ItemLabel",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "last_updated_at": {
                          "description": "Last update timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "meta_thumbnail": {
                          "description": "Meta Thumbnail URL",
                          "format": "uri",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name",
                          "type": "string"
                        },
                        "public_name": {
                          "description": "Public Name",
                          "type": "string"
                        },
                        "rich_description": {
                          "description": "Rich Description",
                          "type": "string"
                        },
                        "weight_bump": {
                          "description": "Weight Bump",
                          "type": "integer"
                        }
                      },
                      "title": "Bundle",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Bundle sharing updated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_bundle"
            ]
          }
        ],
        "summary": "Update bundle sharing setting",
        "tags": [
          "Bundles"
        ]
      }
    },
    "/v2/bundles/{id}": {
      "get": {
        "callbacks": {},
        "description": "Retrieves a bundle by its ID.",
        "operationId": "ScalevApiWeb.BundleController.show",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundle_price_options": {
                          "description": "List of Bundle Price Options",
                          "items": {
                            "properties": {
                              "form_displays": {
                                "description": "List of form displays associated with the bundle price option",
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Form Display ID",
                                      "type": "integer"
                                    },
                                    "page_display": {
                                      "properties": {
                                        "id": {
                                          "description": "Page Display ID",
                                          "type": "integer"
                                        },
                                        "page": {
                                          "properties": {
                                            "id": {
                                              "description": "Page ID",
                                              "type": "integer"
                                            },
                                            "is_published": {
                                              "description": "Is the page published?",
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "description": "Name of the page",
                                              "type": "string"
                                            },
                                            "published_at": {
                                              "description": "Publication date of the page",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "slug": {
                                              "description": "Slug for the page URL",
                                              "type": "string"
                                            },
                                            "store_id": {
                                              "description": "ID of the store the page belongs to",
                                              "type": "integer"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the page",
                                              "type": "string"
                                            }
                                          },
                                          "title": "PageSimple",
                                          "type": "object"
                                        }
                                      },
                                      "title": "ForProductPageDisplay",
                                      "type": "object"
                                    }
                                  },
                                  "title": "ForProductFormDisplay",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "id": {
                                "description": "Bundle Price Option ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "price": {
                                "description": "Price (including tax)",
                                "format": "float",
                                "type": "number"
                              },
                              "price_bt": {
                                "description": "Price before tax",
                                "format": "float",
                                "type": "number"
                              },
                              "slug": {
                                "description": "Slug",
                                "type": "string"
                              },
                              "stores": {
                                "description": "List of stores where the bundle price option is available",
                                "items": {
                                  "properties": {
                                    "custom_domain": {
                                      "properties": {
                                        "full_url": {
                                          "description": "Full URL",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "Custom Domain ID",
                                          "type": "integer"
                                        },
                                        "is_verified": {
                                          "description": "Is Verified",
                                          "type": "boolean"
                                        }
                                      },
                                      "title": "SimpleCustomDomain",
                                      "type": "object"
                                    },
                                    "id": {
                                      "description": "Store ID",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "description": "Store name",
                                      "type": "string"
                                    }
                                  },
                                  "title": "DomainStore",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "unique_id": {
                                "description": "Bundle Price Option Unique ID",
                                "type": "string"
                              },
                              "upsell_form_displays": {
                                "description": "sell form displays associated with the bundle price option",
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Form Display ID",
                                      "type": "integer"
                                    },
                                    "page_display": {
                                      "properties": {
                                        "id": {
                                          "description": "Page Display ID",
                                          "type": "integer"
                                        },
                                        "page": {
                                          "properties": {
                                            "id": {
                                              "description": "Page ID",
                                              "type": "integer"
                                            },
                                            "is_published": {
                                              "description": "Is the page published?",
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "description": "Name of the page",
                                              "type": "string"
                                            },
                                            "published_at": {
                                              "description": "Publication date of the page",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "slug": {
                                              "description": "Slug for the page URL",
                                              "type": "string"
                                            },
                                            "store_id": {
                                              "description": "ID of the store the page belongs to",
                                              "type": "integer"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the page",
                                              "type": "string"
                                            }
                                          },
                                          "title": "PageSimple",
                                          "type": "object"
                                        }
                                      },
                                      "title": "ForProductPageDisplay",
                                      "type": "object"
                                    }
                                  },
                                  "title": "ForProductFormDisplay",
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "title": "BundlePriceOptionForBundle",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "bundlelines": {
                          "description": "List of Bundle Lines with Product details",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Bundle Line ID",
                                "type": "integer"
                              },
                              "quantity": {
                                "description": "Quantity of the variant in the bundle line",
                                "type": "integer"
                              },
                              "subtotal": {
                                "description": "Subtotal price for the bundle line (variant price * quantity)",
                                "format": "decimal",
                                "type": "string"
                              },
                              "variant": {
                                "properties": {
                                  "cogs": {
                                    "description": "Cost of Goods Sold",
                                    "type": "number"
                                  },
                                  "cogs_bt": {
                                    "description": "Cost of Goods Sold before tax",
                                    "type": "number"
                                  },
                                  "created_at": {
                                    "description": "Timestamp when the variant was created",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "digital_product_files": {
                                    "description": "List of digital product files associated with the variant",
                                    "items": {
                                      "properties": {
                                        "content_type": {
                                          "description": "MIME type of the digital product file",
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "Digital product file primary key",
                                          "type": "integer"
                                        },
                                        "name": {
                                          "description": "File name of the digital product file",
                                          "type": "string"
                                        },
                                        "size_in_bytes": {
                                          "description": "Size of the digital product file in bytes",
                                          "type": "integer"
                                        },
                                        "url": {
                                          "description": "URL to access the digital product file",
                                          "format": "uri",
                                          "type": "string"
                                        }
                                      },
                                      "title": "DigitalProductFile",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "display": {
                                    "description": "Display name for the variant",
                                    "type": "string"
                                  },
                                  "fullname": {
                                    "description": "Full name of the variant",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Variant primary key",
                                    "type": "integer"
                                  },
                                  "images": {
                                    "description": "List of image URLs associated with the variant",
                                    "items": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "is_checked": {
                                    "description": "Mark variant as sellable",
                                    "type": "boolean"
                                  },
                                  "is_editable": {
                                    "description": "Indicates if the variant is editable",
                                    "type": "boolean"
                                  },
                                  "item_type": {
                                    "description": "Type of the product item",
                                    "enum": [
                                      "physical",
                                      "digital",
                                      "course"
                                    ],
                                    "type": "string"
                                  },
                                  "last_updated_at": {
                                    "description": "Timestamp when the variant was last updated",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "additionalProperties": true,
                                    "description": "Additional metadata associated with the variant",
                                    "type": "object"
                                  },
                                  "name": {
                                    "description": "Full name of the variant",
                                    "type": "string"
                                  },
                                  "option1_value": {
                                    "description": "Value of the first product option",
                                    "type": "string"
                                  },
                                  "option2_value": {
                                    "description": "Value of the second product option",
                                    "type": "string"
                                  },
                                  "option3_value": {
                                    "description": "Value of the third product option",
                                    "type": "string"
                                  },
                                  "price": {
                                    "description": "Price of the variant",
                                    "type": "number"
                                  },
                                  "price_bt": {
                                    "description": "Price before tax",
                                    "type": "number"
                                  },
                                  "product": {
                                    "properties": {
                                      "business": {
                                        "properties": {
                                          "account_holder": {
                                            "description": "Name of the account holder",
                                            "type": "string"
                                          },
                                          "email": {
                                            "description": "Email address of the business",
                                            "format": "email",
                                            "type": "string"
                                          },
                                          "id": {
                                            "description": "Business ID",
                                            "type": "integer"
                                          },
                                          "is_banned": {
                                            "description": "Is the business banned?",
                                            "type": "boolean"
                                          },
                                          "logo": {
                                            "description": "URL to the business logo",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "unique_id": {
                                            "description": "Unique identifier for the business",
                                            "type": "string"
                                          },
                                          "username": {
                                            "description": "Username of the business",
                                            "type": "string"
                                          }
                                        },
                                        "title": "BusinessSimple",
                                        "type": "object"
                                      },
                                      "description": {
                                        "description": "Description",
                                        "type": "string"
                                      },
                                      "display": {
                                        "description": "Product name for display",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Product ID",
                                        "type": "integer"
                                      },
                                      "is_inventory": {
                                        "description": "Is Inventory",
                                        "type": "boolean"
                                      },
                                      "is_multiple": {
                                        "description": "Is Multiple",
                                        "type": "boolean"
                                      },
                                      "is_product_sharing": {
                                        "description": "Is Product Sharing",
                                        "type": "boolean"
                                      },
                                      "item_type": {
                                        "description": "Type of the product item",
                                        "enum": [
                                          "physical",
                                          "digital",
                                          "course"
                                        ],
                                        "title": "ItemType",
                                        "type": "string"
                                      },
                                      "item_type_name": {
                                        "description": "Item Type Name",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Product Name",
                                        "type": "string"
                                      },
                                      "option1_name": {
                                        "description": "Option 1 Name",
                                        "type": "string"
                                      },
                                      "option2_name": {
                                        "description": "Option 2 Name",
                                        "type": "string"
                                      },
                                      "option3_name": {
                                        "description": "Option 3 Name",
                                        "type": "string"
                                      },
                                      "uuid": {
                                        "description": "Product UUID",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Product",
                                    "type": "object"
                                  },
                                  "product_name": {
                                    "description": "Name of the associated product",
                                    "type": "string"
                                  },
                                  "reseller_price": {
                                    "description": "Reseller price of the variant",
                                    "type": "number"
                                  },
                                  "reseller_price_bt": {
                                    "description": "Reseller price before tax",
                                    "type": "number"
                                  },
                                  "self_file_urls": {
                                    "description": "List of self file URLs associated with the variant",
                                    "items": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "sku": {
                                    "description": "Stock Keeping Unit",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Variant unique identifier",
                                    "type": "string"
                                  },
                                  "uuid": {
                                    "description": "Variant UUID",
                                    "type": "string"
                                  },
                                  "weight": {
                                    "description": "Weight of the variant in grams",
                                    "type": "integer"
                                  }
                                },
                                "title": "Variant",
                                "type": "object"
                              }
                            },
                            "title": "BundleLine",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "created_at": {
                          "description": "Creation timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "created_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "custom_id": {
                          "description": "Custom Identifier",
                          "type": "string"
                        },
                        "description": {
                          "description": "Description",
                          "type": "string"
                        },
                        "id": {
                          "description": "Bundle ID",
                          "type": "integer"
                        },
                        "images": {
                          "description": "List of Image URLs",
                          "items": {
                            "format": "uri",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "is_bundle_sharing": {
                          "description": "Is Bundle Sharing Enabled",
                          "type": "boolean"
                        },
                        "labels": {
                          "description": "List of labels associated with the product",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "Label name",
                                "type": "string"
                              }
                            },
                            "title": "ItemLabel",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "last_updated_at": {
                          "description": "Last update timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "meta_thumbnail": {
                          "description": "Meta Thumbnail URL",
                          "format": "uri",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name",
                          "type": "string"
                        },
                        "public_name": {
                          "description": "Public Name",
                          "type": "string"
                        },
                        "rich_description": {
                          "description": "Rich Description",
                          "type": "string"
                        },
                        "weight_bump": {
                          "description": "Weight Bump",
                          "type": "integer"
                        }
                      },
                      "title": "Bundle",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Bundle details"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_bundle"
            ]
          }
        ],
        "summary": "Show bundle",
        "tags": [
          "Bundles"
        ]
      },
      "patch": {
        "callbacks": {},
        "description": "Updates an existing bundle with the provided data.",
        "operationId": "ScalevApiWeb.BundleController.update",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bundlelines": {
                    "description": "List of Bundle Lines",
                    "items": {
                      "properties": {
                        "quantity": {
                          "description": "Quantity of the variant in the bundle line",
                          "type": "integer"
                        },
                        "variant_id": {
                          "description": "Variant ID",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "variant_id",
                        "quantity"
                      ],
                      "title": "BundleLineCreateRequest",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "custom_id": {
                    "description": "Custom Identifier",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "images": {
                    "description": "List of Image URLs",
                    "items": {
                      "format": "uri",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "meta_thumbnail": {
                    "description": "Meta Thumbnail URL",
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name",
                    "type": "string"
                  },
                  "public_name": {
                    "description": "Public Name",
                    "type": "string"
                  },
                  "rich_description": {
                    "description": "Rich Description",
                    "type": "string"
                  },
                  "weight_bump": {
                    "description": "Weight Bump",
                    "type": "integer"
                  }
                },
                "title": "BundleUpdateRequest",
                "type": "object"
              }
            }
          },
          "description": "Bundle data to update",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundle_price_options": {
                          "description": "List of Bundle Price Options",
                          "items": {
                            "properties": {
                              "form_displays": {
                                "description": "List of form displays associated with the bundle price option",
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Form Display ID",
                                      "type": "integer"
                                    },
                                    "page_display": {
                                      "properties": {
                                        "id": {
                                          "description": "Page Display ID",
                                          "type": "integer"
                                        },
                                        "page": {
                                          "properties": {
                                            "id": {
                                              "description": "Page ID",
                                              "type": "integer"
                                            },
                                            "is_published": {
                                              "description": "Is the page published?",
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "description": "Name of the page",
                                              "type": "string"
                                            },
                                            "published_at": {
                                              "description": "Publication date of the page",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "slug": {
                                              "description": "Slug for the page URL",
                                              "type": "string"
                                            },
                                            "store_id": {
                                              "description": "ID of the store the page belongs to",
                                              "type": "integer"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the page",
                                              "type": "string"
                                            }
                                          },
                                          "title": "PageSimple",
                                          "type": "object"
                                        }
                                      },
                                      "title": "ForProductPageDisplay",
                                      "type": "object"
                                    }
                                  },
                                  "title": "ForProductFormDisplay",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "id": {
                                "description": "Bundle Price Option ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "price": {
                                "description": "Price (including tax)",
                                "format": "float",
                                "type": "number"
                              },
                              "price_bt": {
                                "description": "Price before tax",
                                "format": "float",
                                "type": "number"
                              },
                              "slug": {
                                "description": "Slug",
                                "type": "string"
                              },
                              "stores": {
                                "description": "List of stores where the bundle price option is available",
                                "items": {
                                  "properties": {
                                    "custom_domain": {
                                      "properties": {
                                        "full_url": {
                                          "description": "Full URL",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "Custom Domain ID",
                                          "type": "integer"
                                        },
                                        "is_verified": {
                                          "description": "Is Verified",
                                          "type": "boolean"
                                        }
                                      },
                                      "title": "SimpleCustomDomain",
                                      "type": "object"
                                    },
                                    "id": {
                                      "description": "Store ID",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "description": "Store name",
                                      "type": "string"
                                    }
                                  },
                                  "title": "DomainStore",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "unique_id": {
                                "description": "Bundle Price Option Unique ID",
                                "type": "string"
                              },
                              "upsell_form_displays": {
                                "description": "sell form displays associated with the bundle price option",
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Form Display ID",
                                      "type": "integer"
                                    },
                                    "page_display": {
                                      "properties": {
                                        "id": {
                                          "description": "Page Display ID",
                                          "type": "integer"
                                        },
                                        "page": {
                                          "properties": {
                                            "id": {
                                              "description": "Page ID",
                                              "type": "integer"
                                            },
                                            "is_published": {
                                              "description": "Is the page published?",
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "description": "Name of the page",
                                              "type": "string"
                                            },
                                            "published_at": {
                                              "description": "Publication date of the page",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "slug": {
                                              "description": "Slug for the page URL",
                                              "type": "string"
                                            },
                                            "store_id": {
                                              "description": "ID of the store the page belongs to",
                                              "type": "integer"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the page",
                                              "type": "string"
                                            }
                                          },
                                          "title": "PageSimple",
                                          "type": "object"
                                        }
                                      },
                                      "title": "ForProductPageDisplay",
                                      "type": "object"
                                    }
                                  },
                                  "title": "ForProductFormDisplay",
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "title": "BundlePriceOptionForBundle",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "bundlelines": {
                          "description": "List of Bundle Lines with Product details",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Bundle Line ID",
                                "type": "integer"
                              },
                              "quantity": {
                                "description": "Quantity of the variant in the bundle line",
                                "type": "integer"
                              },
                              "subtotal": {
                                "description": "Subtotal price for the bundle line (variant price * quantity)",
                                "format": "decimal",
                                "type": "string"
                              },
                              "variant": {
                                "properties": {
                                  "cogs": {
                                    "description": "Cost of Goods Sold",
                                    "type": "number"
                                  },
                                  "cogs_bt": {
                                    "description": "Cost of Goods Sold before tax",
                                    "type": "number"
                                  },
                                  "created_at": {
                                    "description": "Timestamp when the variant was created",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "digital_product_files": {
                                    "description": "List of digital product files associated with the variant",
                                    "items": {
                                      "properties": {
                                        "content_type": {
                                          "description": "MIME type of the digital product file",
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "Digital product file primary key",
                                          "type": "integer"
                                        },
                                        "name": {
                                          "description": "File name of the digital product file",
                                          "type": "string"
                                        },
                                        "size_in_bytes": {
                                          "description": "Size of the digital product file in bytes",
                                          "type": "integer"
                                        },
                                        "url": {
                                          "description": "URL to access the digital product file",
                                          "format": "uri",
                                          "type": "string"
                                        }
                                      },
                                      "title": "DigitalProductFile",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "display": {
                                    "description": "Display name for the variant",
                                    "type": "string"
                                  },
                                  "fullname": {
                                    "description": "Full name of the variant",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Variant primary key",
                                    "type": "integer"
                                  },
                                  "images": {
                                    "description": "List of image URLs associated with the variant",
                                    "items": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "is_checked": {
                                    "description": "Mark variant as sellable",
                                    "type": "boolean"
                                  },
                                  "is_editable": {
                                    "description": "Indicates if the variant is editable",
                                    "type": "boolean"
                                  },
                                  "item_type": {
                                    "description": "Type of the product item",
                                    "enum": [
                                      "physical",
                                      "digital",
                                      "course"
                                    ],
                                    "type": "string"
                                  },
                                  "last_updated_at": {
                                    "description": "Timestamp when the variant was last updated",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "additionalProperties": true,
                                    "description": "Additional metadata associated with the variant",
                                    "type": "object"
                                  },
                                  "name": {
                                    "description": "Full name of the variant",
                                    "type": "string"
                                  },
                                  "option1_value": {
                                    "description": "Value of the first product option",
                                    "type": "string"
                                  },
                                  "option2_value": {
                                    "description": "Value of the second product option",
                                    "type": "string"
                                  },
                                  "option3_value": {
                                    "description": "Value of the third product option",
                                    "type": "string"
                                  },
                                  "price": {
                                    "description": "Price of the variant",
                                    "type": "number"
                                  },
                                  "price_bt": {
                                    "description": "Price before tax",
                                    "type": "number"
                                  },
                                  "product": {
                                    "properties": {
                                      "business": {
                                        "properties": {
                                          "account_holder": {
                                            "description": "Name of the account holder",
                                            "type": "string"
                                          },
                                          "email": {
                                            "description": "Email address of the business",
                                            "format": "email",
                                            "type": "string"
                                          },
                                          "id": {
                                            "description": "Business ID",
                                            "type": "integer"
                                          },
                                          "is_banned": {
                                            "description": "Is the business banned?",
                                            "type": "boolean"
                                          },
                                          "logo": {
                                            "description": "URL to the business logo",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "unique_id": {
                                            "description": "Unique identifier for the business",
                                            "type": "string"
                                          },
                                          "username": {
                                            "description": "Username of the business",
                                            "type": "string"
                                          }
                                        },
                                        "title": "BusinessSimple",
                                        "type": "object"
                                      },
                                      "description": {
                                        "description": "Description",
                                        "type": "string"
                                      },
                                      "display": {
                                        "description": "Product name for display",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Product ID",
                                        "type": "integer"
                                      },
                                      "is_inventory": {
                                        "description": "Is Inventory",
                                        "type": "boolean"
                                      },
                                      "is_multiple": {
                                        "description": "Is Multiple",
                                        "type": "boolean"
                                      },
                                      "is_product_sharing": {
                                        "description": "Is Product Sharing",
                                        "type": "boolean"
                                      },
                                      "item_type": {
                                        "description": "Type of the product item",
                                        "enum": [
                                          "physical",
                                          "digital",
                                          "course"
                                        ],
                                        "title": "ItemType",
                                        "type": "string"
                                      },
                                      "item_type_name": {
                                        "description": "Item Type Name",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Product Name",
                                        "type": "string"
                                      },
                                      "option1_name": {
                                        "description": "Option 1 Name",
                                        "type": "string"
                                      },
                                      "option2_name": {
                                        "description": "Option 2 Name",
                                        "type": "string"
                                      },
                                      "option3_name": {
                                        "description": "Option 3 Name",
                                        "type": "string"
                                      },
                                      "uuid": {
                                        "description": "Product UUID",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Product",
                                    "type": "object"
                                  },
                                  "product_name": {
                                    "description": "Name of the associated product",
                                    "type": "string"
                                  },
                                  "reseller_price": {
                                    "description": "Reseller price of the variant",
                                    "type": "number"
                                  },
                                  "reseller_price_bt": {
                                    "description": "Reseller price before tax",
                                    "type": "number"
                                  },
                                  "self_file_urls": {
                                    "description": "List of self file URLs associated with the variant",
                                    "items": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "sku": {
                                    "description": "Stock Keeping Unit",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Variant unique identifier",
                                    "type": "string"
                                  },
                                  "uuid": {
                                    "description": "Variant UUID",
                                    "type": "string"
                                  },
                                  "weight": {
                                    "description": "Weight of the variant in grams",
                                    "type": "integer"
                                  }
                                },
                                "title": "Variant",
                                "type": "object"
                              }
                            },
                            "title": "BundleLine",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "created_at": {
                          "description": "Creation timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "created_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "custom_id": {
                          "description": "Custom Identifier",
                          "type": "string"
                        },
                        "description": {
                          "description": "Description",
                          "type": "string"
                        },
                        "id": {
                          "description": "Bundle ID",
                          "type": "integer"
                        },
                        "images": {
                          "description": "List of Image URLs",
                          "items": {
                            "format": "uri",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "is_bundle_sharing": {
                          "description": "Is Bundle Sharing Enabled",
                          "type": "boolean"
                        },
                        "labels": {
                          "description": "List of labels associated with the product",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "Label name",
                                "type": "string"
                              }
                            },
                            "title": "ItemLabel",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "last_updated_at": {
                          "description": "Last update timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "meta_thumbnail": {
                          "description": "Meta Thumbnail URL",
                          "format": "uri",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name",
                          "type": "string"
                        },
                        "public_name": {
                          "description": "Public Name",
                          "type": "string"
                        },
                        "rich_description": {
                          "description": "Rich Description",
                          "type": "string"
                        },
                        "weight_bump": {
                          "description": "Weight Bump",
                          "type": "integer"
                        }
                      },
                      "title": "Bundle",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Bundle updated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_bundle"
            ]
          }
        ],
        "summary": "Update a bundle",
        "tags": [
          "Bundles"
        ]
      },
      "delete": {
        "callbacks": {},
        "description": "Deletes a bundle by its ID.",
        "operationId": "ScalevApiWeb.BundleController.delete",
        "parameters": [
          {
            "description": "Bundle ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Bundle deleted successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "delete_bundle"
            ]
          }
        ],
        "summary": "Delete a bundle",
        "tags": [
          "Bundles"
        ]
      }
    },
    "/v2/businesses/enabled-epayments": {
      "get": {
        "callbacks": {},
        "description": "Fetches the list of enabled e-payment methods for a specified business.",
        "operationId": "ScalevApiWeb.BusinessGlobalController.get_enabled_epayments",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "payment_methods": {
                          "description": "List of enabled payment methods",
                          "items": {
                            "description": "Order e-payment method",
                            "enum": [
                              "gopay",
                              "va",
                              "qris",
                              "card",
                              "invoice",
                              "alfamart",
                              "ovo",
                              "dana",
                              "shopeepay",
                              "linkaja"
                            ],
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "vas": {
                          "description": "List of enabled bank virtual accounts",
                          "items": {
                            "description": "Xendit VA bank code",
                            "enum": [
                              "BCA",
                              "BNI",
                              "BRI",
                              "MANDIRI",
                              "PERMATA",
                              "BSI",
                              "BJB",
                              "CIMB",
                              "SAHABAT_SAMPOERNA",
                              "ARTAJASA"
                            ],
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "title": "EnabledEpayments",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Enabled E-Payments"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_order_statistics"
            ]
          }
        ],
        "summary": "Get enabled e-payments for a business",
        "tags": [
          "Businesses"
        ]
      }
    },
    "/v2/locations": {
      "get": {
        "callbacks": {},
        "description": "Retrieve a list of locations with search and pagination.",
        "operationId": "ScalevApiWeb.LocationController.index_locations",
        "parameters": [
          {
            "description": "Page number for pagination",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Number of items per page",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Search term for location names",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "page": {
                          "default": 1,
                          "example": 1,
                          "nullable": false,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "city_name": {
                                "description": "City Name",
                                "type": "string"
                              },
                              "display": {
                                "description": "Display Name",
                                "type": "string"
                              },
                              "id": {
                                "description": "Location ID",
                                "type": "integer"
                              },
                              "jne_destination_id": {
                                "description": "JNE Destination ID",
                                "type": "integer"
                              },
                              "jne_origin_id": {
                                "description": "JNE Origin ID",
                                "type": "integer"
                              },
                              "ka_district_id": {
                                "description": "Kargo Aman District ID",
                                "type": "integer"
                              },
                              "lincah_code": {
                                "description": "Lincah Code",
                                "type": "string"
                              },
                              "lion_code": {
                                "description": "Lion Code",
                                "type": "string"
                              },
                              "mengantar_code": {
                                "description": "Mengantar Code",
                                "type": "string"
                              },
                              "ninja_l1": {
                                "description": "Ninja L1 Code",
                                "type": "string"
                              },
                              "ninja_l2": {
                                "description": "Ninja L2 Code",
                                "type": "string"
                              },
                              "province_name": {
                                "description": "Province Name",
                                "type": "string"
                              },
                              "ro_city_id": {
                                "description": "RajaOngkir City ID",
                                "type": "integer"
                              },
                              "ro_province_id": {
                                "description": "RajaOngkir Province ID",
                                "type": "integer"
                              },
                              "ro_subdistrict_id": {
                                "description": "RajaOngkir Subdistrict ID",
                                "type": "integer"
                              },
                              "subdistrict_name": {
                                "description": "Subdistrict Name",
                                "type": "string"
                              }
                            },
                            "title": "Location",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Locations list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "add_order"
            ]
          }
        ],
        "summary": "List Locations",
        "tags": [
          "Locations"
        ]
      }
    },
    "/v2/order": {
      "post": {
        "callbacks": {},
        "description": "Create a new order with the provided details.",
        "operationId": "ScalevApiWeb.OrderController.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address": {
                    "description": "Recipient address",
                    "type": "string"
                  },
                  "channel_unique_id": {
                    "description": "Channel unique ID",
                    "type": "string"
                  },
                  "courier_service_id": {
                    "description": "Courier service ID",
                    "type": "integer"
                  },
                  "customer_email": {
                    "description": "Customer email",
                    "format": "email",
                    "type": "string"
                  },
                  "customer_name": {
                    "description": "Customer name",
                    "type": "string"
                  },
                  "customer_phone": {
                    "description": "Customer phone number",
                    "type": "string"
                  },
                  "dropshipper_name": {
                    "description": "Dropshipper name",
                    "type": "string"
                  },
                  "dropshipper_phone": {
                    "description": "Dropshipper phone",
                    "type": "string"
                  },
                  "financial_entity_id": {
                    "description": "Financial entity ID",
                    "type": "integer"
                  },
                  "is_dropshipping": {
                    "description": "Is dropshipping order",
                    "type": "boolean"
                  },
                  "is_probably_spam": {
                    "default": false,
                    "description": "Is the order probably spam",
                    "type": "boolean"
                  },
                  "location_id": {
                    "description": "Location ID",
                    "type": "integer"
                  },
                  "metadata": {
                    "additionalProperties": true,
                    "description": "Additional metadata",
                    "type": "object"
                  },
                  "notes": {
                    "description": "Order notes",
                    "type": "string"
                  },
                  "orderbundles": {
                    "description": "Order bundles",
                    "items": {
                      "properties": {
                        "bundle_price_option_unique_id": {
                          "description": "Bundle price option unique ID",
                          "type": "string"
                        },
                        "quantity": {
                          "description": "Quantity",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "bundle_price_option_unique_id",
                        "quantity"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "ordervariants": {
                    "description": "Order variants",
                    "items": {
                      "properties": {
                        "quantity": {
                          "description": "Quantity",
                          "type": "integer"
                        },
                        "variant_unique_id": {
                          "description": "Variant unique ID",
                          "type": "string"
                        }
                      },
                      "required": [
                        "variant_unique_id",
                        "quantity"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "other_income": {
                    "description": "Other income amount",
                    "type": "number"
                  },
                  "other_income_name": {
                    "description": "Other income name",
                    "type": "string"
                  },
                  "page_unique_id": {
                    "description": "Page unique ID",
                    "type": "string"
                  },
                  "payment_account_holder": {
                    "description": "Payment account holder name",
                    "type": "string"
                  },
                  "payment_account_number": {
                    "description": "Payment account number",
                    "type": "string"
                  },
                  "payment_account_unique_id": {
                    "description": "Payment account unique ID",
                    "type": "string"
                  },
                  "payment_method": {
                    "description": "Order payment method",
                    "enum": [
                      "gopay",
                      "va",
                      "qris",
                      "card",
                      "invoice",
                      "alfamart",
                      "ovo",
                      "dana",
                      "shopeepay",
                      "linkaja",
                      "no_payment",
                      "bank_transfer",
                      "marketplace",
                      "cod"
                    ],
                    "type": "string"
                  },
                  "postal_code": {
                    "description": "Postal code",
                    "type": "string"
                  },
                  "product_discount": {
                    "description": "Product discount amount",
                    "type": "number"
                  },
                  "shipment_provider_code": {
                    "description": "Shipment provider code",
                    "enum": [
                      "mengantar",
                      "lincah",
                      "ninja"
                    ],
                    "nullable": true,
                    "type": "string"
                  },
                  "shipping_cost": {
                    "description": "Shipping cost",
                    "type": "number"
                  },
                  "shipping_discount": {
                    "description": "Shipping discount amount",
                    "type": "number"
                  },
                  "store_unique_id": {
                    "description": "Store unique ID",
                    "type": "string"
                  },
                  "sub_payment_method": {
                    "description": "Xendit VA bank code",
                    "enum": [
                      "BCA",
                      "BNI",
                      "BRI",
                      "MANDIRI",
                      "PERMATA",
                      "BSI",
                      "BJB",
                      "CIMB",
                      "SAHABAT_SAMPOERNA",
                      "ARTAJASA"
                    ],
                    "type": "string"
                  },
                  "transferproof_url": {
                    "description": "Transfer proof URL",
                    "type": "string"
                  },
                  "warehouse_unique_id": {
                    "description": "Warehouse unique ID",
                    "type": "string"
                  }
                },
                "required": [
                  "store_unique_id",
                  "customer_name"
                ],
                "title": "OrderCreateBody",
                "type": "object"
              }
            }
          },
          "description": "Order creation data",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "gross_revenue_for_dropshipper": {
                          "description": "Gross revenue for dropshipper after discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "advertiser": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "cogs": {
                          "description": "Cost of goods sold for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "dropshipper_name": {
                          "description": "Name of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "transferproof_url": {
                          "description": "Transfer proof URL",
                          "nullable": true,
                          "type": "string"
                        },
                        "scalev_fee": {
                          "description": "Scalev fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipment_status_history": {
                          "items": {
                            "properties": {
                              "description": {
                                "description": "Description of the status update",
                                "type": "string"
                              },
                              "status": {
                                "description": "Current status of the shipment",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the status update",
                                "format": "date-time",
                                "type": "string"
                              },
                              "timestamp_source": {
                                "description": "Source of the timestamp",
                                "type": "string"
                              }
                            },
                            "title": "ShipmentStatusHistory",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_code": {
                          "description": "Discount code used in the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "ready_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "warehouse": {
                          "properties": {
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "contact_name": {
                              "description": "Contact name at the warehouse",
                              "type": "string"
                            },
                            "contact_phone": {
                              "description": "Contact phone number at the warehouse",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the warehouse",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderWarehouse",
                          "type": "object"
                        },
                        "payment_fee_rate": {
                          "description": "Payment fee rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "pg_paid_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway paid info",
                          "nullable": true,
                          "type": "object"
                        },
                        "transfer_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "dropshipper_phone": {
                          "description": "Phone number of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipping_cost": {
                          "description": "Shipping cost for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_price": {
                          "description": "Total product price before discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "total_quantity": {
                          "description": "Total quantity of items in the order",
                          "type": "integer"
                        },
                        "net_revenue": {
                          "description": "Net revenue after all discounts and fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "bundle_price_options": {
                          "additionalProperties": true,
                          "description": "Bundle price options for the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "customer": {
                          "properties": {
                            "confirmed_at": {
                              "description": "Confirmation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "created_at": {
                              "description": "Creation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "email": {
                              "description": "Customer email",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Customer ID",
                              "type": "integer"
                            },
                            "last_updated_at": {
                              "description": "Last update timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "description": "Customer name",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Customer phone number",
                              "type": "string"
                            },
                            "status": {
                              "description": "Customer status",
                              "type": "string"
                            }
                          },
                          "title": "CustomerOrder",
                          "type": "object"
                        },
                        "variants": {
                          "additionalProperties": true,
                          "description": "Variants of the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "chat_message": {
                          "description": "Chat message associated with the order",
                          "type": "string"
                        },
                        "handler_phone": {
                          "description": "Handler phone number",
                          "nullable": true,
                          "type": "string"
                        },
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "order_emails": {
                          "description": "Order emails associated with the order",
                          "items": {
                            "properties": {
                              "from": {
                                "description": "Sender email address",
                                "type": "string"
                              },
                              "id": {
                                "description": "Order email ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Email creation timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "message_id": {
                                "description": "Message ID of the email",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Associated order primary key",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Email status",
                                "type": "string"
                              },
                              "status_history": {
                                "items": {
                                  "properties": {
                                    "status": {
                                      "description": "Email status",
                                      "type": "string"
                                    },
                                    "timestamp": {
                                      "description": "Timestamp of the status change",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "subject": {
                                "description": "Email subject",
                                "type": "string"
                              },
                              "to": {
                                "description": "Recipient email address",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the email",
                                "type": "string"
                              },
                              "updated_at": {
                                "description": "Last update timestamp of the email",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "OrderEmail",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "order_id": {
                          "description": "Order ID in string format",
                          "type": "string"
                        },
                        "product_discount": {
                          "description": "Total product discount applied",
                          "format": "decimal",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "handler": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "payment_account_number": {
                          "description": "Payment account number",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_method": {
                          "description": "Order payment method",
                          "enum": [
                            "gopay",
                            "va",
                            "qris",
                            "card",
                            "invoice",
                            "alfamart",
                            "ovo",
                            "dana",
                            "shopeepay",
                            "linkaja",
                            "no_payment",
                            "bank_transfer",
                            "marketplace",
                            "cod"
                          ],
                          "type": "string"
                        },
                        "courier": {
                          "description": "Courier ID for the order",
                          "nullable": true,
                          "type": "integer"
                        },
                        "origin_address": {
                          "properties": {
                            "address": {
                              "description": "Full address of the warehouse",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the warehouse address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "location_id": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "postal_code": {
                              "description": "Postal code of the warehouse address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the warehouse address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the warehouse address",
                              "type": "string"
                            },
                            "warehouse": {
                              "description": "ID of the associated warehouse",
                              "type": "integer"
                            }
                          },
                          "title": "WarehouseAddress",
                          "type": "object"
                        },
                        "epayment_provider": {
                          "description": "E-payment provider",
                          "nullable": true,
                          "type": "string"
                        },
                        "in_process_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "pg_reference_id": {
                          "description": "Payment gateway reference ID",
                          "nullable": true,
                          "type": "string"
                        },
                        "weight_bump": {
                          "description": "Weight bump added to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "follow_up_chat_type": {
                          "description": "Type of follow-up chat for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_status": {
                          "description": "Order AWB status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "platform": {
                          "description": "Platform of the order",
                          "type": "string"
                        },
                        "follow_up_chats": {
                          "items": {
                            "properties": {
                              "bundle_id": {
                                "description": "Bundle ID associated with the chat",
                                "type": "integer"
                              },
                              "change_status": {
                                "description": "Change status after follow up chat",
                                "type": "boolean"
                              },
                              "hours_after": {
                                "description": "Hours after which the follow up chat is triggered",
                                "type": "integer"
                              },
                              "id": {
                                "description": "Follow Up Chat ID",
                                "type": "integer"
                              },
                              "image": {
                                "description": "Image URL for the follow up chat",
                                "format": "uri",
                                "type": "string"
                              },
                              "is_default": {
                                "description": "Is this a default follow up chat?",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name of the follow up chat",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "Product ID associated with the chat",
                                "type": "integer"
                              },
                              "provider": {
                                "description": "Provider of the follow up chat service",
                                "type": "string"
                              },
                              "store_id": {
                                "description": "Store ID associated with the chat",
                                "type": "integer"
                              },
                              "trigger": {
                                "description": "Trigger condition for the follow up chat",
                                "type": "string"
                              }
                            },
                            "title": "FollowUpChat",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_purchase_kwai": {
                          "description": "Is this order a Kwai purchase",
                          "type": "boolean"
                        },
                        "shipping_discount": {
                          "description": "Shipping discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "conflict_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "paid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "confirmed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "canceled_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "status": {
                          "description": "Order status",
                          "enum": [
                            "draft",
                            "pending",
                            "confirmed",
                            "in_process",
                            "ready",
                            "shipped",
                            "completed",
                            "canceled",
                            "rts",
                            "closed"
                          ],
                          "type": "string"
                        },
                        "is_dropshipping": {
                          "description": "Is the order a dropshipping order",
                          "type": "boolean"
                        },
                        "payment_account_id": {
                          "description": "Payment account ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "is_repeat": {
                          "description": "Is repeat order",
                          "type": "boolean"
                        },
                        "tiktok_pixel_ids": {
                          "description": "TikTok pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "fb_pixel_ids": {
                          "description": "Facebook pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Order primary key",
                          "type": "integer"
                        },
                        "unpaid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "is_purchase_tiktok": {
                          "description": "Is this order a TikTok purchase",
                          "type": "boolean"
                        },
                        "orderlines": {
                          "items": {
                            "properties": {
                              "cogs": {
                                "description": "Cost of Goods Sold for this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "cogs_bt": {
                                "description": "COGS for this order line minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount": {
                                "description": "Discount amount applied",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_bt": {
                                "description": "Discount amount minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount": {
                                "description": "Discount from a discount code",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount_bt": {
                                "description": "Discount from a discount code minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_rate": {
                                "description": "Discount rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "id": {
                                "description": "Order Line ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the order line was created",
                                "example": "2023-10-01T12:00:00Z",
                                "format": "date-time",
                                "type": "string"
                              },
                              "is_inventory": {
                                "description": "Is this order line related to inventory?",
                                "type": "boolean"
                              },
                              "item_type": {
                                "description": "Type of the item",
                                "type": "string"
                              },
                              "product_business": {
                                "description": "Business ID of the product",
                                "type": "integer"
                              },
                              "product_name": {
                                "description": "Name of the product",
                                "type": "string"
                              },
                              "product_price": {
                                "description": "Price of the product before discounts",
                                "format": "float",
                                "type": "number"
                              },
                              "product_price_bt": {
                                "description": "Price of the product before discounts minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "quantity": {
                                "description": "Quantity of the item",
                                "type": "integer"
                              },
                              "reseller_product_price": {
                                "description": "Reseller price of the product",
                                "format": "float",
                                "type": "number"
                              },
                              "reseller_product_price_bt": {
                                "description": "Reseller price of the product minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "tax_rate": {
                                "description": "Tax rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "variant": {
                                "description": "Variant ID",
                                "type": "integer"
                              },
                              "variant_cogs": {
                                "description": "COGS of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_cogs_bt": {
                                "description": "COGS of the varian minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_option1_value": {
                                "description": "Value of option 1 for the variant",
                                "type": "string"
                              },
                              "variant_option2_value": {
                                "description": "Value of option 2 for the variant",
                                "type": "string"
                              },
                              "variant_option3_value": {
                                "description": "Value of option 3 for the variant",
                                "type": "string"
                              },
                              "variant_price": {
                                "description": "Price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_price_bt": {
                                "description": "Price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price": {
                                "description": "Reseller price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price_bt": {
                                "description": "Reseller price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_sku": {
                                "description": "SKU of the variant",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Weight of the product",
                                "format": "float",
                                "type": "number"
                              }
                            },
                            "title": "OrderLine",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "shipment_status": {
                          "description": "Current shipment status of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "kwai_pixel_ids": {
                          "description": "Kwai pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "cogs_bt": {
                          "description": "Cost of goods sold for the order minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "sub_payment_method": {
                          "description": "Xendit VA bank code",
                          "enum": [
                            "BCA",
                            "BNI",
                            "BRI",
                            "MANDIRI",
                            "PERMATA",
                            "BSI",
                            "BJB",
                            "CIMB",
                            "SAHABAT_SAMPOERNA",
                            "ARTAJASA"
                          ],
                          "type": "string"
                        },
                        "payment_fee": {
                          "description": "Payment fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "channel_name": {
                          "description": "Channel name of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_rate": {
                          "description": "Discount rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "final_variants": {
                          "additionalProperties": true,
                          "description": "Final variants of the order after bundle options",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_name": {
                          "description": "Name of other income source",
                          "nullable": true,
                          "type": "string"
                        },
                        "gross_revenue": {
                          "description": "Gross revenue of the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tags": {
                          "description": "Tags associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "discount_code_id": {
                          "description": "Discount code ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "other_income": {
                          "description": "Other income amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_weight": {
                          "description": "Total weight of the order including weight bump",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_probably_spam": {
                          "description": "Is probably spam",
                          "type": "boolean"
                        },
                        "external_id": {
                          "description": "External ID of the order",
                          "type": "string"
                        },
                        "payment_status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_discount": {
                          "description": "Discount code discount amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_discount_bt": {
                          "description": "Total product discount applied minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "store": {
                          "properties": {
                            "auto_expire_days": {
                              "description": "Days until auto-expire",
                              "type": "integer"
                            },
                            "auto_other_income": {
                              "description": "Is auto other income enabled?",
                              "type": "boolean"
                            },
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "capi_purchase_value_type": {
                              "description": "Type of CAPI purchase value",
                              "enum": [
                                "gross_revenue",
                                "net_revenue",
                                "adj_gross_revenue"
                              ],
                              "type": "string"
                            },
                            "cod_purchase_triggers": {
                              "description": "COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "dynamic_other_income_cod_default_amount": {
                              "description": "Default amount for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_default_percentage": {
                              "description": "Default percentage for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "dynamic_other_income_epayment_default_amount": {
                              "description": "Default amount for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_default_percentage": {
                              "description": "Default percentage for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "fixed_auto_other_income": {
                              "description": "Is fixed auto other income enabled?",
                              "type": "boolean"
                            },
                            "id": {
                              "description": "Store ID",
                              "type": "integer"
                            },
                            "is_active": {
                              "description": "Is the store active?",
                              "type": "boolean"
                            },
                            "is_auto_expire": {
                              "description": "Is auto-expire enabled?",
                              "type": "boolean"
                            },
                            "is_discount_editable": {
                              "description": "Is discount editable?",
                              "type": "boolean"
                            },
                            "is_dropshipping_allowed": {
                              "description": "Is dropshipping allowed in this store?",
                              "type": "boolean"
                            },
                            "is_moota_enabled": {
                              "description": "Is Moota integration enabled for this store?",
                              "type": "boolean"
                            },
                            "is_postal_code": {
                              "description": "Is postal code required for orders?",
                              "type": "boolean"
                            },
                            "is_transferproof_required": {
                              "description": "Is transfer proof required for orders in this store?",
                              "type": "boolean"
                            },
                            "is_unique_code": {
                              "description": "Is unique code required for orders?",
                              "type": "boolean"
                            },
                            "is_use_waba": {
                              "description": "Is WABA integration enabled?",
                              "type": "boolean"
                            },
                            "max_unique_code_amount": {
                              "description": "Maximum amount for unique code orders",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the store",
                              "type": "string"
                            },
                            "non_cod_purchase_triggers": {
                              "description": "Non-COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "other_income_name": {
                              "description": "Name of the other income",
                              "type": "string"
                            },
                            "postal_code_requirement": {
                              "description": "Postal code requirement options",
                              "enum": [
                                "autofill",
                                "manual"
                              ],
                              "type": "string"
                            },
                            "store_courier_other_incomes": {
                              "description": "Other incomes for store couriers",
                              "items": {
                                "description": "Store Courier Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "courier_id": {
                                    "description": "Courier ID",
                                    "type": "integer"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "type": {
                                    "description": "Type of other income",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "courier_id",
                                  "type"
                                ],
                                "title": "StoreCourierOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "store_method_other_incomes": {
                              "description": "Other incomes for store methods",
                              "items": {
                                "description": "Store Payment Method Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "payment_method": {
                                    "description": "Payment Method",
                                    "type": "string"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "sub_payment_method": {
                                    "description": "Sub Payment Method",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type of amount (fixed or percentage)",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "payment_method",
                                  "type"
                                ],
                                "title": "StorePaymentMethodOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "sub_payment_methods": {
                              "description": "Xendit VA bank codes",
                              "items": {
                                "description": "Xendit VA bank code",
                                "enum": [
                                  "BCA",
                                  "BNI",
                                  "BRI",
                                  "MANDIRI",
                                  "PERMATA",
                                  "BSI",
                                  "BJB",
                                  "CIMB",
                                  "SAHABAT_SAMPOERNA",
                                  "ARTAJASA"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the store",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "UUID of the store",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderStore",
                          "type": "object"
                        },
                        "pg_payment_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway payment info",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_bt": {
                          "description": "Other income amount minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "courier_service": {
                          "properties": {
                            "code": {
                              "description": "Code for the courier service",
                              "type": "string"
                            },
                            "code_co": {
                              "description": "Code for CO courier service",
                              "type": "string"
                            },
                            "code_ka": {
                              "description": "Code for KA courier service",
                              "type": "string"
                            },
                            "code_lincah": {
                              "description": "Code for Lincah courier service",
                              "type": "string"
                            },
                            "code_mengantar": {
                              "description": "Code for Mengantar courier service",
                              "type": "string"
                            },
                            "code_ro": {
                              "description": "Code for RO courier service",
                              "type": "string"
                            },
                            "courier": {
                              "properties": {
                                "code": {
                                  "description": "Courier code",
                                  "type": "string"
                                },
                                "code_ka": {
                                  "description": "Courier code in Georgian",
                                  "type": "string"
                                },
                                "code_lincah": {
                                  "description": "Courier code in Lincah",
                                  "type": "string"
                                },
                                "code_mengantar": {
                                  "description": "Courier code for Mengantar",
                                  "type": "string"
                                },
                                "code_ro": {
                                  "description": "Courier code in Romanian",
                                  "type": "string"
                                },
                                "courier_type": {
                                  "description": "Type of the courier",
                                  "enum": [
                                    "delivery",
                                    "pickup"
                                  ],
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Courier ID",
                                  "type": "integer"
                                },
                                "is_pickup": {
                                  "description": "Is this a pickup courier?",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "Courier name",
                                  "type": "string"
                                }
                              },
                              "title": "Courier",
                              "type": "object"
                            },
                            "id": {
                              "description": "Courier Service ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the courier service",
                              "type": "string"
                            }
                          },
                          "title": "CourierService",
                          "type": "object"
                        },
                        "mark_as_spam_by": {
                          "description": "Who marked as spam",
                          "type": "string"
                        },
                        "net_payment_revenue": {
                          "description": "Net payment revenue after fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "rts_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "min_payment_fee": {
                          "description": "Minimum payment fee applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "analytics_purchases": {
                          "description": "Analytics purchases associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Analytics Purchase ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the analytics purchase was created",
                                "format": "date-time",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Order ID associated with the analytics purchase",
                                "type": "integer"
                              },
                              "payload": {
                                "additionalProperties": true,
                                "description": "Payload data of the analytics purchase",
                                "type": "object"
                              },
                              "pixel_id": {
                                "description": "Pixel ID associated with the purchase",
                                "type": "string"
                              },
                              "platform": {
                                "description": "Platform of the analytics purchase",
                                "type": "string"
                              },
                              "response": {
                                "additionalProperties": true,
                                "description": "Response data from the analytics purchase",
                                "type": "object"
                              },
                              "updated_at": {
                                "description": "Timestamp when the analytics purchase was last updated",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "AnalyticsPurchase",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_from_form": {
                          "description": "Is from form submission",
                          "type": "boolean"
                        },
                        "secret_slug": {
                          "description": "Secret slug of the order",
                          "type": "string"
                        },
                        "shipping_fee": {
                          "description": "Shipping fee charged for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tax_rate": {
                          "description": "Tax rate applied to the order",
                          "format": "float",
                          "nullable": true,
                          "type": "number"
                        },
                        "draft_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "last_updated_at": {
                          "description": "Last updated timestamp of the order",
                          "format": "date-time",
                          "type": "string"
                        },
                        "courier_additional_info": {
                          "description": "Additional information for the courier",
                          "nullable": true,
                          "type": "string"
                        },
                        "closed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "financial_entity": {
                          "properties": {
                            "code": {
                              "description": "Code of the financial entity",
                              "type": "string"
                            },
                            "duitku_code": {
                              "description": "Duitku code for the financial entity",
                              "type": "string"
                            },
                            "entity_type": {
                              "description": "Type of the financial entity",
                              "type": "string"
                            },
                            "id": {
                              "description": "Financial Entity ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the financial entity",
                              "type": "string"
                            },
                            "platform": {
                              "description": "Platform associated with the financial entity",
                              "type": "string"
                            },
                            "xendit_code": {
                              "description": "Xendit code for the financial entity",
                              "type": "string"
                            }
                          },
                          "title": "FinancialEntity",
                          "type": "object"
                        },
                        "page": {
                          "properties": {
                            "id": {
                              "description": "Page ID",
                              "type": "integer"
                            },
                            "is_published": {
                              "description": "Is the page published?",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Name of the page",
                              "type": "string"
                            },
                            "published_at": {
                              "description": "Publication date of the page",
                              "format": "date-time",
                              "type": "string"
                            },
                            "slug": {
                              "description": "Slug for the page URL",
                              "type": "string"
                            },
                            "store_id": {
                              "description": "ID of the store the page belongs to",
                              "type": "integer"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the page",
                              "type": "string"
                            }
                          },
                          "title": "PageSimple",
                          "type": "object"
                        },
                        "product_price_bt": {
                          "description": "Total product price before discounts minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_purchase_fb": {
                          "description": "Is this order a Facebook purchase",
                          "type": "boolean"
                        },
                        "product_weight": {
                          "description": "Total weight of products in the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "completed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "utm_source": {
                          "description": "UTM source of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_account_holder": {
                          "description": "Payment account holder name",
                          "nullable": true,
                          "type": "string"
                        },
                        "ip": {
                          "description": "IP address of the customer who placed the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipment_receipt": {
                          "description": "Shipment receipt URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "message_history": {
                          "description": "Message history associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "ID of the Follow Up Chat",
                                "type": "integer"
                              },
                              "is_from_bot": {
                                "description": "Is the message from bot",
                                "type": "boolean"
                              },
                              "message": {
                                "description": "Message content",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the sender",
                                "type": "string"
                              },
                              "provider": {
                                "description": "Message provider",
                                "type": "string"
                              },
                              "recipient_name": {
                                "description": "Recipient name",
                                "type": "string"
                              },
                              "recipient_phone": {
                                "description": "Recipient phone number",
                                "type": "string"
                              },
                              "sender_name": {
                                "description": "Sender name",
                                "type": "string"
                              },
                              "sender_phone": {
                                "description": "Sender phone number",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the message",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "MessageHistoryItem",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "payment_status": {
                          "description": "Order payment status",
                          "enum": [
                            "unpaid",
                            "paid",
                            "conflict",
                            "settled"
                          ],
                          "type": "string"
                        },
                        "shipment_provider_code": {
                          "description": "Shipment provider code",
                          "enum": [
                            "mengantar",
                            "lincah",
                            "ninja"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Metadata associated with the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "rtsproof_url": {
                          "description": "RTS proof URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_code_applied_to": {
                          "description": "What the discount code was applied to",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipped_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_ca_status": {
                          "description": "Order AWB courier aggregator status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "created_at": {
                          "description": "Order creation timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "pending_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "notes": {
                          "description": "Notes or comments for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "destination_address": {
                          "properties": {
                            "address": {
                              "description": "Full address",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Order Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the recipient",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Phone number of the recipient",
                              "type": "string"
                            },
                            "postal_code": {
                              "description": "Postal code of the address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the address",
                              "type": "string"
                            }
                          },
                          "title": "OrderAddress",
                          "type": "object"
                        },
                        "unique_code_discount": {
                          "description": "Unique code discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipping_fee_discount": {
                          "description": "Shipping fee discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        }
                      },
                      "title": "Order",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Order created successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "add_order"
            ]
          }
        ],
        "summary": "Create a new order",
        "tags": [
          "Orders"
        ]
      },
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of orders with optional filtering. The data is sorted by created_at in descending order and cannot be changed. Uses cursor-based pagination with default page size of 25 and maximum of 25.",
        "operationId": "ScalevApiWeb.OrderViewController.index",
        "parameters": [
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          },
          {
            "description": "Last order ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term to filter orders by order ID, customer name, email, or phone number",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter spam orders",
            "in": "query",
            "name": "is_probably_spam",
            "required": false,
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter by business role",
            "in": "query",
            "name": "business_role",
            "required": false,
            "schema": {
              "enum": [
                "retailer",
                "fulfillment_provider"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter orders by draft time until (ISO 8601 format)",
            "in": "query",
            "name": "draft_time_until",
            "required": false,
            "schema": {
              "format": "datetime",
              "type": "string"
            }
          },
          {
            "description": "Filter orders by confirmed time since (ISO 8601 format)",
            "in": "query",
            "name": "confirmed_time_since",
            "required": false,
            "schema": {
              "format": "datetime",
              "type": "string"
            }
          },
          {
            "description": "Filter orders by confirmed time until (ISO 8601 format)",
            "in": "query",
            "name": "confirmed_time_until",
            "required": false,
            "schema": {
              "format": "datetime",
              "type": "string"
            }
          },
          {
            "description": "Filter orders by shipped time since (ISO 8601 format)",
            "in": "query",
            "name": "shipped_time_since",
            "required": false,
            "schema": {
              "format": "datetime",
              "type": "string"
            }
          },
          {
            "description": "Filter orders by shipped time until (ISO 8601 format)",
            "in": "query",
            "name": "shipped_time_until",
            "required": false,
            "schema": {
              "format": "datetime",
              "type": "string"
            }
          },
          {
            "description": "Filter orders by completed time since (ISO 8601 format)",
            "in": "query",
            "name": "completed_time_since",
            "required": false,
            "schema": {
              "format": "datetime",
              "type": "string"
            }
          },
          {
            "description": "Filter orders by completed time until (ISO 8601 format)",
            "in": "query",
            "name": "completed_time_until",
            "required": false,
            "schema": {
              "format": "datetime",
              "type": "string"
            }
          },
          {
            "description": "Filter orders created from a form",
            "in": "query",
            "name": "is_from_form",
            "required": false,
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter repeat orders",
            "in": "query",
            "name": "is_repeat",
            "required": false,
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "description": "Comma-separated list of tags to filter orders",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter orders containing a specific product ID",
            "in": "query",
            "name": "product_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter orders with transfer proof",
            "in": "query",
            "name": "is_transferproof_exist",
            "required": false,
            "schema": {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter orders by specific order ID",
            "in": "query",
            "name": "order_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter orders by AWB status",
            "in": "query",
            "name": "awb_ca_status",
            "required": false,
            "schema": {
              "enum": [
                "unavailable",
                "pending",
                "waiting",
                "failed",
                "created",
                "canceled"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter orders by status",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "enum": [
                "draft",
                "pending",
                "confirmed",
                "in_process",
                "ready",
                "canceled",
                "shipped",
                "shipped_rts",
                "completed",
                "rts",
                "closed"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter orders by payment status",
            "in": "query",
            "name": "payment_status",
            "required": false,
            "schema": {
              "enum": [
                "paid",
                "unpaid",
                "conflict",
                "settled"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter orders by payment method",
            "in": "query",
            "name": "payment_method",
            "required": false,
            "schema": {
              "enum": [
                "no_payment",
                "bank_transfer",
                "marketplace",
                "va",
                "qris",
                "ewallet",
                "cod",
                "card",
                "gopay",
                "invoice",
                "alfamart",
                "ovo",
                "dana",
                "shopeepay",
                "linkaja"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter orders by shipment status",
            "in": "query",
            "name": "shipment_status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter orders by business ID",
            "in": "query",
            "name": "business_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter orders by store ID",
            "in": "query",
            "name": "store_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter orders by warehouse ID",
            "in": "query",
            "name": "warehouse_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter orders by courier ID",
            "in": "query",
            "name": "courier_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter orders by handler ID",
            "in": "query",
            "name": "handler_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter orders by advertiser ID",
            "in": "query",
            "name": "advertiser_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter orders by platform",
            "in": "query",
            "name": "platform",
            "required": false,
            "schema": {
              "enum": [
                "scalev",
                "tiktokshop",
                "tokopedia",
                "shopee",
                "lazada",
                "blibli",
                "bukalapak",
                "orderonline",
                "berdu"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter orders by financial entity ID",
            "in": "query",
            "name": "financial_entity_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter orders by page ID",
            "in": "query",
            "name": "page_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter orders by external ID",
            "in": "query",
            "name": "external_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter orders by UTM source",
            "in": "query",
            "name": "utm_source",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Comma-separated list of columns to include. Available columns: secret_slug, final_variants, store, origin_address, address_location, handler_phone, order_id, destination_address, quantity, product_price, total_weight, courier_service, shipping_cost, payment_method, gross_revenue, shipment_receipt, courier_additional_info, payment_status, status, customer, draft_time, orderlines, is_dropshipping, dropshipper_name, dropshipper_phone, unique_code_discount, tags, awb_status, awb_ca_status, follow_up_chats, follow_up_chat_type, message_history, metadata, notes, courier_aggregator_code, shipment_account, payment_account, financial_entity, payment_account_holder, payment_account_number, transferproof_url, transfer_time, product_discount, shipping_discount, other_income, other_income_name, shipment_status, is_repeat, platform, external_id, is_purchase_fb, is_purchase_tiktok, is_purchase_kwai, fb_pixel_ids, tiktok_pixel_ids, kwai_pixel_ids, pending_time, confirmed_time, shipped_time, completed_time, rts_time, canceled_time, closed_time, warehouse, page, channel_name, handler, advertiser, pg_payment_info, sub_payment_method, epayment_provider, invoice_url, pg_reference_id, net_revenue, payment_fee, scalev_fee, net_payment_revenue, discount_code_discount, discount_code_code, discount_code_applied_to, utm_source",
            "in": "query",
            "name": "columns",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "description": "Order data based on requested columns",
                            "properties": {
                              "advertiser": {
                                "properties": {
                                  "aff_code": {
                                    "description": "Affiliate code of the user",
                                    "type": "string"
                                  },
                                  "avatar": {
                                    "description": "URL to user avatar",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "User email",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "fullname": {
                                    "description": "User full name",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "User ID",
                                    "type": "integer"
                                  },
                                  "phone": {
                                    "description": "User phone number",
                                    "type": "string"
                                  }
                                },
                                "title": "UserSimple",
                                "type": "object"
                              },
                              "dropshipper_name": {
                                "description": "Dropshipper name",
                                "nullable": true,
                                "type": "string"
                              },
                              "transferproof_url": {
                                "description": "Transfer proof URL",
                                "nullable": true,
                                "type": "string"
                              },
                              "scalev_fee": {
                                "description": "Scalev fee associated with the order",
                                "type": "number"
                              },
                              "discount_code_code": {
                                "description": "Discount code used in the order",
                                "nullable": true,
                                "type": "string"
                              },
                              "warehouse": {
                                "properties": {
                                  "business": {
                                    "properties": {
                                      "account_holder": {
                                        "description": "Name of the account holder",
                                        "type": "string"
                                      },
                                      "email": {
                                        "description": "Email address of the business",
                                        "format": "email",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Business ID",
                                        "type": "integer"
                                      },
                                      "is_banned": {
                                        "description": "Is the business banned?",
                                        "type": "boolean"
                                      },
                                      "logo": {
                                        "description": "URL to the business logo",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "unique_id": {
                                        "description": "Unique identifier for the business",
                                        "type": "string"
                                      },
                                      "username": {
                                        "description": "Username of the business",
                                        "type": "string"
                                      }
                                    },
                                    "title": "BusinessSimple",
                                    "type": "object"
                                  },
                                  "contact_name": {
                                    "description": "Contact name at the warehouse",
                                    "type": "string"
                                  },
                                  "contact_phone": {
                                    "description": "Contact phone number at the warehouse",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Warehouse ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the warehouse",
                                    "type": "string"
                                  }
                                },
                                "title": "ForOrderWarehouse",
                                "type": "object"
                              },
                              "transfer_time": {
                                "description": "Transfer timestamp of the order",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "dropshipper_phone": {
                                "description": "Dropshipper phone number",
                                "nullable": true,
                                "type": "string"
                              },
                              "shipping_cost": {
                                "description": "Shipping cost associated with the order",
                                "type": "number"
                              },
                              "product_price": {
                                "description": "Total product price before discounts",
                                "type": "number"
                              },
                              "net_revenue": {
                                "description": "Net revenue from the order",
                                "type": "number"
                              },
                              "customer": {
                                "properties": {
                                  "confirmed_at": {
                                    "description": "Confirmation timestamp",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "description": "Creation timestamp",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "Customer email",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Customer ID",
                                    "type": "integer"
                                  },
                                  "last_updated_at": {
                                    "description": "Last update timestamp",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Customer name",
                                    "type": "string"
                                  },
                                  "phone": {
                                    "description": "Customer phone number",
                                    "type": "string"
                                  },
                                  "status": {
                                    "description": "Customer status",
                                    "type": "string"
                                  }
                                },
                                "title": "CustomerOrder",
                                "type": "object"
                              },
                              "handler_phone": {
                                "description": "Handler phone number",
                                "nullable": true,
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Order ID in string format",
                                "type": "string"
                              },
                              "product_discount": {
                                "description": "Total product discount applied to the order",
                                "type": "number"
                              },
                              "handler": {
                                "properties": {
                                  "aff_code": {
                                    "description": "Affiliate code of the user",
                                    "type": "string"
                                  },
                                  "avatar": {
                                    "description": "URL to user avatar",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "User email",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "fullname": {
                                    "description": "User full name",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "User ID",
                                    "type": "integer"
                                  },
                                  "phone": {
                                    "description": "User phone number",
                                    "type": "string"
                                  }
                                },
                                "title": "UserSimple",
                                "type": "object"
                              },
                              "payment_account_number": {
                                "description": "Payment account number",
                                "nullable": true,
                                "type": "string"
                              },
                              "payment_method": {
                                "description": "Order payment method",
                                "enum": [
                                  "gopay",
                                  "va",
                                  "qris",
                                  "card",
                                  "invoice",
                                  "alfamart",
                                  "ovo",
                                  "dana",
                                  "shopeepay",
                                  "linkaja",
                                  "no_payment",
                                  "bank_transfer",
                                  "marketplace",
                                  "cod"
                                ],
                                "type": "string"
                              },
                              "origin_address": {
                                "properties": {
                                  "address": {
                                    "description": "Full address of the warehouse",
                                    "type": "string"
                                  },
                                  "city": {
                                    "description": "City of the warehouse address",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Warehouse Address ID",
                                    "type": "integer"
                                  },
                                  "location": {
                                    "description": "Location ID for the address",
                                    "type": "integer"
                                  },
                                  "location_id": {
                                    "description": "Location ID for the address",
                                    "type": "integer"
                                  },
                                  "postal_code": {
                                    "description": "Postal code of the warehouse address",
                                    "type": "string"
                                  },
                                  "province": {
                                    "description": "Province of the warehouse address",
                                    "type": "string"
                                  },
                                  "subdistrict": {
                                    "description": "Subdistrict of the warehouse address",
                                    "type": "string"
                                  },
                                  "warehouse": {
                                    "description": "ID of the associated warehouse",
                                    "type": "integer"
                                  }
                                },
                                "title": "WarehouseAddress",
                                "type": "object"
                              },
                              "epayment_provider": {
                                "description": "E-payment provider",
                                "nullable": true,
                                "type": "string"
                              },
                              "pg_reference_id": {
                                "description": "Payment gateway reference ID",
                                "nullable": true,
                                "type": "string"
                              },
                              "follow_up_chat_type": {
                                "description": "Type of follow up chat",
                                "enum": [
                                  "product",
                                  "order"
                                ],
                                "type": "string"
                              },
                              "awb_status": {
                                "description": "Order AWB status",
                                "enum": [
                                  "unavailable",
                                  "pending",
                                  "waiting",
                                  "failed",
                                  "created",
                                  "canceled"
                                ],
                                "type": "string"
                              },
                              "platform": {
                                "description": "Platform where the order was placed",
                                "type": "string"
                              },
                              "follow_up_chats": {
                                "description": "Follow up chats associated with the order",
                                "items": {
                                  "properties": {
                                    "bundle_id": {
                                      "description": "Bundle ID associated with the chat",
                                      "type": "integer"
                                    },
                                    "change_status": {
                                      "description": "Change status after follow up chat",
                                      "type": "boolean"
                                    },
                                    "hours_after": {
                                      "description": "Hours after which the follow up chat is triggered",
                                      "type": "integer"
                                    },
                                    "id": {
                                      "description": "Follow Up Chat ID",
                                      "type": "integer"
                                    },
                                    "image": {
                                      "description": "Image URL for the follow up chat",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "is_default": {
                                      "description": "Is this a default follow up chat?",
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "description": "Name of the follow up chat",
                                      "type": "string"
                                    },
                                    "product_id": {
                                      "description": "Product ID associated with the chat",
                                      "type": "integer"
                                    },
                                    "provider": {
                                      "description": "Provider of the follow up chat service",
                                      "type": "string"
                                    },
                                    "store_id": {
                                      "description": "Store ID associated with the chat",
                                      "type": "integer"
                                    },
                                    "trigger": {
                                      "description": "Trigger condition for the follow up chat",
                                      "type": "string"
                                    }
                                  },
                                  "title": "FollowUpChat",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "is_purchase_kwai": {
                                "description": "Is the order a Kwai purchase",
                                "type": "boolean"
                              },
                              "shipping_discount": {
                                "description": "Shipping discount applied to the order",
                                "type": "number"
                              },
                              "confirmed_time": {
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "canceled_time": {
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "is_dropshipping": {
                                "description": "Is the order a dropshipping order",
                                "type": "boolean"
                              },
                              "payment_account_id": {
                                "description": "Payment account ID",
                                "nullable": true,
                                "type": "integer"
                              },
                              "is_repeat": {
                                "description": "Is the order a repeat order",
                                "type": "boolean"
                              },
                              "tiktok_pixel_ids": {
                                "items": {
                                  "description": "TikTok Pixel ID",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "fb_pixel_ids": {
                                "items": {
                                  "description": "Facebook Pixel ID",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "id": {
                                "description": "Order primary key",
                                "type": "integer"
                              },
                              "is_purchase_tiktok": {
                                "description": "Is the order a TikTok purchase",
                                "type": "boolean"
                              },
                              "shipment_status": {
                                "description": "Current shipment status of the order",
                                "nullable": true,
                                "type": "string"
                              },
                              "kwai_pixel_ids": {
                                "items": {
                                  "description": "Kwai Pixel ID",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "sub_payment_method": {
                                "description": "Xendit VA bank code",
                                "enum": [
                                  "BCA",
                                  "BNI",
                                  "BRI",
                                  "MANDIRI",
                                  "PERMATA",
                                  "BSI",
                                  "BJB",
                                  "CIMB",
                                  "SAHABAT_SAMPOERNA",
                                  "ARTAJASA"
                                ],
                                "type": "string"
                              },
                              "payment_fee": {
                                "description": "Payment fee associated with the order",
                                "type": "number"
                              },
                              "channel_name": {
                                "description": "Channel name",
                                "nullable": true,
                                "type": "string"
                              },
                              "final_variants": {
                                "additionalProperties": {
                                  "description": "Final variant quantity",
                                  "type": "integer"
                                },
                                "type": "object"
                              },
                              "other_income_name": {
                                "description": "Name of the other income",
                                "nullable": true,
                                "type": "string"
                              },
                              "gross_revenue": {
                                "description": "Gross revenue from the order",
                                "format": "decimal",
                                "type": "string"
                              },
                              "tags": {
                                "description": "Tags associated with the order",
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Tag ID",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "description": "Tag Name",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Tag",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "other_income": {
                                "description": "Other income associated with the order",
                                "type": "number"
                              },
                              "total_weight": {
                                "description": "Total weight of the order",
                                "type": "number"
                              },
                              "is_probably_spam": {
                                "description": "Is the order probably spam",
                                "type": "boolean"
                              },
                              "external_id": {
                                "description": "External ID for the order",
                                "nullable": true,
                                "type": "string"
                              },
                              "discount_code_discount": {
                                "description": "Discount amount from the discount code",
                                "format": "decimal",
                                "type": "string"
                              },
                              "store": {
                                "properties": {
                                  "business": {
                                    "properties": {
                                      "account_holder": {
                                        "description": "Name of the account holder",
                                        "type": "string"
                                      },
                                      "email": {
                                        "description": "Email address of the business",
                                        "format": "email",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Business ID",
                                        "type": "integer"
                                      },
                                      "is_banned": {
                                        "description": "Is the business banned?",
                                        "type": "boolean"
                                      },
                                      "logo": {
                                        "description": "URL to the business logo",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "unique_id": {
                                        "description": "Unique identifier for the business",
                                        "type": "string"
                                      },
                                      "username": {
                                        "description": "Username of the business",
                                        "type": "string"
                                      }
                                    },
                                    "title": "BusinessSimple",
                                    "type": "object"
                                  },
                                  "id": {
                                    "description": "Store ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the store",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the store",
                                    "type": "string"
                                  },
                                  "uuid": {
                                    "description": "UUID of the store",
                                    "type": "string"
                                  }
                                },
                                "title": "SimpleForOrderStore",
                                "type": "object"
                              },
                              "pg_payment_info": {
                                "additionalProperties": true,
                                "description": "Payment gateway payment info",
                                "nullable": true,
                                "type": "object"
                              },
                              "courier_service": {
                                "properties": {
                                  "code": {
                                    "description": "Code for the courier service",
                                    "type": "string"
                                  },
                                  "code_co": {
                                    "description": "Code for CO courier service",
                                    "type": "string"
                                  },
                                  "code_ka": {
                                    "description": "Code for KA courier service",
                                    "type": "string"
                                  },
                                  "code_lincah": {
                                    "description": "Code for Lincah courier service",
                                    "type": "string"
                                  },
                                  "code_mengantar": {
                                    "description": "Code for Mengantar courier service",
                                    "type": "string"
                                  },
                                  "code_ro": {
                                    "description": "Code for RO courier service",
                                    "type": "string"
                                  },
                                  "courier": {
                                    "properties": {
                                      "code": {
                                        "description": "Courier code",
                                        "type": "string"
                                      },
                                      "code_ka": {
                                        "description": "Courier code in Georgian",
                                        "type": "string"
                                      },
                                      "code_lincah": {
                                        "description": "Courier code in Lincah",
                                        "type": "string"
                                      },
                                      "code_mengantar": {
                                        "description": "Courier code for Mengantar",
                                        "type": "string"
                                      },
                                      "code_ro": {
                                        "description": "Courier code in Romanian",
                                        "type": "string"
                                      },
                                      "courier_type": {
                                        "description": "Type of the courier",
                                        "enum": [
                                          "delivery",
                                          "pickup"
                                        ],
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Courier ID",
                                        "type": "integer"
                                      },
                                      "is_pickup": {
                                        "description": "Is this a pickup courier?",
                                        "type": "boolean"
                                      },
                                      "name": {
                                        "description": "Courier name",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Courier",
                                    "type": "object"
                                  },
                                  "id": {
                                    "description": "Courier Service ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the courier service",
                                    "type": "string"
                                  }
                                },
                                "title": "CourierService",
                                "type": "object"
                              },
                              "mark_as_spam_by": {
                                "description": "Who marked the order as spam",
                                "nullable": true,
                                "type": "string"
                              },
                              "net_payment_revenue": {
                                "description": "Net payment revenue from the order",
                                "format": "decimal",
                                "type": "string"
                              },
                              "rts_time": {
                                "description": "Ready to ship timestamp",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "secret_slug": {
                                "description": "Secret slug for the order",
                                "nullable": true,
                                "type": "string"
                              },
                              "draft_time": {
                                "description": "Draft timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "last_updated_at": {
                                "description": "Last updated timestamp of the order",
                                "format": "date-time",
                                "type": "string"
                              },
                              "courier_additional_info": {
                                "description": "Additional courier information",
                                "nullable": true,
                                "type": "string"
                              },
                              "closed_time": {
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "financial_entity": {
                                "properties": {
                                  "code": {
                                    "description": "Code of the financial entity",
                                    "type": "string"
                                  },
                                  "duitku_code": {
                                    "description": "Duitku code for the financial entity",
                                    "type": "string"
                                  },
                                  "entity_type": {
                                    "description": "Type of the financial entity",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Financial Entity ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the financial entity",
                                    "type": "string"
                                  },
                                  "platform": {
                                    "description": "Platform associated with the financial entity",
                                    "type": "string"
                                  },
                                  "xendit_code": {
                                    "description": "Xendit code for the financial entity",
                                    "type": "string"
                                  }
                                },
                                "title": "FinancialEntity",
                                "type": "object"
                              },
                              "page": {
                                "properties": {
                                  "id": {
                                    "description": "Page ID",
                                    "type": "integer"
                                  },
                                  "is_published": {
                                    "description": "Is the page published?",
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "description": "Name of the page",
                                    "type": "string"
                                  },
                                  "published_at": {
                                    "description": "Publication date of the page",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "slug": {
                                    "description": "Slug for the page URL",
                                    "type": "string"
                                  },
                                  "store_id": {
                                    "description": "ID of the store the page belongs to",
                                    "type": "integer"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the page",
                                    "type": "string"
                                  }
                                },
                                "title": "PageSimple",
                                "type": "object"
                              },
                              "is_purchase_fb": {
                                "description": "Is the order a Facebook purchase",
                                "type": "boolean"
                              },
                              "completed_time": {
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "utm_source": {
                                "description": "UTM source for tracking",
                                "nullable": true,
                                "type": "string"
                              },
                              "payment_account_holder": {
                                "description": "Payment account holder name",
                                "nullable": true,
                                "type": "string"
                              },
                              "shipment_receipt": {
                                "description": "Shipment receipt URL",
                                "nullable": true,
                                "type": "string"
                              },
                              "message_history": {
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "ID of the Follow Up Chat",
                                      "type": "integer"
                                    },
                                    "is_from_bot": {
                                      "description": "Is the message from bot",
                                      "type": "boolean"
                                    },
                                    "message": {
                                      "description": "Message content",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the sender",
                                      "type": "string"
                                    },
                                    "provider": {
                                      "description": "Message provider",
                                      "type": "string"
                                    },
                                    "recipient_name": {
                                      "description": "Recipient name",
                                      "type": "string"
                                    },
                                    "recipient_phone": {
                                      "description": "Recipient phone number",
                                      "type": "string"
                                    },
                                    "sender_name": {
                                      "description": "Sender name",
                                      "type": "string"
                                    },
                                    "sender_phone": {
                                      "description": "Sender phone number",
                                      "type": "string"
                                    },
                                    "timestamp": {
                                      "description": "Timestamp of the message",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "title": "MessageHistoryItem",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "payment_status": {
                                "description": "Order payment status",
                                "enum": [
                                  "unpaid",
                                  "paid",
                                  "conflict",
                                  "settled"
                                ],
                                "type": "string"
                              },
                              "shipment_provider_code": {
                                "description": "Shipment provider code",
                                "enum": [
                                  "mengantar",
                                  "lincah",
                                  "ninja"
                                ],
                                "nullable": true,
                                "type": "string"
                              },
                              "metadata": {
                                "additionalProperties": true,
                                "description": "Metadata associated with the order",
                                "type": "object"
                              },
                              "discount_code_applied_to": {
                                "description": "Discount code applied to the order",
                                "nullable": true,
                                "type": "string"
                              },
                              "shipped_time": {
                                "description": "Shipped timestamp of the order",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "awb_ca_status": {
                                "description": "Order AWB courier aggregator status",
                                "enum": [
                                  "unavailable",
                                  "pending",
                                  "waiting",
                                  "failed",
                                  "created",
                                  "canceled"
                                ],
                                "type": "string"
                              },
                              "created_at": {
                                "description": "Order creation timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "pending_time": {
                                "description": "Pending timestamp of the order",
                                "format": "date-time",
                                "type": "string"
                              },
                              "notes": {
                                "description": "Notes associated with the order",
                                "nullable": true,
                                "type": "string"
                              },
                              "destination_address": {
                                "properties": {
                                  "address": {
                                    "description": "Full address",
                                    "type": "string"
                                  },
                                  "city": {
                                    "description": "City of the address",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Order Address ID",
                                    "type": "integer"
                                  },
                                  "location": {
                                    "description": "Location ID for the address",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the recipient",
                                    "type": "string"
                                  },
                                  "phone": {
                                    "description": "Phone number of the recipient",
                                    "type": "string"
                                  },
                                  "postal_code": {
                                    "description": "Postal code of the address",
                                    "type": "string"
                                  },
                                  "province": {
                                    "description": "Province of the address",
                                    "type": "string"
                                  },
                                  "subdistrict": {
                                    "description": "Subdistrict of the address",
                                    "type": "string"
                                  }
                                },
                                "title": "OrderAddress",
                                "type": "object"
                              },
                              "unique_code_discount": {
                                "description": "Discount from unique code applied to the order",
                                "type": "number"
                              }
                            },
                            "title": "OrderList",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Orders list with pagination"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_order"
            ]
          }
        ],
        "summary": "List orders with pagination",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/cancel-awb": {
      "post": {
        "callbacks": {},
        "description": "Cancel Air Waybill for multiple orders.",
        "operationId": "ScalevApiWeb.OrderController.cancel_awb",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ids": {
                    "description": "Order primary keys to cancel AWB",
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "ids"
                ],
                "type": "object"
              }
            }
          },
          "description": "AWB cancellation data",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "failures": {
                          "properties": {
                            "ORDER_ID": {
                              "description": "Error message for the order with this ID",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "successes": {
                          "properties": {
                            "ORDER_ID": {
                              "description": "Message or shipment receipt or tracking ID for the order with this ID",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "title": "GenerateOrCancelAWB",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "AWB cancelled successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "create_awb"
            ]
          }
        ],
        "summary": "Cancel AWB for orders",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/change-status": {
      "post": {
        "callbacks": {},
        "description": "Change the status of multiple orders.",
        "operationId": "ScalevApiWeb.OrderController.change_status",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "required": [
                      "ids",
                      "status"
                    ]
                  },
                  {
                    "required": [
                      "ids",
                      "payment_status"
                    ]
                  }
                ],
                "properties": {
                  "by": {
                    "description": "Entity or user performing the status change",
                    "nullable": true,
                    "type": "string"
                  },
                  "financial_entity_id": {
                    "description": "Financial entity ID",
                    "nullable": true,
                    "type": "integer"
                  },
                  "ids": {
                    "items": {
                      "description": "Order primary key IDs",
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "payment_account_holder": {
                    "description": "Payment account holder name",
                    "nullable": true,
                    "type": "string"
                  },
                  "payment_account_number": {
                    "description": "Payment account number",
                    "nullable": true,
                    "type": "string"
                  },
                  "payment_method": {
                    "description": "Order payment method",
                    "enum": [
                      "gopay",
                      "va",
                      "qris",
                      "card",
                      "invoice",
                      "alfamart",
                      "ovo",
                      "dana",
                      "shopeepay",
                      "linkaja",
                      "no_payment",
                      "bank_transfer",
                      "marketplace",
                      "cod"
                    ],
                    "type": "string"
                  },
                  "payment_status": {
                    "description": "Order payment status",
                    "enum": [
                      "unpaid",
                      "paid",
                      "conflict",
                      "settled"
                    ],
                    "type": "string"
                  },
                  "rtsproof_url": {
                    "description": "Return to sender proof image URL",
                    "nullable": true,
                    "type": "string"
                  },
                  "status": {
                    "description": "Order status",
                    "enum": [
                      "draft",
                      "pending",
                      "confirmed",
                      "in_process",
                      "ready",
                      "shipped",
                      "completed",
                      "canceled",
                      "rts",
                      "closed"
                    ],
                    "type": "string"
                  },
                  "transfer_time": {
                    "description": "Transfer timestamp (ISO 8601 format)",
                    "format": "date-time",
                    "nullable": true,
                    "type": "string"
                  },
                  "transferproof_url": {
                    "description": "Transfer proof image URL",
                    "nullable": true,
                    "type": "string"
                  }
                },
                "title": "OrderChangeStatusBody",
                "type": "object"
              }
            }
          },
          "description": "Status or payment status change data",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Order primary key",
                            "type": "integer"
                          },
                          "order_id": {
                            "description": "Order ID in string format",
                            "type": "string"
                          },
                          "payment_status": {
                            "description": "Order payment status",
                            "enum": [
                              "unpaid",
                              "paid",
                              "conflict",
                              "settled"
                            ],
                            "type": "string"
                          },
                          "status": {
                            "description": "Order status",
                            "enum": [
                              "draft",
                              "pending",
                              "confirmed",
                              "in_process",
                              "ready",
                              "shipped",
                              "completed",
                              "canceled",
                              "rts",
                              "closed"
                            ],
                            "type": "string"
                          }
                        },
                        "title": "OrderChangeStatus",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Status changed successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "change_status_order"
            ]
          }
        ],
        "summary": "Change order status",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/delete": {
      "post": {
        "callbacks": {},
        "description": "Delete multiple orders by IDs.",
        "operationId": "ScalevApiWeb.OrderController.delete",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ids": {
                    "items": {
                      "description": "Order primary keys to delete",
                      "type": "integer"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "ids"
                ],
                "type": "object"
              }
            }
          },
          "description": "Order primary keys to delete",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "items": {
                        "description": "Deleted order ID",
                        "type": "integer"
                      },
                      "type": "array"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Orders deleted successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "delete_order"
            ]
          }
        ],
        "summary": "Delete orders",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/generate-awb": {
      "post": {
        "callbacks": {},
        "description": "Generate Air Waybill for multiple orders.",
        "operationId": "ScalevApiWeb.OrderController.generate_awb",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ids": {
                    "description": "Order primary keys to generate AWB",
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "ids"
                ],
                "type": "object"
              }
            }
          },
          "description": "AWB generation data",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "failures": {
                          "properties": {
                            "ORDER_ID": {
                              "description": "Error message for the order with this ID",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "successes": {
                          "properties": {
                            "ORDER_ID": {
                              "description": "Message or shipment receipt or tracking ID for the order with this ID",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "title": "GenerateOrCancelAWB",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "AWB generated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "create_awb"
            ]
          }
        ],
        "summary": "Generate AWB for orders",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/mark-not-spam": {
      "post": {
        "callbacks": {},
        "description": "Mark multiple orders as not spam.",
        "operationId": "ScalevApiWeb.OrderController.mark_not_spam",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ids": {
                    "items": {
                      "description": "Order primary keys to mark as not spam",
                      "type": "integer"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "ids"
                ],
                "type": "object"
              }
            }
          },
          "description": "Mark not spam data",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Order primary key",
                            "type": "integer"
                          },
                          "is_probably_spam": {
                            "description": "Is probably spam",
                            "type": "boolean"
                          },
                          "mark_as_spam_by": {
                            "description": "Who marked as spam",
                            "nullable": true,
                            "type": "string"
                          },
                          "order_id": {
                            "description": "Order ID in string format",
                            "type": "string"
                          },
                          "payment_status": {
                            "description": "Order payment status",
                            "enum": [
                              "unpaid",
                              "paid",
                              "conflict",
                              "settled"
                            ],
                            "type": "string"
                          },
                          "status": {
                            "description": "Order status",
                            "enum": [
                              "draft",
                              "pending",
                              "confirmed",
                              "in_process",
                              "ready",
                              "shipped",
                              "completed",
                              "canceled",
                              "rts",
                              "closed"
                            ],
                            "type": "string"
                          }
                        },
                        "title": "OrderMarkNotSpam",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Orders marked as not spam"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_order"
            ]
          }
        ],
        "summary": "Mark orders as not spam",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/pg-reference-id/{pg_reference_id}": {
      "get": {
        "callbacks": {},
        "description": "Retrieve order details using payment gateway reference ID.",
        "operationId": "ScalevApiWeb.OrderViewController.show_by_pg_reference_id",
        "parameters": [
          {
            "description": "Payment gateway reference ID",
            "in": "path",
            "name": "pg_reference_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        }
                      },
                      "title": "PGReferenceID",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Order found"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_order"
            ]
          }
        ],
        "summary": "Get order by payment gateway reference ID",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/pg-reference-ids": {
      "get": {
        "callbacks": {},
        "description": "Retrieve orders using multiple payment gateway reference IDs.",
        "operationId": "ScalevApiWeb.OrderViewController.show_by_pg_reference_ids",
        "parameters": [
          {
            "description": "Comma-separated payment gateway reference IDs",
            "in": "query",
            "name": "pg_reference_ids",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "PG_REFERENCE_ID": {
                          "properties": {
                            "id": {
                              "example": 1,
                              "type": "integer"
                            },
                            "order_id": {
                              "example": "250101ABCDEFG",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "title": "PGReferenceIDs",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Orders found"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_order"
            ]
          }
        ],
        "summary": "Get orders by multiple payment gateway reference IDs",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/statistics": {
      "get": {
        "callbacks": {},
        "description": "Retrieves descriptive statistics about orders, such as total orders, total revenue, and other aggregated data. Can be filtered using the same parameters as the orders list endpoint.",
        "operationId": "ScalevApiWeb.OrderViewController.index_statistics",
        "parameters": [
          {
            "description": "Type of datetime for statistics (defaults to 'created_at')",
            "in": "query",
            "name": "datetime_type",
            "required": false,
            "schema": {
              "default": "created_at",
              "enum": [
                "draft_time",
                "pending_time",
                "confirmed_time",
                "in_process_time",
                "ready_time",
                "canceled_time",
                "shipped_time",
                "shipped_rts_time",
                "completed_time",
                "rts_time",
                "closed_time"
              ],
              "type": "string"
            }
          },
          {
            "description": "Timezone for datetime adjustment (defaults to 'Asia/Jakarta')",
            "in": "query",
            "name": "tz",
            "required": false,
            "schema": {
              "default": "Asia/Jakarta",
              "type": "string"
            }
          },
          {
            "description": "Date breakdown for statistics (defaults to 'off')",
            "in": "query",
            "name": "breakdown_date",
            "required": false,
            "schema": {
              "default": "off",
              "enum": [
                "off",
                "day",
                "week",
                "month"
              ],
              "type": "string"
            }
          },
          {
            "description": "Include breakdown by order status (defaults to 'false')",
            "in": "query",
            "name": "is_breakdown_status",
            "required": false,
            "schema": {
              "default": "false",
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          },
          {
            "description": "Custom breakdown key for statistics (defaults to 'off')",
            "in": "query",
            "name": "custom_breakdown_key",
            "required": false,
            "schema": {
              "default": "off",
              "enum": [
                "off",
                "handler_id",
                "advertiser_id",
                "page_id",
                "city",
                "province"
              ],
              "type": "string"
            }
          },
          {
            "description": "Minimum number of days for statistics (defaults to 0)",
            "in": "query",
            "name": "minimum_days",
            "required": false,
            "schema": {
              "default": 0,
              "type": "integer"
            }
          },
          {
            "description": "Filter by order status",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by payment status",
            "in": "query",
            "name": "payment_status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by business ID",
            "in": "query",
            "name": "business_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by store ID",
            "in": "query",
            "name": "store_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by shipped time since (ISO 8601 format)",
            "in": "query",
            "name": "shipped_time_since",
            "required": false,
            "schema": {
              "format": "datetime",
              "type": "string"
            }
          },
          {
            "description": "Filter by shipped time until (ISO 8601 format)",
            "in": "query",
            "name": "shipped_time_until",
            "required": false,
            "schema": {
              "format": "datetime",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "breakdown_date": {
                          "type": "string"
                        },
                        "custom_breakdown_key": {
                          "type": "string"
                        },
                        "datetime_type": {
                          "type": "string"
                        },
                        "is_breakdown_status": {
                          "type": "boolean"
                        },
                        "params": {
                          "additionalProperties": true,
                          "type": "object"
                        },
                        "results": {
                          "items": {
                            "properties": {
                              "count": {
                                "type": "integer"
                              },
                              "custom_breakdown_id": {
                                "type": "integer"
                              },
                              "custom_breakdown_name": {
                                "type": "string"
                              },
                              "day": {
                                "type": "string"
                              },
                              "gross_revenue": {
                                "type": "number"
                              },
                              "month": {
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "week": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "tz": {
                          "type": "string"
                        }
                      },
                      "title": "OrderStatistics",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Order statistics with breakdown"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_order_statistics"
            ]
          }
        ],
        "summary": "Get order statistics",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/tags": {
      "get": {
        "callbacks": {},
        "description": "Retrieve a list of tags associated with orders.",
        "operationId": "ScalevApiWeb.OrderViewController.index_tags",
        "parameters": [
          {
            "description": "Search term to filter tags by name",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "description": "List of tag names",
                      "items": {
                        "description": "Tag Name",
                        "type": "string"
                      },
                      "title": "TagNameList",
                      "type": "array"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Order tags list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_order"
            ]
          }
        ],
        "summary": "List order tags",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/upload": {
      "post": {
        "callbacks": {},
        "description": "Upload orders from CSV file. (1) Archive mode. Choose this mode if you want to import old data from another platform you've been using. You can directly create products that you made on your previous platform. Orders that are created will immediately have 'Completed' status. Download template for Archive mode here: https://app.scalev.id/example/template_archive.csv. (2) Regular mode. Choose this mode if you want to enter current data that you wish to input in bulk, not one by one via order input. It will take inventory into account if your products have inventory enabled. Successfully created orders will have 'Created', 'Pending', or 'Confirmed' status, depending on the completeness of the data. Download template for Regular mode here: https://app.scalev.id/example/template_regular.csv.",
        "operationId": "ScalevApiWeb.OrderController.upload_orders",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "create_type": {
                    "description": "Choose 'archive' for Archive mode, 'regular' for Regular mode",
                    "enum": [
                      "archive",
                      "regular"
                    ],
                    "type": "string"
                  },
                  "file": {
                    "format": "binary",
                    "type": "string"
                  },
                  "tz": {
                    "description": "Timezone in IANA format, e.g., 'Asia/Jakarta'",
                    "type": "string"
                  }
                },
                "required": [
                  "file",
                  "create_type",
                  "tz"
                ],
                "type": "object"
              }
            }
          },
          "description": "Orders CSV upload",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "failed": {
                          "properties": {
                            "ID_OF_ORDER": {
                              "description": "Error for the order with this ID",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "success": {
                          "items": {
                            "properties": {
                              "external_id": {
                                "description": "External ID of the order",
                                "nullable": true,
                                "type": "string"
                              },
                              "id": {
                                "description": "Order primary key",
                                "type": "integer"
                              },
                              "order_id": {
                                "description": "Order ID in string format",
                                "type": "string"
                              },
                              "payment_status": {
                                "description": "Order payment status",
                                "enum": [
                                  "unpaid",
                                  "paid",
                                  "conflict",
                                  "settled"
                                ],
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "SuccessUploadOrders",
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "title": "UploadOrders",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Orders uploaded successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "add_order"
            ]
          }
        ],
        "summary": "Upload orders from CSV file",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/upload-change-status": {
      "post": {
        "callbacks": {},
        "description": "Upload a CSV file to change status of multiple orders. Template file can be downloaded from the link here: https://app.scalev.id/example/update_status_template.csv. (1) Leave blank the 'shipment_receipt' field if you don't want to change the receipt/tracking number. Note: this will not change receipts/tracking numbers that are automatically generated by Scalev through the 'Request Pickup' menu. (2) Leave blank the 'day', 'month', and 'year' fields if you want to use the time of upload.",
        "operationId": "ScalevApiWeb.OrderController.upload_change_status",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "format": "binary",
                    "type": "string"
                  },
                  "tz": {
                    "description": "Timezone in IANA format, e.g., 'Asia/Jakarta'",
                    "type": "string"
                  }
                },
                "required": [
                  "file",
                  "tz"
                ],
                "type": "object"
              }
            }
          },
          "description": "CSV upload",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Order primary key",
                            "type": "integer"
                          },
                          "order_id": {
                            "description": "Order ID in string format",
                            "type": "string"
                          },
                          "payment_status": {
                            "description": "Order payment status",
                            "enum": [
                              "unpaid",
                              "paid",
                              "conflict",
                              "settled"
                            ],
                            "type": "string"
                          },
                          "status": {
                            "description": "Order status",
                            "enum": [
                              "draft",
                              "pending",
                              "confirmed",
                              "in_process",
                              "ready",
                              "shipped",
                              "completed",
                              "canceled",
                              "rts",
                              "closed"
                            ],
                            "type": "string"
                          }
                        },
                        "title": "OrderChangeStatus",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Status changed successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "change_status_order"
            ]
          }
        ],
        "summary": "Upload CSV to change order status",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/upload-receipt": {
      "post": {
        "callbacks": {},
        "description": "Upload file to update shipment receipts (tracking IDs) for multiple orders. Template file can be downloaded from the link here: https://app.scalev.id/example/receipt_template.csv.",
        "operationId": "ScalevApiWeb.OrderController.upload_receipt",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "format": "binary",
                    "type": "string"
                  }
                },
                "required": [
                  "file"
                ],
                "type": "object"
              }
            }
          },
          "description": "Receipt upload",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Order primary key",
                            "type": "integer"
                          },
                          "order_id": {
                            "description": "Order ID in string format",
                            "type": "string"
                          },
                          "shipment_receipt": {
                            "description": "Shipment receipt URL",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "title": "UploadReceipt",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Receipt uploaded successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_order"
            ]
          }
        ],
        "summary": "Upload CSV to update shipment receipts",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}": {
      "get": {
        "callbacks": {},
        "description": "Retrieve detailed information about a specific order.",
        "operationId": "ScalevApiWeb.OrderViewController.show",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "gross_revenue_for_dropshipper": {
                          "description": "Gross revenue for dropshipper after discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "advertiser": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "cogs": {
                          "description": "Cost of goods sold for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "dropshipper_name": {
                          "description": "Name of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "transferproof_url": {
                          "description": "Transfer proof URL",
                          "nullable": true,
                          "type": "string"
                        },
                        "scalev_fee": {
                          "description": "Scalev fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipment_status_history": {
                          "items": {
                            "properties": {
                              "description": {
                                "description": "Description of the status update",
                                "type": "string"
                              },
                              "status": {
                                "description": "Current status of the shipment",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the status update",
                                "format": "date-time",
                                "type": "string"
                              },
                              "timestamp_source": {
                                "description": "Source of the timestamp",
                                "type": "string"
                              }
                            },
                            "title": "ShipmentStatusHistory",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_code": {
                          "description": "Discount code used in the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "ready_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "warehouse": {
                          "properties": {
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "contact_name": {
                              "description": "Contact name at the warehouse",
                              "type": "string"
                            },
                            "contact_phone": {
                              "description": "Contact phone number at the warehouse",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the warehouse",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderWarehouse",
                          "type": "object"
                        },
                        "payment_fee_rate": {
                          "description": "Payment fee rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "pg_paid_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway paid info",
                          "nullable": true,
                          "type": "object"
                        },
                        "transfer_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "dropshipper_phone": {
                          "description": "Phone number of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipping_cost": {
                          "description": "Shipping cost for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_price": {
                          "description": "Total product price before discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "total_quantity": {
                          "description": "Total quantity of items in the order",
                          "type": "integer"
                        },
                        "net_revenue": {
                          "description": "Net revenue after all discounts and fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "bundle_price_options": {
                          "additionalProperties": true,
                          "description": "Bundle price options for the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "customer": {
                          "properties": {
                            "confirmed_at": {
                              "description": "Confirmation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "created_at": {
                              "description": "Creation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "email": {
                              "description": "Customer email",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Customer ID",
                              "type": "integer"
                            },
                            "last_updated_at": {
                              "description": "Last update timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "description": "Customer name",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Customer phone number",
                              "type": "string"
                            },
                            "status": {
                              "description": "Customer status",
                              "type": "string"
                            }
                          },
                          "title": "CustomerOrder",
                          "type": "object"
                        },
                        "variants": {
                          "additionalProperties": true,
                          "description": "Variants of the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "chat_message": {
                          "description": "Chat message associated with the order",
                          "type": "string"
                        },
                        "handler_phone": {
                          "description": "Handler phone number",
                          "nullable": true,
                          "type": "string"
                        },
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "order_emails": {
                          "description": "Order emails associated with the order",
                          "items": {
                            "properties": {
                              "from": {
                                "description": "Sender email address",
                                "type": "string"
                              },
                              "id": {
                                "description": "Order email ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Email creation timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "message_id": {
                                "description": "Message ID of the email",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Associated order primary key",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Email status",
                                "type": "string"
                              },
                              "status_history": {
                                "items": {
                                  "properties": {
                                    "status": {
                                      "description": "Email status",
                                      "type": "string"
                                    },
                                    "timestamp": {
                                      "description": "Timestamp of the status change",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "subject": {
                                "description": "Email subject",
                                "type": "string"
                              },
                              "to": {
                                "description": "Recipient email address",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the email",
                                "type": "string"
                              },
                              "updated_at": {
                                "description": "Last update timestamp of the email",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "OrderEmail",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "order_id": {
                          "description": "Order ID in string format",
                          "type": "string"
                        },
                        "product_discount": {
                          "description": "Total product discount applied",
                          "format": "decimal",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "handler": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "payment_account_number": {
                          "description": "Payment account number",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_method": {
                          "description": "Order payment method",
                          "enum": [
                            "gopay",
                            "va",
                            "qris",
                            "card",
                            "invoice",
                            "alfamart",
                            "ovo",
                            "dana",
                            "shopeepay",
                            "linkaja",
                            "no_payment",
                            "bank_transfer",
                            "marketplace",
                            "cod"
                          ],
                          "type": "string"
                        },
                        "courier": {
                          "description": "Courier ID for the order",
                          "nullable": true,
                          "type": "integer"
                        },
                        "origin_address": {
                          "properties": {
                            "address": {
                              "description": "Full address of the warehouse",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the warehouse address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "location_id": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "postal_code": {
                              "description": "Postal code of the warehouse address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the warehouse address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the warehouse address",
                              "type": "string"
                            },
                            "warehouse": {
                              "description": "ID of the associated warehouse",
                              "type": "integer"
                            }
                          },
                          "title": "WarehouseAddress",
                          "type": "object"
                        },
                        "epayment_provider": {
                          "description": "E-payment provider",
                          "nullable": true,
                          "type": "string"
                        },
                        "in_process_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "pg_reference_id": {
                          "description": "Payment gateway reference ID",
                          "nullable": true,
                          "type": "string"
                        },
                        "weight_bump": {
                          "description": "Weight bump added to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "follow_up_chat_type": {
                          "description": "Type of follow-up chat for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_status": {
                          "description": "Order AWB status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "platform": {
                          "description": "Platform of the order",
                          "type": "string"
                        },
                        "follow_up_chats": {
                          "items": {
                            "properties": {
                              "bundle_id": {
                                "description": "Bundle ID associated with the chat",
                                "type": "integer"
                              },
                              "change_status": {
                                "description": "Change status after follow up chat",
                                "type": "boolean"
                              },
                              "hours_after": {
                                "description": "Hours after which the follow up chat is triggered",
                                "type": "integer"
                              },
                              "id": {
                                "description": "Follow Up Chat ID",
                                "type": "integer"
                              },
                              "image": {
                                "description": "Image URL for the follow up chat",
                                "format": "uri",
                                "type": "string"
                              },
                              "is_default": {
                                "description": "Is this a default follow up chat?",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name of the follow up chat",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "Product ID associated with the chat",
                                "type": "integer"
                              },
                              "provider": {
                                "description": "Provider of the follow up chat service",
                                "type": "string"
                              },
                              "store_id": {
                                "description": "Store ID associated with the chat",
                                "type": "integer"
                              },
                              "trigger": {
                                "description": "Trigger condition for the follow up chat",
                                "type": "string"
                              }
                            },
                            "title": "FollowUpChat",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_purchase_kwai": {
                          "description": "Is this order a Kwai purchase",
                          "type": "boolean"
                        },
                        "shipping_discount": {
                          "description": "Shipping discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "conflict_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "paid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "confirmed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "canceled_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "status": {
                          "description": "Order status",
                          "enum": [
                            "draft",
                            "pending",
                            "confirmed",
                            "in_process",
                            "ready",
                            "shipped",
                            "completed",
                            "canceled",
                            "rts",
                            "closed"
                          ],
                          "type": "string"
                        },
                        "is_dropshipping": {
                          "description": "Is the order a dropshipping order",
                          "type": "boolean"
                        },
                        "payment_account_id": {
                          "description": "Payment account ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "is_repeat": {
                          "description": "Is repeat order",
                          "type": "boolean"
                        },
                        "tiktok_pixel_ids": {
                          "description": "TikTok pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "fb_pixel_ids": {
                          "description": "Facebook pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Order primary key",
                          "type": "integer"
                        },
                        "unpaid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "is_purchase_tiktok": {
                          "description": "Is this order a TikTok purchase",
                          "type": "boolean"
                        },
                        "orderlines": {
                          "items": {
                            "properties": {
                              "cogs": {
                                "description": "Cost of Goods Sold for this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "cogs_bt": {
                                "description": "COGS for this order line minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount": {
                                "description": "Discount amount applied",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_bt": {
                                "description": "Discount amount minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount": {
                                "description": "Discount from a discount code",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount_bt": {
                                "description": "Discount from a discount code minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_rate": {
                                "description": "Discount rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "id": {
                                "description": "Order Line ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the order line was created",
                                "example": "2023-10-01T12:00:00Z",
                                "format": "date-time",
                                "type": "string"
                              },
                              "is_inventory": {
                                "description": "Is this order line related to inventory?",
                                "type": "boolean"
                              },
                              "item_type": {
                                "description": "Type of the item",
                                "type": "string"
                              },
                              "product_business": {
                                "description": "Business ID of the product",
                                "type": "integer"
                              },
                              "product_name": {
                                "description": "Name of the product",
                                "type": "string"
                              },
                              "product_price": {
                                "description": "Price of the product before discounts",
                                "format": "float",
                                "type": "number"
                              },
                              "product_price_bt": {
                                "description": "Price of the product before discounts minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "quantity": {
                                "description": "Quantity of the item",
                                "type": "integer"
                              },
                              "reseller_product_price": {
                                "description": "Reseller price of the product",
                                "format": "float",
                                "type": "number"
                              },
                              "reseller_product_price_bt": {
                                "description": "Reseller price of the product minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "tax_rate": {
                                "description": "Tax rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "variant": {
                                "description": "Variant ID",
                                "type": "integer"
                              },
                              "variant_cogs": {
                                "description": "COGS of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_cogs_bt": {
                                "description": "COGS of the varian minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_option1_value": {
                                "description": "Value of option 1 for the variant",
                                "type": "string"
                              },
                              "variant_option2_value": {
                                "description": "Value of option 2 for the variant",
                                "type": "string"
                              },
                              "variant_option3_value": {
                                "description": "Value of option 3 for the variant",
                                "type": "string"
                              },
                              "variant_price": {
                                "description": "Price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_price_bt": {
                                "description": "Price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price": {
                                "description": "Reseller price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price_bt": {
                                "description": "Reseller price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_sku": {
                                "description": "SKU of the variant",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Weight of the product",
                                "format": "float",
                                "type": "number"
                              }
                            },
                            "title": "OrderLine",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "shipment_status": {
                          "description": "Current shipment status of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "kwai_pixel_ids": {
                          "description": "Kwai pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "cogs_bt": {
                          "description": "Cost of goods sold for the order minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "sub_payment_method": {
                          "description": "Xendit VA bank code",
                          "enum": [
                            "BCA",
                            "BNI",
                            "BRI",
                            "MANDIRI",
                            "PERMATA",
                            "BSI",
                            "BJB",
                            "CIMB",
                            "SAHABAT_SAMPOERNA",
                            "ARTAJASA"
                          ],
                          "type": "string"
                        },
                        "payment_fee": {
                          "description": "Payment fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "channel_name": {
                          "description": "Channel name of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_rate": {
                          "description": "Discount rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "final_variants": {
                          "additionalProperties": true,
                          "description": "Final variants of the order after bundle options",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_name": {
                          "description": "Name of other income source",
                          "nullable": true,
                          "type": "string"
                        },
                        "gross_revenue": {
                          "description": "Gross revenue of the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tags": {
                          "description": "Tags associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "discount_code_id": {
                          "description": "Discount code ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "other_income": {
                          "description": "Other income amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_weight": {
                          "description": "Total weight of the order including weight bump",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_probably_spam": {
                          "description": "Is probably spam",
                          "type": "boolean"
                        },
                        "external_id": {
                          "description": "External ID of the order",
                          "type": "string"
                        },
                        "payment_status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_discount": {
                          "description": "Discount code discount amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_discount_bt": {
                          "description": "Total product discount applied minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "store": {
                          "properties": {
                            "auto_expire_days": {
                              "description": "Days until auto-expire",
                              "type": "integer"
                            },
                            "auto_other_income": {
                              "description": "Is auto other income enabled?",
                              "type": "boolean"
                            },
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "capi_purchase_value_type": {
                              "description": "Type of CAPI purchase value",
                              "enum": [
                                "gross_revenue",
                                "net_revenue",
                                "adj_gross_revenue"
                              ],
                              "type": "string"
                            },
                            "cod_purchase_triggers": {
                              "description": "COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "dynamic_other_income_cod_default_amount": {
                              "description": "Default amount for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_default_percentage": {
                              "description": "Default percentage for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "dynamic_other_income_epayment_default_amount": {
                              "description": "Default amount for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_default_percentage": {
                              "description": "Default percentage for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "fixed_auto_other_income": {
                              "description": "Is fixed auto other income enabled?",
                              "type": "boolean"
                            },
                            "id": {
                              "description": "Store ID",
                              "type": "integer"
                            },
                            "is_active": {
                              "description": "Is the store active?",
                              "type": "boolean"
                            },
                            "is_auto_expire": {
                              "description": "Is auto-expire enabled?",
                              "type": "boolean"
                            },
                            "is_discount_editable": {
                              "description": "Is discount editable?",
                              "type": "boolean"
                            },
                            "is_dropshipping_allowed": {
                              "description": "Is dropshipping allowed in this store?",
                              "type": "boolean"
                            },
                            "is_moota_enabled": {
                              "description": "Is Moota integration enabled for this store?",
                              "type": "boolean"
                            },
                            "is_postal_code": {
                              "description": "Is postal code required for orders?",
                              "type": "boolean"
                            },
                            "is_transferproof_required": {
                              "description": "Is transfer proof required for orders in this store?",
                              "type": "boolean"
                            },
                            "is_unique_code": {
                              "description": "Is unique code required for orders?",
                              "type": "boolean"
                            },
                            "is_use_waba": {
                              "description": "Is WABA integration enabled?",
                              "type": "boolean"
                            },
                            "max_unique_code_amount": {
                              "description": "Maximum amount for unique code orders",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the store",
                              "type": "string"
                            },
                            "non_cod_purchase_triggers": {
                              "description": "Non-COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "other_income_name": {
                              "description": "Name of the other income",
                              "type": "string"
                            },
                            "postal_code_requirement": {
                              "description": "Postal code requirement options",
                              "enum": [
                                "autofill",
                                "manual"
                              ],
                              "type": "string"
                            },
                            "store_courier_other_incomes": {
                              "description": "Other incomes for store couriers",
                              "items": {
                                "description": "Store Courier Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "courier_id": {
                                    "description": "Courier ID",
                                    "type": "integer"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "type": {
                                    "description": "Type of other income",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "courier_id",
                                  "type"
                                ],
                                "title": "StoreCourierOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "store_method_other_incomes": {
                              "description": "Other incomes for store methods",
                              "items": {
                                "description": "Store Payment Method Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "payment_method": {
                                    "description": "Payment Method",
                                    "type": "string"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "sub_payment_method": {
                                    "description": "Sub Payment Method",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type of amount (fixed or percentage)",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "payment_method",
                                  "type"
                                ],
                                "title": "StorePaymentMethodOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "sub_payment_methods": {
                              "description": "Xendit VA bank codes",
                              "items": {
                                "description": "Xendit VA bank code",
                                "enum": [
                                  "BCA",
                                  "BNI",
                                  "BRI",
                                  "MANDIRI",
                                  "PERMATA",
                                  "BSI",
                                  "BJB",
                                  "CIMB",
                                  "SAHABAT_SAMPOERNA",
                                  "ARTAJASA"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the store",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "UUID of the store",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderStore",
                          "type": "object"
                        },
                        "pg_payment_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway payment info",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_bt": {
                          "description": "Other income amount minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "courier_service": {
                          "properties": {
                            "code": {
                              "description": "Code for the courier service",
                              "type": "string"
                            },
                            "code_co": {
                              "description": "Code for CO courier service",
                              "type": "string"
                            },
                            "code_ka": {
                              "description": "Code for KA courier service",
                              "type": "string"
                            },
                            "code_lincah": {
                              "description": "Code for Lincah courier service",
                              "type": "string"
                            },
                            "code_mengantar": {
                              "description": "Code for Mengantar courier service",
                              "type": "string"
                            },
                            "code_ro": {
                              "description": "Code for RO courier service",
                              "type": "string"
                            },
                            "courier": {
                              "properties": {
                                "code": {
                                  "description": "Courier code",
                                  "type": "string"
                                },
                                "code_ka": {
                                  "description": "Courier code in Georgian",
                                  "type": "string"
                                },
                                "code_lincah": {
                                  "description": "Courier code in Lincah",
                                  "type": "string"
                                },
                                "code_mengantar": {
                                  "description": "Courier code for Mengantar",
                                  "type": "string"
                                },
                                "code_ro": {
                                  "description": "Courier code in Romanian",
                                  "type": "string"
                                },
                                "courier_type": {
                                  "description": "Type of the courier",
                                  "enum": [
                                    "delivery",
                                    "pickup"
                                  ],
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Courier ID",
                                  "type": "integer"
                                },
                                "is_pickup": {
                                  "description": "Is this a pickup courier?",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "Courier name",
                                  "type": "string"
                                }
                              },
                              "title": "Courier",
                              "type": "object"
                            },
                            "id": {
                              "description": "Courier Service ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the courier service",
                              "type": "string"
                            }
                          },
                          "title": "CourierService",
                          "type": "object"
                        },
                        "mark_as_spam_by": {
                          "description": "Who marked as spam",
                          "type": "string"
                        },
                        "net_payment_revenue": {
                          "description": "Net payment revenue after fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "rts_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "min_payment_fee": {
                          "description": "Minimum payment fee applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "analytics_purchases": {
                          "description": "Analytics purchases associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Analytics Purchase ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the analytics purchase was created",
                                "format": "date-time",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Order ID associated with the analytics purchase",
                                "type": "integer"
                              },
                              "payload": {
                                "additionalProperties": true,
                                "description": "Payload data of the analytics purchase",
                                "type": "object"
                              },
                              "pixel_id": {
                                "description": "Pixel ID associated with the purchase",
                                "type": "string"
                              },
                              "platform": {
                                "description": "Platform of the analytics purchase",
                                "type": "string"
                              },
                              "response": {
                                "additionalProperties": true,
                                "description": "Response data from the analytics purchase",
                                "type": "object"
                              },
                              "updated_at": {
                                "description": "Timestamp when the analytics purchase was last updated",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "AnalyticsPurchase",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_from_form": {
                          "description": "Is from form submission",
                          "type": "boolean"
                        },
                        "secret_slug": {
                          "description": "Secret slug of the order",
                          "type": "string"
                        },
                        "shipping_fee": {
                          "description": "Shipping fee charged for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tax_rate": {
                          "description": "Tax rate applied to the order",
                          "format": "float",
                          "nullable": true,
                          "type": "number"
                        },
                        "draft_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "last_updated_at": {
                          "description": "Last updated timestamp of the order",
                          "format": "date-time",
                          "type": "string"
                        },
                        "courier_additional_info": {
                          "description": "Additional information for the courier",
                          "nullable": true,
                          "type": "string"
                        },
                        "closed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "financial_entity": {
                          "properties": {
                            "code": {
                              "description": "Code of the financial entity",
                              "type": "string"
                            },
                            "duitku_code": {
                              "description": "Duitku code for the financial entity",
                              "type": "string"
                            },
                            "entity_type": {
                              "description": "Type of the financial entity",
                              "type": "string"
                            },
                            "id": {
                              "description": "Financial Entity ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the financial entity",
                              "type": "string"
                            },
                            "platform": {
                              "description": "Platform associated with the financial entity",
                              "type": "string"
                            },
                            "xendit_code": {
                              "description": "Xendit code for the financial entity",
                              "type": "string"
                            }
                          },
                          "title": "FinancialEntity",
                          "type": "object"
                        },
                        "page": {
                          "properties": {
                            "id": {
                              "description": "Page ID",
                              "type": "integer"
                            },
                            "is_published": {
                              "description": "Is the page published?",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Name of the page",
                              "type": "string"
                            },
                            "published_at": {
                              "description": "Publication date of the page",
                              "format": "date-time",
                              "type": "string"
                            },
                            "slug": {
                              "description": "Slug for the page URL",
                              "type": "string"
                            },
                            "store_id": {
                              "description": "ID of the store the page belongs to",
                              "type": "integer"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the page",
                              "type": "string"
                            }
                          },
                          "title": "PageSimple",
                          "type": "object"
                        },
                        "product_price_bt": {
                          "description": "Total product price before discounts minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_purchase_fb": {
                          "description": "Is this order a Facebook purchase",
                          "type": "boolean"
                        },
                        "product_weight": {
                          "description": "Total weight of products in the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "completed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "utm_source": {
                          "description": "UTM source of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_account_holder": {
                          "description": "Payment account holder name",
                          "nullable": true,
                          "type": "string"
                        },
                        "ip": {
                          "description": "IP address of the customer who placed the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipment_receipt": {
                          "description": "Shipment receipt URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "message_history": {
                          "description": "Message history associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "ID of the Follow Up Chat",
                                "type": "integer"
                              },
                              "is_from_bot": {
                                "description": "Is the message from bot",
                                "type": "boolean"
                              },
                              "message": {
                                "description": "Message content",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the sender",
                                "type": "string"
                              },
                              "provider": {
                                "description": "Message provider",
                                "type": "string"
                              },
                              "recipient_name": {
                                "description": "Recipient name",
                                "type": "string"
                              },
                              "recipient_phone": {
                                "description": "Recipient phone number",
                                "type": "string"
                              },
                              "sender_name": {
                                "description": "Sender name",
                                "type": "string"
                              },
                              "sender_phone": {
                                "description": "Sender phone number",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the message",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "MessageHistoryItem",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "payment_status": {
                          "description": "Order payment status",
                          "enum": [
                            "unpaid",
                            "paid",
                            "conflict",
                            "settled"
                          ],
                          "type": "string"
                        },
                        "shipment_provider_code": {
                          "description": "Shipment provider code",
                          "enum": [
                            "mengantar",
                            "lincah",
                            "ninja"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Metadata associated with the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "rtsproof_url": {
                          "description": "RTS proof URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_code_applied_to": {
                          "description": "What the discount code was applied to",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipped_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_ca_status": {
                          "description": "Order AWB courier aggregator status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "created_at": {
                          "description": "Order creation timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "pending_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "notes": {
                          "description": "Notes or comments for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "destination_address": {
                          "properties": {
                            "address": {
                              "description": "Full address",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Order Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the recipient",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Phone number of the recipient",
                              "type": "string"
                            },
                            "postal_code": {
                              "description": "Postal code of the address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the address",
                              "type": "string"
                            }
                          },
                          "title": "OrderAddress",
                          "type": "object"
                        },
                        "unique_code_discount": {
                          "description": "Unique code discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipping_fee_discount": {
                          "description": "Shipping fee discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        }
                      },
                      "title": "Order",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Order details"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_order"
            ]
          }
        ],
        "summary": "Get order details",
        "tags": [
          "Orders"
        ]
      },
      "patch": {
        "callbacks": {},
        "description": "Update order details by ID.",
        "operationId": "ScalevApiWeb.OrderController.update",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address": {
                    "description": "Recipient address",
                    "type": "string"
                  },
                  "channel_unique_id": {
                    "description": "Channel unique ID",
                    "type": "string"
                  },
                  "courier_service_id": {
                    "description": "Courier service ID",
                    "type": "integer"
                  },
                  "customer_email": {
                    "description": "Customer email",
                    "format": "email",
                    "type": "string"
                  },
                  "customer_name": {
                    "description": "Customer name",
                    "type": "string"
                  },
                  "customer_phone": {
                    "description": "Customer phone number",
                    "type": "string"
                  },
                  "dropshipper_name": {
                    "description": "Dropshipper name",
                    "type": "string"
                  },
                  "dropshipper_phone": {
                    "description": "Dropshipper phone",
                    "type": "string"
                  },
                  "financial_entity_id": {
                    "description": "Financial entity ID",
                    "type": "integer"
                  },
                  "is_dropshipping": {
                    "description": "Is dropshipping order",
                    "type": "boolean"
                  },
                  "location_id": {
                    "description": "Location ID",
                    "type": "integer"
                  },
                  "notes": {
                    "description": "Order notes",
                    "type": "string"
                  },
                  "orderbundles": {
                    "description": "Order bundles",
                    "items": {
                      "properties": {
                        "bundle_price_option_unique_id": {
                          "description": "Bundle price option unique ID",
                          "type": "string"
                        },
                        "quantity": {
                          "description": "Quantity",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "bundle_price_option_unique_id",
                        "quantity"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "ordervariants": {
                    "description": "Order variants",
                    "items": {
                      "properties": {
                        "quantity": {
                          "description": "Quantity",
                          "type": "integer"
                        },
                        "variant_unique_id": {
                          "description": "Variant unique ID",
                          "type": "string"
                        }
                      },
                      "required": [
                        "variant_unique_id",
                        "quantity"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "other_income": {
                    "description": "Other income amount",
                    "type": "number"
                  },
                  "other_income_name": {
                    "description": "Other income name",
                    "type": "string"
                  },
                  "page_unique_id": {
                    "description": "Page unique ID",
                    "type": "string"
                  },
                  "payment_account_holder": {
                    "description": "Payment account holder name",
                    "type": "string"
                  },
                  "payment_account_number": {
                    "description": "Payment account number",
                    "type": "string"
                  },
                  "payment_account_unique_id": {
                    "description": "Payment account unique ID",
                    "type": "string"
                  },
                  "payment_method": {
                    "description": "Order payment method",
                    "enum": [
                      "gopay",
                      "va",
                      "qris",
                      "card",
                      "invoice",
                      "alfamart",
                      "ovo",
                      "dana",
                      "shopeepay",
                      "linkaja",
                      "no_payment",
                      "bank_transfer",
                      "marketplace",
                      "cod"
                    ],
                    "type": "string"
                  },
                  "postal_code": {
                    "description": "Postal code",
                    "type": "string"
                  },
                  "product_discount": {
                    "description": "Product discount amount",
                    "type": "number"
                  },
                  "shipment_provider_code": {
                    "description": "Shipment provider code",
                    "enum": [
                      "mengantar",
                      "lincah",
                      "ninja"
                    ],
                    "nullable": true,
                    "type": "string"
                  },
                  "shipping_cost": {
                    "description": "Shipping cost",
                    "type": "number"
                  },
                  "shipping_discount": {
                    "description": "Shipping discount amount",
                    "type": "number"
                  },
                  "sub_payment_method": {
                    "description": "Xendit VA bank code",
                    "enum": [
                      "BCA",
                      "BNI",
                      "BRI",
                      "MANDIRI",
                      "PERMATA",
                      "BSI",
                      "BJB",
                      "CIMB",
                      "SAHABAT_SAMPOERNA",
                      "ARTAJASA"
                    ],
                    "type": "string"
                  },
                  "transferproof_url": {
                    "description": "Transfer proof URL",
                    "type": "string"
                  },
                  "warehouse_unique_id": {
                    "description": "Warehouse unique ID",
                    "type": "string"
                  }
                },
                "title": "OrderUpdateBody",
                "type": "object"
              }
            }
          },
          "description": "Order update data",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "gross_revenue_for_dropshipper": {
                          "description": "Gross revenue for dropshipper after discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "advertiser": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "cogs": {
                          "description": "Cost of goods sold for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "dropshipper_name": {
                          "description": "Name of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "transferproof_url": {
                          "description": "Transfer proof URL",
                          "nullable": true,
                          "type": "string"
                        },
                        "scalev_fee": {
                          "description": "Scalev fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipment_status_history": {
                          "items": {
                            "properties": {
                              "description": {
                                "description": "Description of the status update",
                                "type": "string"
                              },
                              "status": {
                                "description": "Current status of the shipment",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the status update",
                                "format": "date-time",
                                "type": "string"
                              },
                              "timestamp_source": {
                                "description": "Source of the timestamp",
                                "type": "string"
                              }
                            },
                            "title": "ShipmentStatusHistory",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_code": {
                          "description": "Discount code used in the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "ready_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "warehouse": {
                          "properties": {
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "contact_name": {
                              "description": "Contact name at the warehouse",
                              "type": "string"
                            },
                            "contact_phone": {
                              "description": "Contact phone number at the warehouse",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the warehouse",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderWarehouse",
                          "type": "object"
                        },
                        "payment_fee_rate": {
                          "description": "Payment fee rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "pg_paid_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway paid info",
                          "nullable": true,
                          "type": "object"
                        },
                        "transfer_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "dropshipper_phone": {
                          "description": "Phone number of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipping_cost": {
                          "description": "Shipping cost for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_price": {
                          "description": "Total product price before discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "total_quantity": {
                          "description": "Total quantity of items in the order",
                          "type": "integer"
                        },
                        "net_revenue": {
                          "description": "Net revenue after all discounts and fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "bundle_price_options": {
                          "additionalProperties": true,
                          "description": "Bundle price options for the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "customer": {
                          "properties": {
                            "confirmed_at": {
                              "description": "Confirmation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "created_at": {
                              "description": "Creation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "email": {
                              "description": "Customer email",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Customer ID",
                              "type": "integer"
                            },
                            "last_updated_at": {
                              "description": "Last update timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "description": "Customer name",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Customer phone number",
                              "type": "string"
                            },
                            "status": {
                              "description": "Customer status",
                              "type": "string"
                            }
                          },
                          "title": "CustomerOrder",
                          "type": "object"
                        },
                        "variants": {
                          "additionalProperties": true,
                          "description": "Variants of the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "chat_message": {
                          "description": "Chat message associated with the order",
                          "type": "string"
                        },
                        "handler_phone": {
                          "description": "Handler phone number",
                          "nullable": true,
                          "type": "string"
                        },
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "order_emails": {
                          "description": "Order emails associated with the order",
                          "items": {
                            "properties": {
                              "from": {
                                "description": "Sender email address",
                                "type": "string"
                              },
                              "id": {
                                "description": "Order email ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Email creation timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "message_id": {
                                "description": "Message ID of the email",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Associated order primary key",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Email status",
                                "type": "string"
                              },
                              "status_history": {
                                "items": {
                                  "properties": {
                                    "status": {
                                      "description": "Email status",
                                      "type": "string"
                                    },
                                    "timestamp": {
                                      "description": "Timestamp of the status change",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "subject": {
                                "description": "Email subject",
                                "type": "string"
                              },
                              "to": {
                                "description": "Recipient email address",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the email",
                                "type": "string"
                              },
                              "updated_at": {
                                "description": "Last update timestamp of the email",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "OrderEmail",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "order_id": {
                          "description": "Order ID in string format",
                          "type": "string"
                        },
                        "product_discount": {
                          "description": "Total product discount applied",
                          "format": "decimal",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "handler": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "payment_account_number": {
                          "description": "Payment account number",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_method": {
                          "description": "Order payment method",
                          "enum": [
                            "gopay",
                            "va",
                            "qris",
                            "card",
                            "invoice",
                            "alfamart",
                            "ovo",
                            "dana",
                            "shopeepay",
                            "linkaja",
                            "no_payment",
                            "bank_transfer",
                            "marketplace",
                            "cod"
                          ],
                          "type": "string"
                        },
                        "courier": {
                          "description": "Courier ID for the order",
                          "nullable": true,
                          "type": "integer"
                        },
                        "origin_address": {
                          "properties": {
                            "address": {
                              "description": "Full address of the warehouse",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the warehouse address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "location_id": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "postal_code": {
                              "description": "Postal code of the warehouse address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the warehouse address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the warehouse address",
                              "type": "string"
                            },
                            "warehouse": {
                              "description": "ID of the associated warehouse",
                              "type": "integer"
                            }
                          },
                          "title": "WarehouseAddress",
                          "type": "object"
                        },
                        "epayment_provider": {
                          "description": "E-payment provider",
                          "nullable": true,
                          "type": "string"
                        },
                        "in_process_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "pg_reference_id": {
                          "description": "Payment gateway reference ID",
                          "nullable": true,
                          "type": "string"
                        },
                        "weight_bump": {
                          "description": "Weight bump added to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "follow_up_chat_type": {
                          "description": "Type of follow-up chat for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_status": {
                          "description": "Order AWB status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "platform": {
                          "description": "Platform of the order",
                          "type": "string"
                        },
                        "follow_up_chats": {
                          "items": {
                            "properties": {
                              "bundle_id": {
                                "description": "Bundle ID associated with the chat",
                                "type": "integer"
                              },
                              "change_status": {
                                "description": "Change status after follow up chat",
                                "type": "boolean"
                              },
                              "hours_after": {
                                "description": "Hours after which the follow up chat is triggered",
                                "type": "integer"
                              },
                              "id": {
                                "description": "Follow Up Chat ID",
                                "type": "integer"
                              },
                              "image": {
                                "description": "Image URL for the follow up chat",
                                "format": "uri",
                                "type": "string"
                              },
                              "is_default": {
                                "description": "Is this a default follow up chat?",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name of the follow up chat",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "Product ID associated with the chat",
                                "type": "integer"
                              },
                              "provider": {
                                "description": "Provider of the follow up chat service",
                                "type": "string"
                              },
                              "store_id": {
                                "description": "Store ID associated with the chat",
                                "type": "integer"
                              },
                              "trigger": {
                                "description": "Trigger condition for the follow up chat",
                                "type": "string"
                              }
                            },
                            "title": "FollowUpChat",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_purchase_kwai": {
                          "description": "Is this order a Kwai purchase",
                          "type": "boolean"
                        },
                        "shipping_discount": {
                          "description": "Shipping discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "conflict_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "paid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "confirmed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "canceled_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "status": {
                          "description": "Order status",
                          "enum": [
                            "draft",
                            "pending",
                            "confirmed",
                            "in_process",
                            "ready",
                            "shipped",
                            "completed",
                            "canceled",
                            "rts",
                            "closed"
                          ],
                          "type": "string"
                        },
                        "is_dropshipping": {
                          "description": "Is the order a dropshipping order",
                          "type": "boolean"
                        },
                        "payment_account_id": {
                          "description": "Payment account ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "is_repeat": {
                          "description": "Is repeat order",
                          "type": "boolean"
                        },
                        "tiktok_pixel_ids": {
                          "description": "TikTok pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "fb_pixel_ids": {
                          "description": "Facebook pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Order primary key",
                          "type": "integer"
                        },
                        "unpaid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "is_purchase_tiktok": {
                          "description": "Is this order a TikTok purchase",
                          "type": "boolean"
                        },
                        "orderlines": {
                          "items": {
                            "properties": {
                              "cogs": {
                                "description": "Cost of Goods Sold for this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "cogs_bt": {
                                "description": "COGS for this order line minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount": {
                                "description": "Discount amount applied",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_bt": {
                                "description": "Discount amount minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount": {
                                "description": "Discount from a discount code",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount_bt": {
                                "description": "Discount from a discount code minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_rate": {
                                "description": "Discount rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "id": {
                                "description": "Order Line ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the order line was created",
                                "example": "2023-10-01T12:00:00Z",
                                "format": "date-time",
                                "type": "string"
                              },
                              "is_inventory": {
                                "description": "Is this order line related to inventory?",
                                "type": "boolean"
                              },
                              "item_type": {
                                "description": "Type of the item",
                                "type": "string"
                              },
                              "product_business": {
                                "description": "Business ID of the product",
                                "type": "integer"
                              },
                              "product_name": {
                                "description": "Name of the product",
                                "type": "string"
                              },
                              "product_price": {
                                "description": "Price of the product before discounts",
                                "format": "float",
                                "type": "number"
                              },
                              "product_price_bt": {
                                "description": "Price of the product before discounts minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "quantity": {
                                "description": "Quantity of the item",
                                "type": "integer"
                              },
                              "reseller_product_price": {
                                "description": "Reseller price of the product",
                                "format": "float",
                                "type": "number"
                              },
                              "reseller_product_price_bt": {
                                "description": "Reseller price of the product minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "tax_rate": {
                                "description": "Tax rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "variant": {
                                "description": "Variant ID",
                                "type": "integer"
                              },
                              "variant_cogs": {
                                "description": "COGS of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_cogs_bt": {
                                "description": "COGS of the varian minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_option1_value": {
                                "description": "Value of option 1 for the variant",
                                "type": "string"
                              },
                              "variant_option2_value": {
                                "description": "Value of option 2 for the variant",
                                "type": "string"
                              },
                              "variant_option3_value": {
                                "description": "Value of option 3 for the variant",
                                "type": "string"
                              },
                              "variant_price": {
                                "description": "Price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_price_bt": {
                                "description": "Price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price": {
                                "description": "Reseller price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price_bt": {
                                "description": "Reseller price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_sku": {
                                "description": "SKU of the variant",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Weight of the product",
                                "format": "float",
                                "type": "number"
                              }
                            },
                            "title": "OrderLine",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "shipment_status": {
                          "description": "Current shipment status of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "kwai_pixel_ids": {
                          "description": "Kwai pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "cogs_bt": {
                          "description": "Cost of goods sold for the order minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "sub_payment_method": {
                          "description": "Xendit VA bank code",
                          "enum": [
                            "BCA",
                            "BNI",
                            "BRI",
                            "MANDIRI",
                            "PERMATA",
                            "BSI",
                            "BJB",
                            "CIMB",
                            "SAHABAT_SAMPOERNA",
                            "ARTAJASA"
                          ],
                          "type": "string"
                        },
                        "payment_fee": {
                          "description": "Payment fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "channel_name": {
                          "description": "Channel name of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_rate": {
                          "description": "Discount rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "final_variants": {
                          "additionalProperties": true,
                          "description": "Final variants of the order after bundle options",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_name": {
                          "description": "Name of other income source",
                          "nullable": true,
                          "type": "string"
                        },
                        "gross_revenue": {
                          "description": "Gross revenue of the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tags": {
                          "description": "Tags associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "discount_code_id": {
                          "description": "Discount code ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "other_income": {
                          "description": "Other income amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_weight": {
                          "description": "Total weight of the order including weight bump",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_probably_spam": {
                          "description": "Is probably spam",
                          "type": "boolean"
                        },
                        "external_id": {
                          "description": "External ID of the order",
                          "type": "string"
                        },
                        "payment_status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_discount": {
                          "description": "Discount code discount amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_discount_bt": {
                          "description": "Total product discount applied minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "store": {
                          "properties": {
                            "auto_expire_days": {
                              "description": "Days until auto-expire",
                              "type": "integer"
                            },
                            "auto_other_income": {
                              "description": "Is auto other income enabled?",
                              "type": "boolean"
                            },
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "capi_purchase_value_type": {
                              "description": "Type of CAPI purchase value",
                              "enum": [
                                "gross_revenue",
                                "net_revenue",
                                "adj_gross_revenue"
                              ],
                              "type": "string"
                            },
                            "cod_purchase_triggers": {
                              "description": "COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "dynamic_other_income_cod_default_amount": {
                              "description": "Default amount for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_default_percentage": {
                              "description": "Default percentage for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "dynamic_other_income_epayment_default_amount": {
                              "description": "Default amount for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_default_percentage": {
                              "description": "Default percentage for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "fixed_auto_other_income": {
                              "description": "Is fixed auto other income enabled?",
                              "type": "boolean"
                            },
                            "id": {
                              "description": "Store ID",
                              "type": "integer"
                            },
                            "is_active": {
                              "description": "Is the store active?",
                              "type": "boolean"
                            },
                            "is_auto_expire": {
                              "description": "Is auto-expire enabled?",
                              "type": "boolean"
                            },
                            "is_discount_editable": {
                              "description": "Is discount editable?",
                              "type": "boolean"
                            },
                            "is_dropshipping_allowed": {
                              "description": "Is dropshipping allowed in this store?",
                              "type": "boolean"
                            },
                            "is_moota_enabled": {
                              "description": "Is Moota integration enabled for this store?",
                              "type": "boolean"
                            },
                            "is_postal_code": {
                              "description": "Is postal code required for orders?",
                              "type": "boolean"
                            },
                            "is_transferproof_required": {
                              "description": "Is transfer proof required for orders in this store?",
                              "type": "boolean"
                            },
                            "is_unique_code": {
                              "description": "Is unique code required for orders?",
                              "type": "boolean"
                            },
                            "is_use_waba": {
                              "description": "Is WABA integration enabled?",
                              "type": "boolean"
                            },
                            "max_unique_code_amount": {
                              "description": "Maximum amount for unique code orders",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the store",
                              "type": "string"
                            },
                            "non_cod_purchase_triggers": {
                              "description": "Non-COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "other_income_name": {
                              "description": "Name of the other income",
                              "type": "string"
                            },
                            "postal_code_requirement": {
                              "description": "Postal code requirement options",
                              "enum": [
                                "autofill",
                                "manual"
                              ],
                              "type": "string"
                            },
                            "store_courier_other_incomes": {
                              "description": "Other incomes for store couriers",
                              "items": {
                                "description": "Store Courier Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "courier_id": {
                                    "description": "Courier ID",
                                    "type": "integer"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "type": {
                                    "description": "Type of other income",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "courier_id",
                                  "type"
                                ],
                                "title": "StoreCourierOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "store_method_other_incomes": {
                              "description": "Other incomes for store methods",
                              "items": {
                                "description": "Store Payment Method Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "payment_method": {
                                    "description": "Payment Method",
                                    "type": "string"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "sub_payment_method": {
                                    "description": "Sub Payment Method",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type of amount (fixed or percentage)",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "payment_method",
                                  "type"
                                ],
                                "title": "StorePaymentMethodOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "sub_payment_methods": {
                              "description": "Xendit VA bank codes",
                              "items": {
                                "description": "Xendit VA bank code",
                                "enum": [
                                  "BCA",
                                  "BNI",
                                  "BRI",
                                  "MANDIRI",
                                  "PERMATA",
                                  "BSI",
                                  "BJB",
                                  "CIMB",
                                  "SAHABAT_SAMPOERNA",
                                  "ARTAJASA"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the store",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "UUID of the store",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderStore",
                          "type": "object"
                        },
                        "pg_payment_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway payment info",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_bt": {
                          "description": "Other income amount minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "courier_service": {
                          "properties": {
                            "code": {
                              "description": "Code for the courier service",
                              "type": "string"
                            },
                            "code_co": {
                              "description": "Code for CO courier service",
                              "type": "string"
                            },
                            "code_ka": {
                              "description": "Code for KA courier service",
                              "type": "string"
                            },
                            "code_lincah": {
                              "description": "Code for Lincah courier service",
                              "type": "string"
                            },
                            "code_mengantar": {
                              "description": "Code for Mengantar courier service",
                              "type": "string"
                            },
                            "code_ro": {
                              "description": "Code for RO courier service",
                              "type": "string"
                            },
                            "courier": {
                              "properties": {
                                "code": {
                                  "description": "Courier code",
                                  "type": "string"
                                },
                                "code_ka": {
                                  "description": "Courier code in Georgian",
                                  "type": "string"
                                },
                                "code_lincah": {
                                  "description": "Courier code in Lincah",
                                  "type": "string"
                                },
                                "code_mengantar": {
                                  "description": "Courier code for Mengantar",
                                  "type": "string"
                                },
                                "code_ro": {
                                  "description": "Courier code in Romanian",
                                  "type": "string"
                                },
                                "courier_type": {
                                  "description": "Type of the courier",
                                  "enum": [
                                    "delivery",
                                    "pickup"
                                  ],
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Courier ID",
                                  "type": "integer"
                                },
                                "is_pickup": {
                                  "description": "Is this a pickup courier?",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "Courier name",
                                  "type": "string"
                                }
                              },
                              "title": "Courier",
                              "type": "object"
                            },
                            "id": {
                              "description": "Courier Service ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the courier service",
                              "type": "string"
                            }
                          },
                          "title": "CourierService",
                          "type": "object"
                        },
                        "mark_as_spam_by": {
                          "description": "Who marked as spam",
                          "type": "string"
                        },
                        "net_payment_revenue": {
                          "description": "Net payment revenue after fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "rts_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "min_payment_fee": {
                          "description": "Minimum payment fee applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "analytics_purchases": {
                          "description": "Analytics purchases associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Analytics Purchase ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the analytics purchase was created",
                                "format": "date-time",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Order ID associated with the analytics purchase",
                                "type": "integer"
                              },
                              "payload": {
                                "additionalProperties": true,
                                "description": "Payload data of the analytics purchase",
                                "type": "object"
                              },
                              "pixel_id": {
                                "description": "Pixel ID associated with the purchase",
                                "type": "string"
                              },
                              "platform": {
                                "description": "Platform of the analytics purchase",
                                "type": "string"
                              },
                              "response": {
                                "additionalProperties": true,
                                "description": "Response data from the analytics purchase",
                                "type": "object"
                              },
                              "updated_at": {
                                "description": "Timestamp when the analytics purchase was last updated",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "AnalyticsPurchase",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_from_form": {
                          "description": "Is from form submission",
                          "type": "boolean"
                        },
                        "secret_slug": {
                          "description": "Secret slug of the order",
                          "type": "string"
                        },
                        "shipping_fee": {
                          "description": "Shipping fee charged for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tax_rate": {
                          "description": "Tax rate applied to the order",
                          "format": "float",
                          "nullable": true,
                          "type": "number"
                        },
                        "draft_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "last_updated_at": {
                          "description": "Last updated timestamp of the order",
                          "format": "date-time",
                          "type": "string"
                        },
                        "courier_additional_info": {
                          "description": "Additional information for the courier",
                          "nullable": true,
                          "type": "string"
                        },
                        "closed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "financial_entity": {
                          "properties": {
                            "code": {
                              "description": "Code of the financial entity",
                              "type": "string"
                            },
                            "duitku_code": {
                              "description": "Duitku code for the financial entity",
                              "type": "string"
                            },
                            "entity_type": {
                              "description": "Type of the financial entity",
                              "type": "string"
                            },
                            "id": {
                              "description": "Financial Entity ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the financial entity",
                              "type": "string"
                            },
                            "platform": {
                              "description": "Platform associated with the financial entity",
                              "type": "string"
                            },
                            "xendit_code": {
                              "description": "Xendit code for the financial entity",
                              "type": "string"
                            }
                          },
                          "title": "FinancialEntity",
                          "type": "object"
                        },
                        "page": {
                          "properties": {
                            "id": {
                              "description": "Page ID",
                              "type": "integer"
                            },
                            "is_published": {
                              "description": "Is the page published?",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Name of the page",
                              "type": "string"
                            },
                            "published_at": {
                              "description": "Publication date of the page",
                              "format": "date-time",
                              "type": "string"
                            },
                            "slug": {
                              "description": "Slug for the page URL",
                              "type": "string"
                            },
                            "store_id": {
                              "description": "ID of the store the page belongs to",
                              "type": "integer"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the page",
                              "type": "string"
                            }
                          },
                          "title": "PageSimple",
                          "type": "object"
                        },
                        "product_price_bt": {
                          "description": "Total product price before discounts minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_purchase_fb": {
                          "description": "Is this order a Facebook purchase",
                          "type": "boolean"
                        },
                        "product_weight": {
                          "description": "Total weight of products in the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "completed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "utm_source": {
                          "description": "UTM source of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_account_holder": {
                          "description": "Payment account holder name",
                          "nullable": true,
                          "type": "string"
                        },
                        "ip": {
                          "description": "IP address of the customer who placed the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipment_receipt": {
                          "description": "Shipment receipt URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "message_history": {
                          "description": "Message history associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "ID of the Follow Up Chat",
                                "type": "integer"
                              },
                              "is_from_bot": {
                                "description": "Is the message from bot",
                                "type": "boolean"
                              },
                              "message": {
                                "description": "Message content",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the sender",
                                "type": "string"
                              },
                              "provider": {
                                "description": "Message provider",
                                "type": "string"
                              },
                              "recipient_name": {
                                "description": "Recipient name",
                                "type": "string"
                              },
                              "recipient_phone": {
                                "description": "Recipient phone number",
                                "type": "string"
                              },
                              "sender_name": {
                                "description": "Sender name",
                                "type": "string"
                              },
                              "sender_phone": {
                                "description": "Sender phone number",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the message",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "MessageHistoryItem",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "payment_status": {
                          "description": "Order payment status",
                          "enum": [
                            "unpaid",
                            "paid",
                            "conflict",
                            "settled"
                          ],
                          "type": "string"
                        },
                        "shipment_provider_code": {
                          "description": "Shipment provider code",
                          "enum": [
                            "mengantar",
                            "lincah",
                            "ninja"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Metadata associated with the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "rtsproof_url": {
                          "description": "RTS proof URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_code_applied_to": {
                          "description": "What the discount code was applied to",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipped_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_ca_status": {
                          "description": "Order AWB courier aggregator status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "created_at": {
                          "description": "Order creation timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "pending_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "notes": {
                          "description": "Notes or comments for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "destination_address": {
                          "properties": {
                            "address": {
                              "description": "Full address",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Order Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the recipient",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Phone number of the recipient",
                              "type": "string"
                            },
                            "postal_code": {
                              "description": "Postal code of the address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the address",
                              "type": "string"
                            }
                          },
                          "title": "OrderAddress",
                          "type": "object"
                        },
                        "unique_code_discount": {
                          "description": "Unique code discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipping_fee_discount": {
                          "description": "Shipping fee discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        }
                      },
                      "title": "Order",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Order updated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_order"
            ]
          }
        ],
        "summary": "Update an existing order",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}/actions": {
      "get": {
        "callbacks": {},
        "description": "Retrieve flags to determine available actions for an order.",
        "operationId": "ScalevApiWeb.OrderViewController.get_available_actions",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "is_digital_product_present": {
                          "type": "boolean"
                        },
                        "is_physical_product_present": {
                          "type": "boolean"
                        },
                        "order_id": {
                          "type": "string"
                        }
                      },
                      "title": "OrderAvailableActions",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Available actions"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_order"
            ]
          }
        ],
        "summary": "Get available actions for order",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}/chat/{chat_id}": {
      "get": {
        "callbacks": {},
        "description": "Retrieve a specific chat text message.",
        "operationId": "ScalevApiWeb.OrderViewController.get_one_chat_text",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Chat ID",
            "in": "path",
            "name": "chat_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "change_status": {
                          "description": "Triggered after order status change to this status",
                          "type": "boolean"
                        },
                        "hours_after": {
                          "description": "Hours after which the follow-up chat is sent",
                          "type": "integer"
                        },
                        "id": {
                          "description": "Follow-up chat ID",
                          "type": "integer"
                        },
                        "image": {
                          "description": "Image URL for the follow-up chat",
                          "format": "uri",
                          "type": "string"
                        },
                        "is_default": {
                          "description": "Is this a default follow-up chat",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Name of the follow-up chat",
                          "type": "string"
                        },
                        "provider": {
                          "description": "Provider of the follow-up chat",
                          "type": "string"
                        },
                        "text": {
                          "description": "Text of the follow-up chat",
                          "type": "string"
                        },
                        "text_url": {
                          "description": "URL encoded text of the follow-up chat",
                          "type": "string"
                        },
                        "trigger": {
                          "description": "Trigger for the follow-up chat",
                          "type": "string"
                        },
                        "wa_integration_id": {
                          "description": "WhatsApp integration ID for the follow-up chat",
                          "type": "integer"
                        }
                      },
                      "title": "FollowUpChatDetail",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Chat text retrieved"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_order"
            ]
          }
        ],
        "summary": "Get specific chat text",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}/chats": {
      "get": {
        "callbacks": {},
        "description": "Retrieve chat text messages associated with an order.",
        "operationId": "ScalevApiWeb.OrderViewController.get_chat_text",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "chat_message": {
                          "description": "Chat message associated with the order",
                          "type": "string"
                        },
                        "follow_up_chat_type": {
                          "description": "Type of follow-up chat for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "follow_up_chats": {
                          "items": {
                            "properties": {
                              "change_status": {
                                "description": "Triggered after order status change to this status",
                                "type": "boolean"
                              },
                              "hours_after": {
                                "description": "Hours after which the follow-up chat is sent",
                                "type": "integer"
                              },
                              "id": {
                                "description": "Follow-up chat ID",
                                "type": "integer"
                              },
                              "image": {
                                "description": "Image URL for the follow-up chat",
                                "format": "uri",
                                "type": "string"
                              },
                              "is_default": {
                                "description": "Is this a default follow-up chat",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name of the follow-up chat",
                                "type": "string"
                              },
                              "provider": {
                                "description": "Provider of the follow-up chat",
                                "type": "string"
                              },
                              "text": {
                                "description": "Text of the follow-up chat",
                                "type": "string"
                              },
                              "text_url": {
                                "description": "URL encoded text of the follow-up chat",
                                "type": "string"
                              },
                              "trigger": {
                                "description": "Trigger for the follow-up chat",
                                "type": "string"
                              },
                              "wa_integration_id": {
                                "description": "WhatsApp integration ID for the follow-up chat",
                                "type": "integer"
                              }
                            },
                            "title": "FollowUpChatDetail",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Order primary key",
                          "type": "integer"
                        },
                        "is_probably_spam": {
                          "description": "Is probably spam",
                          "type": "boolean"
                        },
                        "mark_as_spam_by": {
                          "description": "Who marked as spam",
                          "nullable": true,
                          "type": "string"
                        },
                        "order_id": {
                          "description": "Order ID in string format",
                          "type": "string"
                        },
                        "payment_status": {
                          "description": "Order payment status",
                          "enum": [
                            "unpaid",
                            "paid",
                            "conflict",
                            "settled"
                          ],
                          "type": "string"
                        },
                        "secret_slug": {
                          "description": "Secret slug of the order",
                          "type": "string"
                        },
                        "status": {
                          "description": "Order status",
                          "enum": [
                            "draft",
                            "pending",
                            "confirmed",
                            "in_process",
                            "ready",
                            "shipped",
                            "completed",
                            "canceled",
                            "rts",
                            "closed"
                          ],
                          "type": "string"
                        }
                      },
                      "title": "OrderChat",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Chat text retrieved"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_order"
            ]
          }
        ],
        "summary": "Get chat text for order",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}/check-payment": {
      "post": {
        "callbacks": {},
        "description": "Check the payment status of an order.",
        "operationId": "ScalevApiWeb.OrderViewController.check_order_payment",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "gross_revenue_for_dropshipper": {
                          "description": "Gross revenue for dropshipper after discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "advertiser": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "cogs": {
                          "description": "Cost of goods sold for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "dropshipper_name": {
                          "description": "Name of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "transferproof_url": {
                          "description": "Transfer proof URL",
                          "nullable": true,
                          "type": "string"
                        },
                        "scalev_fee": {
                          "description": "Scalev fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipment_status_history": {
                          "items": {
                            "properties": {
                              "description": {
                                "description": "Description of the status update",
                                "type": "string"
                              },
                              "status": {
                                "description": "Current status of the shipment",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the status update",
                                "format": "date-time",
                                "type": "string"
                              },
                              "timestamp_source": {
                                "description": "Source of the timestamp",
                                "type": "string"
                              }
                            },
                            "title": "ShipmentStatusHistory",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_code": {
                          "description": "Discount code used in the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "ready_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "warehouse": {
                          "properties": {
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "contact_name": {
                              "description": "Contact name at the warehouse",
                              "type": "string"
                            },
                            "contact_phone": {
                              "description": "Contact phone number at the warehouse",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the warehouse",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderWarehouse",
                          "type": "object"
                        },
                        "payment_fee_rate": {
                          "description": "Payment fee rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "pg_paid_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway paid info",
                          "nullable": true,
                          "type": "object"
                        },
                        "transfer_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "dropshipper_phone": {
                          "description": "Phone number of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipping_cost": {
                          "description": "Shipping cost for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_price": {
                          "description": "Total product price before discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "total_quantity": {
                          "description": "Total quantity of items in the order",
                          "type": "integer"
                        },
                        "net_revenue": {
                          "description": "Net revenue after all discounts and fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "bundle_price_options": {
                          "additionalProperties": true,
                          "description": "Bundle price options for the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "customer": {
                          "properties": {
                            "confirmed_at": {
                              "description": "Confirmation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "created_at": {
                              "description": "Creation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "email": {
                              "description": "Customer email",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Customer ID",
                              "type": "integer"
                            },
                            "last_updated_at": {
                              "description": "Last update timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "description": "Customer name",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Customer phone number",
                              "type": "string"
                            },
                            "status": {
                              "description": "Customer status",
                              "type": "string"
                            }
                          },
                          "title": "CustomerOrder",
                          "type": "object"
                        },
                        "variants": {
                          "additionalProperties": true,
                          "description": "Variants of the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "chat_message": {
                          "description": "Chat message associated with the order",
                          "type": "string"
                        },
                        "handler_phone": {
                          "description": "Handler phone number",
                          "nullable": true,
                          "type": "string"
                        },
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "order_emails": {
                          "description": "Order emails associated with the order",
                          "items": {
                            "properties": {
                              "from": {
                                "description": "Sender email address",
                                "type": "string"
                              },
                              "id": {
                                "description": "Order email ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Email creation timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "message_id": {
                                "description": "Message ID of the email",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Associated order primary key",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Email status",
                                "type": "string"
                              },
                              "status_history": {
                                "items": {
                                  "properties": {
                                    "status": {
                                      "description": "Email status",
                                      "type": "string"
                                    },
                                    "timestamp": {
                                      "description": "Timestamp of the status change",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "subject": {
                                "description": "Email subject",
                                "type": "string"
                              },
                              "to": {
                                "description": "Recipient email address",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the email",
                                "type": "string"
                              },
                              "updated_at": {
                                "description": "Last update timestamp of the email",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "OrderEmail",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "order_id": {
                          "description": "Order ID in string format",
                          "type": "string"
                        },
                        "product_discount": {
                          "description": "Total product discount applied",
                          "format": "decimal",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "handler": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "payment_account_number": {
                          "description": "Payment account number",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_method": {
                          "description": "Order payment method",
                          "enum": [
                            "gopay",
                            "va",
                            "qris",
                            "card",
                            "invoice",
                            "alfamart",
                            "ovo",
                            "dana",
                            "shopeepay",
                            "linkaja",
                            "no_payment",
                            "bank_transfer",
                            "marketplace",
                            "cod"
                          ],
                          "type": "string"
                        },
                        "courier": {
                          "description": "Courier ID for the order",
                          "nullable": true,
                          "type": "integer"
                        },
                        "origin_address": {
                          "properties": {
                            "address": {
                              "description": "Full address of the warehouse",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the warehouse address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "location_id": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "postal_code": {
                              "description": "Postal code of the warehouse address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the warehouse address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the warehouse address",
                              "type": "string"
                            },
                            "warehouse": {
                              "description": "ID of the associated warehouse",
                              "type": "integer"
                            }
                          },
                          "title": "WarehouseAddress",
                          "type": "object"
                        },
                        "epayment_provider": {
                          "description": "E-payment provider",
                          "nullable": true,
                          "type": "string"
                        },
                        "in_process_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "pg_reference_id": {
                          "description": "Payment gateway reference ID",
                          "nullable": true,
                          "type": "string"
                        },
                        "weight_bump": {
                          "description": "Weight bump added to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "follow_up_chat_type": {
                          "description": "Type of follow-up chat for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_status": {
                          "description": "Order AWB status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "platform": {
                          "description": "Platform of the order",
                          "type": "string"
                        },
                        "follow_up_chats": {
                          "items": {
                            "properties": {
                              "bundle_id": {
                                "description": "Bundle ID associated with the chat",
                                "type": "integer"
                              },
                              "change_status": {
                                "description": "Change status after follow up chat",
                                "type": "boolean"
                              },
                              "hours_after": {
                                "description": "Hours after which the follow up chat is triggered",
                                "type": "integer"
                              },
                              "id": {
                                "description": "Follow Up Chat ID",
                                "type": "integer"
                              },
                              "image": {
                                "description": "Image URL for the follow up chat",
                                "format": "uri",
                                "type": "string"
                              },
                              "is_default": {
                                "description": "Is this a default follow up chat?",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name of the follow up chat",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "Product ID associated with the chat",
                                "type": "integer"
                              },
                              "provider": {
                                "description": "Provider of the follow up chat service",
                                "type": "string"
                              },
                              "store_id": {
                                "description": "Store ID associated with the chat",
                                "type": "integer"
                              },
                              "trigger": {
                                "description": "Trigger condition for the follow up chat",
                                "type": "string"
                              }
                            },
                            "title": "FollowUpChat",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_purchase_kwai": {
                          "description": "Is this order a Kwai purchase",
                          "type": "boolean"
                        },
                        "shipping_discount": {
                          "description": "Shipping discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "conflict_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "paid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "confirmed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "canceled_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "status": {
                          "description": "Order status",
                          "enum": [
                            "draft",
                            "pending",
                            "confirmed",
                            "in_process",
                            "ready",
                            "shipped",
                            "completed",
                            "canceled",
                            "rts",
                            "closed"
                          ],
                          "type": "string"
                        },
                        "is_dropshipping": {
                          "description": "Is the order a dropshipping order",
                          "type": "boolean"
                        },
                        "payment_account_id": {
                          "description": "Payment account ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "is_repeat": {
                          "description": "Is repeat order",
                          "type": "boolean"
                        },
                        "tiktok_pixel_ids": {
                          "description": "TikTok pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "fb_pixel_ids": {
                          "description": "Facebook pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Order primary key",
                          "type": "integer"
                        },
                        "unpaid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "is_purchase_tiktok": {
                          "description": "Is this order a TikTok purchase",
                          "type": "boolean"
                        },
                        "orderlines": {
                          "items": {
                            "properties": {
                              "cogs": {
                                "description": "Cost of Goods Sold for this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "cogs_bt": {
                                "description": "COGS for this order line minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount": {
                                "description": "Discount amount applied",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_bt": {
                                "description": "Discount amount minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount": {
                                "description": "Discount from a discount code",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount_bt": {
                                "description": "Discount from a discount code minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_rate": {
                                "description": "Discount rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "id": {
                                "description": "Order Line ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the order line was created",
                                "example": "2023-10-01T12:00:00Z",
                                "format": "date-time",
                                "type": "string"
                              },
                              "is_inventory": {
                                "description": "Is this order line related to inventory?",
                                "type": "boolean"
                              },
                              "item_type": {
                                "description": "Type of the item",
                                "type": "string"
                              },
                              "product_business": {
                                "description": "Business ID of the product",
                                "type": "integer"
                              },
                              "product_name": {
                                "description": "Name of the product",
                                "type": "string"
                              },
                              "product_price": {
                                "description": "Price of the product before discounts",
                                "format": "float",
                                "type": "number"
                              },
                              "product_price_bt": {
                                "description": "Price of the product before discounts minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "quantity": {
                                "description": "Quantity of the item",
                                "type": "integer"
                              },
                              "reseller_product_price": {
                                "description": "Reseller price of the product",
                                "format": "float",
                                "type": "number"
                              },
                              "reseller_product_price_bt": {
                                "description": "Reseller price of the product minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "tax_rate": {
                                "description": "Tax rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "variant": {
                                "description": "Variant ID",
                                "type": "integer"
                              },
                              "variant_cogs": {
                                "description": "COGS of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_cogs_bt": {
                                "description": "COGS of the varian minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_option1_value": {
                                "description": "Value of option 1 for the variant",
                                "type": "string"
                              },
                              "variant_option2_value": {
                                "description": "Value of option 2 for the variant",
                                "type": "string"
                              },
                              "variant_option3_value": {
                                "description": "Value of option 3 for the variant",
                                "type": "string"
                              },
                              "variant_price": {
                                "description": "Price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_price_bt": {
                                "description": "Price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price": {
                                "description": "Reseller price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price_bt": {
                                "description": "Reseller price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_sku": {
                                "description": "SKU of the variant",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Weight of the product",
                                "format": "float",
                                "type": "number"
                              }
                            },
                            "title": "OrderLine",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "shipment_status": {
                          "description": "Current shipment status of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "kwai_pixel_ids": {
                          "description": "Kwai pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "cogs_bt": {
                          "description": "Cost of goods sold for the order minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "sub_payment_method": {
                          "description": "Xendit VA bank code",
                          "enum": [
                            "BCA",
                            "BNI",
                            "BRI",
                            "MANDIRI",
                            "PERMATA",
                            "BSI",
                            "BJB",
                            "CIMB",
                            "SAHABAT_SAMPOERNA",
                            "ARTAJASA"
                          ],
                          "type": "string"
                        },
                        "payment_fee": {
                          "description": "Payment fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "channel_name": {
                          "description": "Channel name of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_rate": {
                          "description": "Discount rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "final_variants": {
                          "additionalProperties": true,
                          "description": "Final variants of the order after bundle options",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_name": {
                          "description": "Name of other income source",
                          "nullable": true,
                          "type": "string"
                        },
                        "gross_revenue": {
                          "description": "Gross revenue of the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tags": {
                          "description": "Tags associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "discount_code_id": {
                          "description": "Discount code ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "other_income": {
                          "description": "Other income amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_weight": {
                          "description": "Total weight of the order including weight bump",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_probably_spam": {
                          "description": "Is probably spam",
                          "type": "boolean"
                        },
                        "external_id": {
                          "description": "External ID of the order",
                          "type": "string"
                        },
                        "payment_status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_discount": {
                          "description": "Discount code discount amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_discount_bt": {
                          "description": "Total product discount applied minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "store": {
                          "properties": {
                            "auto_expire_days": {
                              "description": "Days until auto-expire",
                              "type": "integer"
                            },
                            "auto_other_income": {
                              "description": "Is auto other income enabled?",
                              "type": "boolean"
                            },
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "capi_purchase_value_type": {
                              "description": "Type of CAPI purchase value",
                              "enum": [
                                "gross_revenue",
                                "net_revenue",
                                "adj_gross_revenue"
                              ],
                              "type": "string"
                            },
                            "cod_purchase_triggers": {
                              "description": "COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "dynamic_other_income_cod_default_amount": {
                              "description": "Default amount for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_default_percentage": {
                              "description": "Default percentage for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "dynamic_other_income_epayment_default_amount": {
                              "description": "Default amount for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_default_percentage": {
                              "description": "Default percentage for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "fixed_auto_other_income": {
                              "description": "Is fixed auto other income enabled?",
                              "type": "boolean"
                            },
                            "id": {
                              "description": "Store ID",
                              "type": "integer"
                            },
                            "is_active": {
                              "description": "Is the store active?",
                              "type": "boolean"
                            },
                            "is_auto_expire": {
                              "description": "Is auto-expire enabled?",
                              "type": "boolean"
                            },
                            "is_discount_editable": {
                              "description": "Is discount editable?",
                              "type": "boolean"
                            },
                            "is_dropshipping_allowed": {
                              "description": "Is dropshipping allowed in this store?",
                              "type": "boolean"
                            },
                            "is_moota_enabled": {
                              "description": "Is Moota integration enabled for this store?",
                              "type": "boolean"
                            },
                            "is_postal_code": {
                              "description": "Is postal code required for orders?",
                              "type": "boolean"
                            },
                            "is_transferproof_required": {
                              "description": "Is transfer proof required for orders in this store?",
                              "type": "boolean"
                            },
                            "is_unique_code": {
                              "description": "Is unique code required for orders?",
                              "type": "boolean"
                            },
                            "is_use_waba": {
                              "description": "Is WABA integration enabled?",
                              "type": "boolean"
                            },
                            "max_unique_code_amount": {
                              "description": "Maximum amount for unique code orders",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the store",
                              "type": "string"
                            },
                            "non_cod_purchase_triggers": {
                              "description": "Non-COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "other_income_name": {
                              "description": "Name of the other income",
                              "type": "string"
                            },
                            "postal_code_requirement": {
                              "description": "Postal code requirement options",
                              "enum": [
                                "autofill",
                                "manual"
                              ],
                              "type": "string"
                            },
                            "store_courier_other_incomes": {
                              "description": "Other incomes for store couriers",
                              "items": {
                                "description": "Store Courier Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "courier_id": {
                                    "description": "Courier ID",
                                    "type": "integer"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "type": {
                                    "description": "Type of other income",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "courier_id",
                                  "type"
                                ],
                                "title": "StoreCourierOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "store_method_other_incomes": {
                              "description": "Other incomes for store methods",
                              "items": {
                                "description": "Store Payment Method Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "payment_method": {
                                    "description": "Payment Method",
                                    "type": "string"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "sub_payment_method": {
                                    "description": "Sub Payment Method",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type of amount (fixed or percentage)",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "payment_method",
                                  "type"
                                ],
                                "title": "StorePaymentMethodOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "sub_payment_methods": {
                              "description": "Xendit VA bank codes",
                              "items": {
                                "description": "Xendit VA bank code",
                                "enum": [
                                  "BCA",
                                  "BNI",
                                  "BRI",
                                  "MANDIRI",
                                  "PERMATA",
                                  "BSI",
                                  "BJB",
                                  "CIMB",
                                  "SAHABAT_SAMPOERNA",
                                  "ARTAJASA"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the store",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "UUID of the store",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderStore",
                          "type": "object"
                        },
                        "pg_payment_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway payment info",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_bt": {
                          "description": "Other income amount minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "courier_service": {
                          "properties": {
                            "code": {
                              "description": "Code for the courier service",
                              "type": "string"
                            },
                            "code_co": {
                              "description": "Code for CO courier service",
                              "type": "string"
                            },
                            "code_ka": {
                              "description": "Code for KA courier service",
                              "type": "string"
                            },
                            "code_lincah": {
                              "description": "Code for Lincah courier service",
                              "type": "string"
                            },
                            "code_mengantar": {
                              "description": "Code for Mengantar courier service",
                              "type": "string"
                            },
                            "code_ro": {
                              "description": "Code for RO courier service",
                              "type": "string"
                            },
                            "courier": {
                              "properties": {
                                "code": {
                                  "description": "Courier code",
                                  "type": "string"
                                },
                                "code_ka": {
                                  "description": "Courier code in Georgian",
                                  "type": "string"
                                },
                                "code_lincah": {
                                  "description": "Courier code in Lincah",
                                  "type": "string"
                                },
                                "code_mengantar": {
                                  "description": "Courier code for Mengantar",
                                  "type": "string"
                                },
                                "code_ro": {
                                  "description": "Courier code in Romanian",
                                  "type": "string"
                                },
                                "courier_type": {
                                  "description": "Type of the courier",
                                  "enum": [
                                    "delivery",
                                    "pickup"
                                  ],
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Courier ID",
                                  "type": "integer"
                                },
                                "is_pickup": {
                                  "description": "Is this a pickup courier?",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "Courier name",
                                  "type": "string"
                                }
                              },
                              "title": "Courier",
                              "type": "object"
                            },
                            "id": {
                              "description": "Courier Service ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the courier service",
                              "type": "string"
                            }
                          },
                          "title": "CourierService",
                          "type": "object"
                        },
                        "mark_as_spam_by": {
                          "description": "Who marked as spam",
                          "type": "string"
                        },
                        "net_payment_revenue": {
                          "description": "Net payment revenue after fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "rts_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "min_payment_fee": {
                          "description": "Minimum payment fee applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "analytics_purchases": {
                          "description": "Analytics purchases associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Analytics Purchase ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the analytics purchase was created",
                                "format": "date-time",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Order ID associated with the analytics purchase",
                                "type": "integer"
                              },
                              "payload": {
                                "additionalProperties": true,
                                "description": "Payload data of the analytics purchase",
                                "type": "object"
                              },
                              "pixel_id": {
                                "description": "Pixel ID associated with the purchase",
                                "type": "string"
                              },
                              "platform": {
                                "description": "Platform of the analytics purchase",
                                "type": "string"
                              },
                              "response": {
                                "additionalProperties": true,
                                "description": "Response data from the analytics purchase",
                                "type": "object"
                              },
                              "updated_at": {
                                "description": "Timestamp when the analytics purchase was last updated",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "AnalyticsPurchase",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_from_form": {
                          "description": "Is from form submission",
                          "type": "boolean"
                        },
                        "secret_slug": {
                          "description": "Secret slug of the order",
                          "type": "string"
                        },
                        "shipping_fee": {
                          "description": "Shipping fee charged for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tax_rate": {
                          "description": "Tax rate applied to the order",
                          "format": "float",
                          "nullable": true,
                          "type": "number"
                        },
                        "draft_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "last_updated_at": {
                          "description": "Last updated timestamp of the order",
                          "format": "date-time",
                          "type": "string"
                        },
                        "courier_additional_info": {
                          "description": "Additional information for the courier",
                          "nullable": true,
                          "type": "string"
                        },
                        "closed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "financial_entity": {
                          "properties": {
                            "code": {
                              "description": "Code of the financial entity",
                              "type": "string"
                            },
                            "duitku_code": {
                              "description": "Duitku code for the financial entity",
                              "type": "string"
                            },
                            "entity_type": {
                              "description": "Type of the financial entity",
                              "type": "string"
                            },
                            "id": {
                              "description": "Financial Entity ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the financial entity",
                              "type": "string"
                            },
                            "platform": {
                              "description": "Platform associated with the financial entity",
                              "type": "string"
                            },
                            "xendit_code": {
                              "description": "Xendit code for the financial entity",
                              "type": "string"
                            }
                          },
                          "title": "FinancialEntity",
                          "type": "object"
                        },
                        "page": {
                          "properties": {
                            "id": {
                              "description": "Page ID",
                              "type": "integer"
                            },
                            "is_published": {
                              "description": "Is the page published?",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Name of the page",
                              "type": "string"
                            },
                            "published_at": {
                              "description": "Publication date of the page",
                              "format": "date-time",
                              "type": "string"
                            },
                            "slug": {
                              "description": "Slug for the page URL",
                              "type": "string"
                            },
                            "store_id": {
                              "description": "ID of the store the page belongs to",
                              "type": "integer"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the page",
                              "type": "string"
                            }
                          },
                          "title": "PageSimple",
                          "type": "object"
                        },
                        "product_price_bt": {
                          "description": "Total product price before discounts minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_purchase_fb": {
                          "description": "Is this order a Facebook purchase",
                          "type": "boolean"
                        },
                        "product_weight": {
                          "description": "Total weight of products in the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "completed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "utm_source": {
                          "description": "UTM source of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_account_holder": {
                          "description": "Payment account holder name",
                          "nullable": true,
                          "type": "string"
                        },
                        "ip": {
                          "description": "IP address of the customer who placed the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipment_receipt": {
                          "description": "Shipment receipt URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "message_history": {
                          "description": "Message history associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "ID of the Follow Up Chat",
                                "type": "integer"
                              },
                              "is_from_bot": {
                                "description": "Is the message from bot",
                                "type": "boolean"
                              },
                              "message": {
                                "description": "Message content",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the sender",
                                "type": "string"
                              },
                              "provider": {
                                "description": "Message provider",
                                "type": "string"
                              },
                              "recipient_name": {
                                "description": "Recipient name",
                                "type": "string"
                              },
                              "recipient_phone": {
                                "description": "Recipient phone number",
                                "type": "string"
                              },
                              "sender_name": {
                                "description": "Sender name",
                                "type": "string"
                              },
                              "sender_phone": {
                                "description": "Sender phone number",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the message",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "MessageHistoryItem",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "payment_status": {
                          "description": "Order payment status",
                          "enum": [
                            "unpaid",
                            "paid",
                            "conflict",
                            "settled"
                          ],
                          "type": "string"
                        },
                        "shipment_provider_code": {
                          "description": "Shipment provider code",
                          "enum": [
                            "mengantar",
                            "lincah",
                            "ninja"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Metadata associated with the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "rtsproof_url": {
                          "description": "RTS proof URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_code_applied_to": {
                          "description": "What the discount code was applied to",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipped_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_ca_status": {
                          "description": "Order AWB courier aggregator status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "created_at": {
                          "description": "Order creation timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "pending_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "notes": {
                          "description": "Notes or comments for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "destination_address": {
                          "properties": {
                            "address": {
                              "description": "Full address",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Order Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the recipient",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Phone number of the recipient",
                              "type": "string"
                            },
                            "postal_code": {
                              "description": "Postal code of the address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the address",
                              "type": "string"
                            }
                          },
                          "title": "OrderAddress",
                          "type": "object"
                        },
                        "unique_code_discount": {
                          "description": "Unique code discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipping_fee_discount": {
                          "description": "Shipping fee discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        }
                      },
                      "title": "Order",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Payment status checked"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_order"
            ]
          }
        ],
        "summary": "Check order payment status",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}/check-settlement": {
      "post": {
        "callbacks": {},
        "description": "Check the settlement status of an order.",
        "operationId": "ScalevApiWeb.OrderViewController.check_order_settlement",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "gross_revenue_for_dropshipper": {
                          "description": "Gross revenue for dropshipper after discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "advertiser": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "cogs": {
                          "description": "Cost of goods sold for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "dropshipper_name": {
                          "description": "Name of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "transferproof_url": {
                          "description": "Transfer proof URL",
                          "nullable": true,
                          "type": "string"
                        },
                        "scalev_fee": {
                          "description": "Scalev fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipment_status_history": {
                          "items": {
                            "properties": {
                              "description": {
                                "description": "Description of the status update",
                                "type": "string"
                              },
                              "status": {
                                "description": "Current status of the shipment",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the status update",
                                "format": "date-time",
                                "type": "string"
                              },
                              "timestamp_source": {
                                "description": "Source of the timestamp",
                                "type": "string"
                              }
                            },
                            "title": "ShipmentStatusHistory",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_code": {
                          "description": "Discount code used in the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "ready_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "warehouse": {
                          "properties": {
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "contact_name": {
                              "description": "Contact name at the warehouse",
                              "type": "string"
                            },
                            "contact_phone": {
                              "description": "Contact phone number at the warehouse",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the warehouse",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderWarehouse",
                          "type": "object"
                        },
                        "payment_fee_rate": {
                          "description": "Payment fee rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "pg_paid_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway paid info",
                          "nullable": true,
                          "type": "object"
                        },
                        "transfer_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "dropshipper_phone": {
                          "description": "Phone number of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipping_cost": {
                          "description": "Shipping cost for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_price": {
                          "description": "Total product price before discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "total_quantity": {
                          "description": "Total quantity of items in the order",
                          "type": "integer"
                        },
                        "net_revenue": {
                          "description": "Net revenue after all discounts and fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "bundle_price_options": {
                          "additionalProperties": true,
                          "description": "Bundle price options for the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "customer": {
                          "properties": {
                            "confirmed_at": {
                              "description": "Confirmation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "created_at": {
                              "description": "Creation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "email": {
                              "description": "Customer email",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Customer ID",
                              "type": "integer"
                            },
                            "last_updated_at": {
                              "description": "Last update timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "description": "Customer name",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Customer phone number",
                              "type": "string"
                            },
                            "status": {
                              "description": "Customer status",
                              "type": "string"
                            }
                          },
                          "title": "CustomerOrder",
                          "type": "object"
                        },
                        "variants": {
                          "additionalProperties": true,
                          "description": "Variants of the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "chat_message": {
                          "description": "Chat message associated with the order",
                          "type": "string"
                        },
                        "handler_phone": {
                          "description": "Handler phone number",
                          "nullable": true,
                          "type": "string"
                        },
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "order_emails": {
                          "description": "Order emails associated with the order",
                          "items": {
                            "properties": {
                              "from": {
                                "description": "Sender email address",
                                "type": "string"
                              },
                              "id": {
                                "description": "Order email ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Email creation timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "message_id": {
                                "description": "Message ID of the email",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Associated order primary key",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Email status",
                                "type": "string"
                              },
                              "status_history": {
                                "items": {
                                  "properties": {
                                    "status": {
                                      "description": "Email status",
                                      "type": "string"
                                    },
                                    "timestamp": {
                                      "description": "Timestamp of the status change",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "subject": {
                                "description": "Email subject",
                                "type": "string"
                              },
                              "to": {
                                "description": "Recipient email address",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the email",
                                "type": "string"
                              },
                              "updated_at": {
                                "description": "Last update timestamp of the email",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "OrderEmail",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "order_id": {
                          "description": "Order ID in string format",
                          "type": "string"
                        },
                        "product_discount": {
                          "description": "Total product discount applied",
                          "format": "decimal",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "handler": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "payment_account_number": {
                          "description": "Payment account number",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_method": {
                          "description": "Order payment method",
                          "enum": [
                            "gopay",
                            "va",
                            "qris",
                            "card",
                            "invoice",
                            "alfamart",
                            "ovo",
                            "dana",
                            "shopeepay",
                            "linkaja",
                            "no_payment",
                            "bank_transfer",
                            "marketplace",
                            "cod"
                          ],
                          "type": "string"
                        },
                        "courier": {
                          "description": "Courier ID for the order",
                          "nullable": true,
                          "type": "integer"
                        },
                        "origin_address": {
                          "properties": {
                            "address": {
                              "description": "Full address of the warehouse",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the warehouse address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "location_id": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "postal_code": {
                              "description": "Postal code of the warehouse address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the warehouse address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the warehouse address",
                              "type": "string"
                            },
                            "warehouse": {
                              "description": "ID of the associated warehouse",
                              "type": "integer"
                            }
                          },
                          "title": "WarehouseAddress",
                          "type": "object"
                        },
                        "epayment_provider": {
                          "description": "E-payment provider",
                          "nullable": true,
                          "type": "string"
                        },
                        "in_process_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "pg_reference_id": {
                          "description": "Payment gateway reference ID",
                          "nullable": true,
                          "type": "string"
                        },
                        "weight_bump": {
                          "description": "Weight bump added to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "follow_up_chat_type": {
                          "description": "Type of follow-up chat for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_status": {
                          "description": "Order AWB status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "platform": {
                          "description": "Platform of the order",
                          "type": "string"
                        },
                        "follow_up_chats": {
                          "items": {
                            "properties": {
                              "bundle_id": {
                                "description": "Bundle ID associated with the chat",
                                "type": "integer"
                              },
                              "change_status": {
                                "description": "Change status after follow up chat",
                                "type": "boolean"
                              },
                              "hours_after": {
                                "description": "Hours after which the follow up chat is triggered",
                                "type": "integer"
                              },
                              "id": {
                                "description": "Follow Up Chat ID",
                                "type": "integer"
                              },
                              "image": {
                                "description": "Image URL for the follow up chat",
                                "format": "uri",
                                "type": "string"
                              },
                              "is_default": {
                                "description": "Is this a default follow up chat?",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name of the follow up chat",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "Product ID associated with the chat",
                                "type": "integer"
                              },
                              "provider": {
                                "description": "Provider of the follow up chat service",
                                "type": "string"
                              },
                              "store_id": {
                                "description": "Store ID associated with the chat",
                                "type": "integer"
                              },
                              "trigger": {
                                "description": "Trigger condition for the follow up chat",
                                "type": "string"
                              }
                            },
                            "title": "FollowUpChat",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_purchase_kwai": {
                          "description": "Is this order a Kwai purchase",
                          "type": "boolean"
                        },
                        "shipping_discount": {
                          "description": "Shipping discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "conflict_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "paid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "confirmed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "canceled_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "status": {
                          "description": "Order status",
                          "enum": [
                            "draft",
                            "pending",
                            "confirmed",
                            "in_process",
                            "ready",
                            "shipped",
                            "completed",
                            "canceled",
                            "rts",
                            "closed"
                          ],
                          "type": "string"
                        },
                        "is_dropshipping": {
                          "description": "Is the order a dropshipping order",
                          "type": "boolean"
                        },
                        "payment_account_id": {
                          "description": "Payment account ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "is_repeat": {
                          "description": "Is repeat order",
                          "type": "boolean"
                        },
                        "tiktok_pixel_ids": {
                          "description": "TikTok pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "fb_pixel_ids": {
                          "description": "Facebook pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Order primary key",
                          "type": "integer"
                        },
                        "unpaid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "is_purchase_tiktok": {
                          "description": "Is this order a TikTok purchase",
                          "type": "boolean"
                        },
                        "orderlines": {
                          "items": {
                            "properties": {
                              "cogs": {
                                "description": "Cost of Goods Sold for this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "cogs_bt": {
                                "description": "COGS for this order line minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount": {
                                "description": "Discount amount applied",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_bt": {
                                "description": "Discount amount minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount": {
                                "description": "Discount from a discount code",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount_bt": {
                                "description": "Discount from a discount code minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_rate": {
                                "description": "Discount rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "id": {
                                "description": "Order Line ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the order line was created",
                                "example": "2023-10-01T12:00:00Z",
                                "format": "date-time",
                                "type": "string"
                              },
                              "is_inventory": {
                                "description": "Is this order line related to inventory?",
                                "type": "boolean"
                              },
                              "item_type": {
                                "description": "Type of the item",
                                "type": "string"
                              },
                              "product_business": {
                                "description": "Business ID of the product",
                                "type": "integer"
                              },
                              "product_name": {
                                "description": "Name of the product",
                                "type": "string"
                              },
                              "product_price": {
                                "description": "Price of the product before discounts",
                                "format": "float",
                                "type": "number"
                              },
                              "product_price_bt": {
                                "description": "Price of the product before discounts minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "quantity": {
                                "description": "Quantity of the item",
                                "type": "integer"
                              },
                              "reseller_product_price": {
                                "description": "Reseller price of the product",
                                "format": "float",
                                "type": "number"
                              },
                              "reseller_product_price_bt": {
                                "description": "Reseller price of the product minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "tax_rate": {
                                "description": "Tax rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "variant": {
                                "description": "Variant ID",
                                "type": "integer"
                              },
                              "variant_cogs": {
                                "description": "COGS of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_cogs_bt": {
                                "description": "COGS of the varian minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_option1_value": {
                                "description": "Value of option 1 for the variant",
                                "type": "string"
                              },
                              "variant_option2_value": {
                                "description": "Value of option 2 for the variant",
                                "type": "string"
                              },
                              "variant_option3_value": {
                                "description": "Value of option 3 for the variant",
                                "type": "string"
                              },
                              "variant_price": {
                                "description": "Price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_price_bt": {
                                "description": "Price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price": {
                                "description": "Reseller price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price_bt": {
                                "description": "Reseller price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_sku": {
                                "description": "SKU of the variant",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Weight of the product",
                                "format": "float",
                                "type": "number"
                              }
                            },
                            "title": "OrderLine",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "shipment_status": {
                          "description": "Current shipment status of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "kwai_pixel_ids": {
                          "description": "Kwai pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "cogs_bt": {
                          "description": "Cost of goods sold for the order minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "sub_payment_method": {
                          "description": "Xendit VA bank code",
                          "enum": [
                            "BCA",
                            "BNI",
                            "BRI",
                            "MANDIRI",
                            "PERMATA",
                            "BSI",
                            "BJB",
                            "CIMB",
                            "SAHABAT_SAMPOERNA",
                            "ARTAJASA"
                          ],
                          "type": "string"
                        },
                        "payment_fee": {
                          "description": "Payment fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "channel_name": {
                          "description": "Channel name of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_rate": {
                          "description": "Discount rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "final_variants": {
                          "additionalProperties": true,
                          "description": "Final variants of the order after bundle options",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_name": {
                          "description": "Name of other income source",
                          "nullable": true,
                          "type": "string"
                        },
                        "gross_revenue": {
                          "description": "Gross revenue of the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tags": {
                          "description": "Tags associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "discount_code_id": {
                          "description": "Discount code ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "other_income": {
                          "description": "Other income amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_weight": {
                          "description": "Total weight of the order including weight bump",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_probably_spam": {
                          "description": "Is probably spam",
                          "type": "boolean"
                        },
                        "external_id": {
                          "description": "External ID of the order",
                          "type": "string"
                        },
                        "payment_status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_discount": {
                          "description": "Discount code discount amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_discount_bt": {
                          "description": "Total product discount applied minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "store": {
                          "properties": {
                            "auto_expire_days": {
                              "description": "Days until auto-expire",
                              "type": "integer"
                            },
                            "auto_other_income": {
                              "description": "Is auto other income enabled?",
                              "type": "boolean"
                            },
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "capi_purchase_value_type": {
                              "description": "Type of CAPI purchase value",
                              "enum": [
                                "gross_revenue",
                                "net_revenue",
                                "adj_gross_revenue"
                              ],
                              "type": "string"
                            },
                            "cod_purchase_triggers": {
                              "description": "COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "dynamic_other_income_cod_default_amount": {
                              "description": "Default amount for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_default_percentage": {
                              "description": "Default percentage for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "dynamic_other_income_epayment_default_amount": {
                              "description": "Default amount for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_default_percentage": {
                              "description": "Default percentage for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "fixed_auto_other_income": {
                              "description": "Is fixed auto other income enabled?",
                              "type": "boolean"
                            },
                            "id": {
                              "description": "Store ID",
                              "type": "integer"
                            },
                            "is_active": {
                              "description": "Is the store active?",
                              "type": "boolean"
                            },
                            "is_auto_expire": {
                              "description": "Is auto-expire enabled?",
                              "type": "boolean"
                            },
                            "is_discount_editable": {
                              "description": "Is discount editable?",
                              "type": "boolean"
                            },
                            "is_dropshipping_allowed": {
                              "description": "Is dropshipping allowed in this store?",
                              "type": "boolean"
                            },
                            "is_moota_enabled": {
                              "description": "Is Moota integration enabled for this store?",
                              "type": "boolean"
                            },
                            "is_postal_code": {
                              "description": "Is postal code required for orders?",
                              "type": "boolean"
                            },
                            "is_transferproof_required": {
                              "description": "Is transfer proof required for orders in this store?",
                              "type": "boolean"
                            },
                            "is_unique_code": {
                              "description": "Is unique code required for orders?",
                              "type": "boolean"
                            },
                            "is_use_waba": {
                              "description": "Is WABA integration enabled?",
                              "type": "boolean"
                            },
                            "max_unique_code_amount": {
                              "description": "Maximum amount for unique code orders",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the store",
                              "type": "string"
                            },
                            "non_cod_purchase_triggers": {
                              "description": "Non-COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "other_income_name": {
                              "description": "Name of the other income",
                              "type": "string"
                            },
                            "postal_code_requirement": {
                              "description": "Postal code requirement options",
                              "enum": [
                                "autofill",
                                "manual"
                              ],
                              "type": "string"
                            },
                            "store_courier_other_incomes": {
                              "description": "Other incomes for store couriers",
                              "items": {
                                "description": "Store Courier Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "courier_id": {
                                    "description": "Courier ID",
                                    "type": "integer"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "type": {
                                    "description": "Type of other income",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "courier_id",
                                  "type"
                                ],
                                "title": "StoreCourierOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "store_method_other_incomes": {
                              "description": "Other incomes for store methods",
                              "items": {
                                "description": "Store Payment Method Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "payment_method": {
                                    "description": "Payment Method",
                                    "type": "string"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "sub_payment_method": {
                                    "description": "Sub Payment Method",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type of amount (fixed or percentage)",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "payment_method",
                                  "type"
                                ],
                                "title": "StorePaymentMethodOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "sub_payment_methods": {
                              "description": "Xendit VA bank codes",
                              "items": {
                                "description": "Xendit VA bank code",
                                "enum": [
                                  "BCA",
                                  "BNI",
                                  "BRI",
                                  "MANDIRI",
                                  "PERMATA",
                                  "BSI",
                                  "BJB",
                                  "CIMB",
                                  "SAHABAT_SAMPOERNA",
                                  "ARTAJASA"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the store",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "UUID of the store",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderStore",
                          "type": "object"
                        },
                        "pg_payment_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway payment info",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_bt": {
                          "description": "Other income amount minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "courier_service": {
                          "properties": {
                            "code": {
                              "description": "Code for the courier service",
                              "type": "string"
                            },
                            "code_co": {
                              "description": "Code for CO courier service",
                              "type": "string"
                            },
                            "code_ka": {
                              "description": "Code for KA courier service",
                              "type": "string"
                            },
                            "code_lincah": {
                              "description": "Code for Lincah courier service",
                              "type": "string"
                            },
                            "code_mengantar": {
                              "description": "Code for Mengantar courier service",
                              "type": "string"
                            },
                            "code_ro": {
                              "description": "Code for RO courier service",
                              "type": "string"
                            },
                            "courier": {
                              "properties": {
                                "code": {
                                  "description": "Courier code",
                                  "type": "string"
                                },
                                "code_ka": {
                                  "description": "Courier code in Georgian",
                                  "type": "string"
                                },
                                "code_lincah": {
                                  "description": "Courier code in Lincah",
                                  "type": "string"
                                },
                                "code_mengantar": {
                                  "description": "Courier code for Mengantar",
                                  "type": "string"
                                },
                                "code_ro": {
                                  "description": "Courier code in Romanian",
                                  "type": "string"
                                },
                                "courier_type": {
                                  "description": "Type of the courier",
                                  "enum": [
                                    "delivery",
                                    "pickup"
                                  ],
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Courier ID",
                                  "type": "integer"
                                },
                                "is_pickup": {
                                  "description": "Is this a pickup courier?",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "Courier name",
                                  "type": "string"
                                }
                              },
                              "title": "Courier",
                              "type": "object"
                            },
                            "id": {
                              "description": "Courier Service ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the courier service",
                              "type": "string"
                            }
                          },
                          "title": "CourierService",
                          "type": "object"
                        },
                        "mark_as_spam_by": {
                          "description": "Who marked as spam",
                          "type": "string"
                        },
                        "net_payment_revenue": {
                          "description": "Net payment revenue after fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "rts_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "min_payment_fee": {
                          "description": "Minimum payment fee applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "analytics_purchases": {
                          "description": "Analytics purchases associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Analytics Purchase ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the analytics purchase was created",
                                "format": "date-time",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Order ID associated with the analytics purchase",
                                "type": "integer"
                              },
                              "payload": {
                                "additionalProperties": true,
                                "description": "Payload data of the analytics purchase",
                                "type": "object"
                              },
                              "pixel_id": {
                                "description": "Pixel ID associated with the purchase",
                                "type": "string"
                              },
                              "platform": {
                                "description": "Platform of the analytics purchase",
                                "type": "string"
                              },
                              "response": {
                                "additionalProperties": true,
                                "description": "Response data from the analytics purchase",
                                "type": "object"
                              },
                              "updated_at": {
                                "description": "Timestamp when the analytics purchase was last updated",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "AnalyticsPurchase",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_from_form": {
                          "description": "Is from form submission",
                          "type": "boolean"
                        },
                        "secret_slug": {
                          "description": "Secret slug of the order",
                          "type": "string"
                        },
                        "shipping_fee": {
                          "description": "Shipping fee charged for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tax_rate": {
                          "description": "Tax rate applied to the order",
                          "format": "float",
                          "nullable": true,
                          "type": "number"
                        },
                        "draft_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "last_updated_at": {
                          "description": "Last updated timestamp of the order",
                          "format": "date-time",
                          "type": "string"
                        },
                        "courier_additional_info": {
                          "description": "Additional information for the courier",
                          "nullable": true,
                          "type": "string"
                        },
                        "closed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "financial_entity": {
                          "properties": {
                            "code": {
                              "description": "Code of the financial entity",
                              "type": "string"
                            },
                            "duitku_code": {
                              "description": "Duitku code for the financial entity",
                              "type": "string"
                            },
                            "entity_type": {
                              "description": "Type of the financial entity",
                              "type": "string"
                            },
                            "id": {
                              "description": "Financial Entity ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the financial entity",
                              "type": "string"
                            },
                            "platform": {
                              "description": "Platform associated with the financial entity",
                              "type": "string"
                            },
                            "xendit_code": {
                              "description": "Xendit code for the financial entity",
                              "type": "string"
                            }
                          },
                          "title": "FinancialEntity",
                          "type": "object"
                        },
                        "page": {
                          "properties": {
                            "id": {
                              "description": "Page ID",
                              "type": "integer"
                            },
                            "is_published": {
                              "description": "Is the page published?",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Name of the page",
                              "type": "string"
                            },
                            "published_at": {
                              "description": "Publication date of the page",
                              "format": "date-time",
                              "type": "string"
                            },
                            "slug": {
                              "description": "Slug for the page URL",
                              "type": "string"
                            },
                            "store_id": {
                              "description": "ID of the store the page belongs to",
                              "type": "integer"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the page",
                              "type": "string"
                            }
                          },
                          "title": "PageSimple",
                          "type": "object"
                        },
                        "product_price_bt": {
                          "description": "Total product price before discounts minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_purchase_fb": {
                          "description": "Is this order a Facebook purchase",
                          "type": "boolean"
                        },
                        "product_weight": {
                          "description": "Total weight of products in the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "completed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "utm_source": {
                          "description": "UTM source of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_account_holder": {
                          "description": "Payment account holder name",
                          "nullable": true,
                          "type": "string"
                        },
                        "ip": {
                          "description": "IP address of the customer who placed the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipment_receipt": {
                          "description": "Shipment receipt URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "message_history": {
                          "description": "Message history associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "ID of the Follow Up Chat",
                                "type": "integer"
                              },
                              "is_from_bot": {
                                "description": "Is the message from bot",
                                "type": "boolean"
                              },
                              "message": {
                                "description": "Message content",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the sender",
                                "type": "string"
                              },
                              "provider": {
                                "description": "Message provider",
                                "type": "string"
                              },
                              "recipient_name": {
                                "description": "Recipient name",
                                "type": "string"
                              },
                              "recipient_phone": {
                                "description": "Recipient phone number",
                                "type": "string"
                              },
                              "sender_name": {
                                "description": "Sender name",
                                "type": "string"
                              },
                              "sender_phone": {
                                "description": "Sender phone number",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the message",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "MessageHistoryItem",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "payment_status": {
                          "description": "Order payment status",
                          "enum": [
                            "unpaid",
                            "paid",
                            "conflict",
                            "settled"
                          ],
                          "type": "string"
                        },
                        "shipment_provider_code": {
                          "description": "Shipment provider code",
                          "enum": [
                            "mengantar",
                            "lincah",
                            "ninja"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Metadata associated with the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "rtsproof_url": {
                          "description": "RTS proof URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_code_applied_to": {
                          "description": "What the discount code was applied to",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipped_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_ca_status": {
                          "description": "Order AWB courier aggregator status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "created_at": {
                          "description": "Order creation timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "pending_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "notes": {
                          "description": "Notes or comments for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "destination_address": {
                          "properties": {
                            "address": {
                              "description": "Full address",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Order Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the recipient",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Phone number of the recipient",
                              "type": "string"
                            },
                            "postal_code": {
                              "description": "Postal code of the address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the address",
                              "type": "string"
                            }
                          },
                          "title": "OrderAddress",
                          "type": "object"
                        },
                        "unique_code_discount": {
                          "description": "Unique code discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipping_fee_discount": {
                          "description": "Shipping fee discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        }
                      },
                      "title": "Order",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Settlement status checked"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_order"
            ]
          }
        ],
        "summary": "Check order settlement status",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}/customer": {
      "patch": {
        "callbacks": {},
        "description": "Update the customer associated with an order.",
        "operationId": "ScalevApiWeb.OrderController.update_customer",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "customer_id": {
                    "description": "Customer ID",
                    "type": "integer"
                  }
                },
                "required": [
                  "customer_id"
                ],
                "type": "object"
              }
            }
          },
          "description": "Customer update data",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "gross_revenue_for_dropshipper": {
                          "description": "Gross revenue for dropshipper after discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "advertiser": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "cogs": {
                          "description": "Cost of goods sold for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "dropshipper_name": {
                          "description": "Name of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "transferproof_url": {
                          "description": "Transfer proof URL",
                          "nullable": true,
                          "type": "string"
                        },
                        "scalev_fee": {
                          "description": "Scalev fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipment_status_history": {
                          "items": {
                            "properties": {
                              "description": {
                                "description": "Description of the status update",
                                "type": "string"
                              },
                              "status": {
                                "description": "Current status of the shipment",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the status update",
                                "format": "date-time",
                                "type": "string"
                              },
                              "timestamp_source": {
                                "description": "Source of the timestamp",
                                "type": "string"
                              }
                            },
                            "title": "ShipmentStatusHistory",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_code": {
                          "description": "Discount code used in the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "ready_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "warehouse": {
                          "properties": {
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "contact_name": {
                              "description": "Contact name at the warehouse",
                              "type": "string"
                            },
                            "contact_phone": {
                              "description": "Contact phone number at the warehouse",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the warehouse",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderWarehouse",
                          "type": "object"
                        },
                        "payment_fee_rate": {
                          "description": "Payment fee rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "pg_paid_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway paid info",
                          "nullable": true,
                          "type": "object"
                        },
                        "transfer_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "dropshipper_phone": {
                          "description": "Phone number of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipping_cost": {
                          "description": "Shipping cost for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_price": {
                          "description": "Total product price before discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "total_quantity": {
                          "description": "Total quantity of items in the order",
                          "type": "integer"
                        },
                        "net_revenue": {
                          "description": "Net revenue after all discounts and fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "bundle_price_options": {
                          "additionalProperties": true,
                          "description": "Bundle price options for the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "customer": {
                          "properties": {
                            "confirmed_at": {
                              "description": "Confirmation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "created_at": {
                              "description": "Creation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "email": {
                              "description": "Customer email",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Customer ID",
                              "type": "integer"
                            },
                            "last_updated_at": {
                              "description": "Last update timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "description": "Customer name",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Customer phone number",
                              "type": "string"
                            },
                            "status": {
                              "description": "Customer status",
                              "type": "string"
                            }
                          },
                          "title": "CustomerOrder",
                          "type": "object"
                        },
                        "variants": {
                          "additionalProperties": true,
                          "description": "Variants of the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "chat_message": {
                          "description": "Chat message associated with the order",
                          "type": "string"
                        },
                        "handler_phone": {
                          "description": "Handler phone number",
                          "nullable": true,
                          "type": "string"
                        },
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "order_emails": {
                          "description": "Order emails associated with the order",
                          "items": {
                            "properties": {
                              "from": {
                                "description": "Sender email address",
                                "type": "string"
                              },
                              "id": {
                                "description": "Order email ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Email creation timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "message_id": {
                                "description": "Message ID of the email",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Associated order primary key",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Email status",
                                "type": "string"
                              },
                              "status_history": {
                                "items": {
                                  "properties": {
                                    "status": {
                                      "description": "Email status",
                                      "type": "string"
                                    },
                                    "timestamp": {
                                      "description": "Timestamp of the status change",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "subject": {
                                "description": "Email subject",
                                "type": "string"
                              },
                              "to": {
                                "description": "Recipient email address",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the email",
                                "type": "string"
                              },
                              "updated_at": {
                                "description": "Last update timestamp of the email",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "OrderEmail",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "order_id": {
                          "description": "Order ID in string format",
                          "type": "string"
                        },
                        "product_discount": {
                          "description": "Total product discount applied",
                          "format": "decimal",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "handler": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "payment_account_number": {
                          "description": "Payment account number",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_method": {
                          "description": "Order payment method",
                          "enum": [
                            "gopay",
                            "va",
                            "qris",
                            "card",
                            "invoice",
                            "alfamart",
                            "ovo",
                            "dana",
                            "shopeepay",
                            "linkaja",
                            "no_payment",
                            "bank_transfer",
                            "marketplace",
                            "cod"
                          ],
                          "type": "string"
                        },
                        "courier": {
                          "description": "Courier ID for the order",
                          "nullable": true,
                          "type": "integer"
                        },
                        "origin_address": {
                          "properties": {
                            "address": {
                              "description": "Full address of the warehouse",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the warehouse address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "location_id": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "postal_code": {
                              "description": "Postal code of the warehouse address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the warehouse address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the warehouse address",
                              "type": "string"
                            },
                            "warehouse": {
                              "description": "ID of the associated warehouse",
                              "type": "integer"
                            }
                          },
                          "title": "WarehouseAddress",
                          "type": "object"
                        },
                        "epayment_provider": {
                          "description": "E-payment provider",
                          "nullable": true,
                          "type": "string"
                        },
                        "in_process_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "pg_reference_id": {
                          "description": "Payment gateway reference ID",
                          "nullable": true,
                          "type": "string"
                        },
                        "weight_bump": {
                          "description": "Weight bump added to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "follow_up_chat_type": {
                          "description": "Type of follow-up chat for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_status": {
                          "description": "Order AWB status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "platform": {
                          "description": "Platform of the order",
                          "type": "string"
                        },
                        "follow_up_chats": {
                          "items": {
                            "properties": {
                              "bundle_id": {
                                "description": "Bundle ID associated with the chat",
                                "type": "integer"
                              },
                              "change_status": {
                                "description": "Change status after follow up chat",
                                "type": "boolean"
                              },
                              "hours_after": {
                                "description": "Hours after which the follow up chat is triggered",
                                "type": "integer"
                              },
                              "id": {
                                "description": "Follow Up Chat ID",
                                "type": "integer"
                              },
                              "image": {
                                "description": "Image URL for the follow up chat",
                                "format": "uri",
                                "type": "string"
                              },
                              "is_default": {
                                "description": "Is this a default follow up chat?",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name of the follow up chat",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "Product ID associated with the chat",
                                "type": "integer"
                              },
                              "provider": {
                                "description": "Provider of the follow up chat service",
                                "type": "string"
                              },
                              "store_id": {
                                "description": "Store ID associated with the chat",
                                "type": "integer"
                              },
                              "trigger": {
                                "description": "Trigger condition for the follow up chat",
                                "type": "string"
                              }
                            },
                            "title": "FollowUpChat",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_purchase_kwai": {
                          "description": "Is this order a Kwai purchase",
                          "type": "boolean"
                        },
                        "shipping_discount": {
                          "description": "Shipping discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "conflict_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "paid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "confirmed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "canceled_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "status": {
                          "description": "Order status",
                          "enum": [
                            "draft",
                            "pending",
                            "confirmed",
                            "in_process",
                            "ready",
                            "shipped",
                            "completed",
                            "canceled",
                            "rts",
                            "closed"
                          ],
                          "type": "string"
                        },
                        "is_dropshipping": {
                          "description": "Is the order a dropshipping order",
                          "type": "boolean"
                        },
                        "payment_account_id": {
                          "description": "Payment account ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "is_repeat": {
                          "description": "Is repeat order",
                          "type": "boolean"
                        },
                        "tiktok_pixel_ids": {
                          "description": "TikTok pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "fb_pixel_ids": {
                          "description": "Facebook pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Order primary key",
                          "type": "integer"
                        },
                        "unpaid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "is_purchase_tiktok": {
                          "description": "Is this order a TikTok purchase",
                          "type": "boolean"
                        },
                        "orderlines": {
                          "items": {
                            "properties": {
                              "cogs": {
                                "description": "Cost of Goods Sold for this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "cogs_bt": {
                                "description": "COGS for this order line minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount": {
                                "description": "Discount amount applied",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_bt": {
                                "description": "Discount amount minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount": {
                                "description": "Discount from a discount code",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount_bt": {
                                "description": "Discount from a discount code minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_rate": {
                                "description": "Discount rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "id": {
                                "description": "Order Line ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the order line was created",
                                "example": "2023-10-01T12:00:00Z",
                                "format": "date-time",
                                "type": "string"
                              },
                              "is_inventory": {
                                "description": "Is this order line related to inventory?",
                                "type": "boolean"
                              },
                              "item_type": {
                                "description": "Type of the item",
                                "type": "string"
                              },
                              "product_business": {
                                "description": "Business ID of the product",
                                "type": "integer"
                              },
                              "product_name": {
                                "description": "Name of the product",
                                "type": "string"
                              },
                              "product_price": {
                                "description": "Price of the product before discounts",
                                "format": "float",
                                "type": "number"
                              },
                              "product_price_bt": {
                                "description": "Price of the product before discounts minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "quantity": {
                                "description": "Quantity of the item",
                                "type": "integer"
                              },
                              "reseller_product_price": {
                                "description": "Reseller price of the product",
                                "format": "float",
                                "type": "number"
                              },
                              "reseller_product_price_bt": {
                                "description": "Reseller price of the product minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "tax_rate": {
                                "description": "Tax rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "variant": {
                                "description": "Variant ID",
                                "type": "integer"
                              },
                              "variant_cogs": {
                                "description": "COGS of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_cogs_bt": {
                                "description": "COGS of the varian minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_option1_value": {
                                "description": "Value of option 1 for the variant",
                                "type": "string"
                              },
                              "variant_option2_value": {
                                "description": "Value of option 2 for the variant",
                                "type": "string"
                              },
                              "variant_option3_value": {
                                "description": "Value of option 3 for the variant",
                                "type": "string"
                              },
                              "variant_price": {
                                "description": "Price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_price_bt": {
                                "description": "Price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price": {
                                "description": "Reseller price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price_bt": {
                                "description": "Reseller price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_sku": {
                                "description": "SKU of the variant",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Weight of the product",
                                "format": "float",
                                "type": "number"
                              }
                            },
                            "title": "OrderLine",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "shipment_status": {
                          "description": "Current shipment status of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "kwai_pixel_ids": {
                          "description": "Kwai pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "cogs_bt": {
                          "description": "Cost of goods sold for the order minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "sub_payment_method": {
                          "description": "Xendit VA bank code",
                          "enum": [
                            "BCA",
                            "BNI",
                            "BRI",
                            "MANDIRI",
                            "PERMATA",
                            "BSI",
                            "BJB",
                            "CIMB",
                            "SAHABAT_SAMPOERNA",
                            "ARTAJASA"
                          ],
                          "type": "string"
                        },
                        "payment_fee": {
                          "description": "Payment fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "channel_name": {
                          "description": "Channel name of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_rate": {
                          "description": "Discount rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "final_variants": {
                          "additionalProperties": true,
                          "description": "Final variants of the order after bundle options",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_name": {
                          "description": "Name of other income source",
                          "nullable": true,
                          "type": "string"
                        },
                        "gross_revenue": {
                          "description": "Gross revenue of the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tags": {
                          "description": "Tags associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "discount_code_id": {
                          "description": "Discount code ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "other_income": {
                          "description": "Other income amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_weight": {
                          "description": "Total weight of the order including weight bump",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_probably_spam": {
                          "description": "Is probably spam",
                          "type": "boolean"
                        },
                        "external_id": {
                          "description": "External ID of the order",
                          "type": "string"
                        },
                        "payment_status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_discount": {
                          "description": "Discount code discount amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_discount_bt": {
                          "description": "Total product discount applied minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "store": {
                          "properties": {
                            "auto_expire_days": {
                              "description": "Days until auto-expire",
                              "type": "integer"
                            },
                            "auto_other_income": {
                              "description": "Is auto other income enabled?",
                              "type": "boolean"
                            },
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "capi_purchase_value_type": {
                              "description": "Type of CAPI purchase value",
                              "enum": [
                                "gross_revenue",
                                "net_revenue",
                                "adj_gross_revenue"
                              ],
                              "type": "string"
                            },
                            "cod_purchase_triggers": {
                              "description": "COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "dynamic_other_income_cod_default_amount": {
                              "description": "Default amount for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_default_percentage": {
                              "description": "Default percentage for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "dynamic_other_income_epayment_default_amount": {
                              "description": "Default amount for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_default_percentage": {
                              "description": "Default percentage for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "fixed_auto_other_income": {
                              "description": "Is fixed auto other income enabled?",
                              "type": "boolean"
                            },
                            "id": {
                              "description": "Store ID",
                              "type": "integer"
                            },
                            "is_active": {
                              "description": "Is the store active?",
                              "type": "boolean"
                            },
                            "is_auto_expire": {
                              "description": "Is auto-expire enabled?",
                              "type": "boolean"
                            },
                            "is_discount_editable": {
                              "description": "Is discount editable?",
                              "type": "boolean"
                            },
                            "is_dropshipping_allowed": {
                              "description": "Is dropshipping allowed in this store?",
                              "type": "boolean"
                            },
                            "is_moota_enabled": {
                              "description": "Is Moota integration enabled for this store?",
                              "type": "boolean"
                            },
                            "is_postal_code": {
                              "description": "Is postal code required for orders?",
                              "type": "boolean"
                            },
                            "is_transferproof_required": {
                              "description": "Is transfer proof required for orders in this store?",
                              "type": "boolean"
                            },
                            "is_unique_code": {
                              "description": "Is unique code required for orders?",
                              "type": "boolean"
                            },
                            "is_use_waba": {
                              "description": "Is WABA integration enabled?",
                              "type": "boolean"
                            },
                            "max_unique_code_amount": {
                              "description": "Maximum amount for unique code orders",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the store",
                              "type": "string"
                            },
                            "non_cod_purchase_triggers": {
                              "description": "Non-COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "other_income_name": {
                              "description": "Name of the other income",
                              "type": "string"
                            },
                            "postal_code_requirement": {
                              "description": "Postal code requirement options",
                              "enum": [
                                "autofill",
                                "manual"
                              ],
                              "type": "string"
                            },
                            "store_courier_other_incomes": {
                              "description": "Other incomes for store couriers",
                              "items": {
                                "description": "Store Courier Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "courier_id": {
                                    "description": "Courier ID",
                                    "type": "integer"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "type": {
                                    "description": "Type of other income",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "courier_id",
                                  "type"
                                ],
                                "title": "StoreCourierOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "store_method_other_incomes": {
                              "description": "Other incomes for store methods",
                              "items": {
                                "description": "Store Payment Method Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "payment_method": {
                                    "description": "Payment Method",
                                    "type": "string"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "sub_payment_method": {
                                    "description": "Sub Payment Method",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type of amount (fixed or percentage)",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "payment_method",
                                  "type"
                                ],
                                "title": "StorePaymentMethodOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "sub_payment_methods": {
                              "description": "Xendit VA bank codes",
                              "items": {
                                "description": "Xendit VA bank code",
                                "enum": [
                                  "BCA",
                                  "BNI",
                                  "BRI",
                                  "MANDIRI",
                                  "PERMATA",
                                  "BSI",
                                  "BJB",
                                  "CIMB",
                                  "SAHABAT_SAMPOERNA",
                                  "ARTAJASA"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the store",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "UUID of the store",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderStore",
                          "type": "object"
                        },
                        "pg_payment_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway payment info",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_bt": {
                          "description": "Other income amount minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "courier_service": {
                          "properties": {
                            "code": {
                              "description": "Code for the courier service",
                              "type": "string"
                            },
                            "code_co": {
                              "description": "Code for CO courier service",
                              "type": "string"
                            },
                            "code_ka": {
                              "description": "Code for KA courier service",
                              "type": "string"
                            },
                            "code_lincah": {
                              "description": "Code for Lincah courier service",
                              "type": "string"
                            },
                            "code_mengantar": {
                              "description": "Code for Mengantar courier service",
                              "type": "string"
                            },
                            "code_ro": {
                              "description": "Code for RO courier service",
                              "type": "string"
                            },
                            "courier": {
                              "properties": {
                                "code": {
                                  "description": "Courier code",
                                  "type": "string"
                                },
                                "code_ka": {
                                  "description": "Courier code in Georgian",
                                  "type": "string"
                                },
                                "code_lincah": {
                                  "description": "Courier code in Lincah",
                                  "type": "string"
                                },
                                "code_mengantar": {
                                  "description": "Courier code for Mengantar",
                                  "type": "string"
                                },
                                "code_ro": {
                                  "description": "Courier code in Romanian",
                                  "type": "string"
                                },
                                "courier_type": {
                                  "description": "Type of the courier",
                                  "enum": [
                                    "delivery",
                                    "pickup"
                                  ],
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Courier ID",
                                  "type": "integer"
                                },
                                "is_pickup": {
                                  "description": "Is this a pickup courier?",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "Courier name",
                                  "type": "string"
                                }
                              },
                              "title": "Courier",
                              "type": "object"
                            },
                            "id": {
                              "description": "Courier Service ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the courier service",
                              "type": "string"
                            }
                          },
                          "title": "CourierService",
                          "type": "object"
                        },
                        "mark_as_spam_by": {
                          "description": "Who marked as spam",
                          "type": "string"
                        },
                        "net_payment_revenue": {
                          "description": "Net payment revenue after fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "rts_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "min_payment_fee": {
                          "description": "Minimum payment fee applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "analytics_purchases": {
                          "description": "Analytics purchases associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Analytics Purchase ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the analytics purchase was created",
                                "format": "date-time",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Order ID associated with the analytics purchase",
                                "type": "integer"
                              },
                              "payload": {
                                "additionalProperties": true,
                                "description": "Payload data of the analytics purchase",
                                "type": "object"
                              },
                              "pixel_id": {
                                "description": "Pixel ID associated with the purchase",
                                "type": "string"
                              },
                              "platform": {
                                "description": "Platform of the analytics purchase",
                                "type": "string"
                              },
                              "response": {
                                "additionalProperties": true,
                                "description": "Response data from the analytics purchase",
                                "type": "object"
                              },
                              "updated_at": {
                                "description": "Timestamp when the analytics purchase was last updated",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "AnalyticsPurchase",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_from_form": {
                          "description": "Is from form submission",
                          "type": "boolean"
                        },
                        "secret_slug": {
                          "description": "Secret slug of the order",
                          "type": "string"
                        },
                        "shipping_fee": {
                          "description": "Shipping fee charged for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tax_rate": {
                          "description": "Tax rate applied to the order",
                          "format": "float",
                          "nullable": true,
                          "type": "number"
                        },
                        "draft_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "last_updated_at": {
                          "description": "Last updated timestamp of the order",
                          "format": "date-time",
                          "type": "string"
                        },
                        "courier_additional_info": {
                          "description": "Additional information for the courier",
                          "nullable": true,
                          "type": "string"
                        },
                        "closed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "financial_entity": {
                          "properties": {
                            "code": {
                              "description": "Code of the financial entity",
                              "type": "string"
                            },
                            "duitku_code": {
                              "description": "Duitku code for the financial entity",
                              "type": "string"
                            },
                            "entity_type": {
                              "description": "Type of the financial entity",
                              "type": "string"
                            },
                            "id": {
                              "description": "Financial Entity ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the financial entity",
                              "type": "string"
                            },
                            "platform": {
                              "description": "Platform associated with the financial entity",
                              "type": "string"
                            },
                            "xendit_code": {
                              "description": "Xendit code for the financial entity",
                              "type": "string"
                            }
                          },
                          "title": "FinancialEntity",
                          "type": "object"
                        },
                        "page": {
                          "properties": {
                            "id": {
                              "description": "Page ID",
                              "type": "integer"
                            },
                            "is_published": {
                              "description": "Is the page published?",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Name of the page",
                              "type": "string"
                            },
                            "published_at": {
                              "description": "Publication date of the page",
                              "format": "date-time",
                              "type": "string"
                            },
                            "slug": {
                              "description": "Slug for the page URL",
                              "type": "string"
                            },
                            "store_id": {
                              "description": "ID of the store the page belongs to",
                              "type": "integer"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the page",
                              "type": "string"
                            }
                          },
                          "title": "PageSimple",
                          "type": "object"
                        },
                        "product_price_bt": {
                          "description": "Total product price before discounts minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_purchase_fb": {
                          "description": "Is this order a Facebook purchase",
                          "type": "boolean"
                        },
                        "product_weight": {
                          "description": "Total weight of products in the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "completed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "utm_source": {
                          "description": "UTM source of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_account_holder": {
                          "description": "Payment account holder name",
                          "nullable": true,
                          "type": "string"
                        },
                        "ip": {
                          "description": "IP address of the customer who placed the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipment_receipt": {
                          "description": "Shipment receipt URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "message_history": {
                          "description": "Message history associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "ID of the Follow Up Chat",
                                "type": "integer"
                              },
                              "is_from_bot": {
                                "description": "Is the message from bot",
                                "type": "boolean"
                              },
                              "message": {
                                "description": "Message content",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the sender",
                                "type": "string"
                              },
                              "provider": {
                                "description": "Message provider",
                                "type": "string"
                              },
                              "recipient_name": {
                                "description": "Recipient name",
                                "type": "string"
                              },
                              "recipient_phone": {
                                "description": "Recipient phone number",
                                "type": "string"
                              },
                              "sender_name": {
                                "description": "Sender name",
                                "type": "string"
                              },
                              "sender_phone": {
                                "description": "Sender phone number",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the message",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "MessageHistoryItem",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "payment_status": {
                          "description": "Order payment status",
                          "enum": [
                            "unpaid",
                            "paid",
                            "conflict",
                            "settled"
                          ],
                          "type": "string"
                        },
                        "shipment_provider_code": {
                          "description": "Shipment provider code",
                          "enum": [
                            "mengantar",
                            "lincah",
                            "ninja"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Metadata associated with the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "rtsproof_url": {
                          "description": "RTS proof URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_code_applied_to": {
                          "description": "What the discount code was applied to",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipped_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_ca_status": {
                          "description": "Order AWB courier aggregator status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "created_at": {
                          "description": "Order creation timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "pending_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "notes": {
                          "description": "Notes or comments for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "destination_address": {
                          "properties": {
                            "address": {
                              "description": "Full address",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Order Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the recipient",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Phone number of the recipient",
                              "type": "string"
                            },
                            "postal_code": {
                              "description": "Postal code of the address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the address",
                              "type": "string"
                            }
                          },
                          "title": "OrderAddress",
                          "type": "object"
                        },
                        "unique_code_discount": {
                          "description": "Unique code discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipping_fee_discount": {
                          "description": "Shipping fee discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        }
                      },
                      "title": "Order",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Customer updated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_order"
            ]
          }
        ],
        "summary": "Update order customer",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}/duplicate": {
      "post": {
        "callbacks": {},
        "description": "Create a duplicate of an order and cancel the original.",
        "operationId": "ScalevApiWeb.OrderController.duplicate_and_cancel",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "financial_entity_id": {
                    "description": "Financial entity ID",
                    "type": "integer"
                  },
                  "metadata": {
                    "additionalProperties": true,
                    "description": "Metadata to be copied to the new order",
                    "type": "object"
                  },
                  "payment_account_holder": {
                    "description": "Payment account holder name",
                    "type": "string"
                  },
                  "payment_account_number": {
                    "description": "Payment account number",
                    "type": "string"
                  },
                  "payment_method": {
                    "description": "Order payment method",
                    "enum": [
                      "gopay",
                      "va",
                      "qris",
                      "card",
                      "invoice",
                      "alfamart",
                      "ovo",
                      "dana",
                      "shopeepay",
                      "linkaja",
                      "no_payment",
                      "bank_transfer",
                      "marketplace",
                      "cod"
                    ],
                    "type": "string"
                  },
                  "sub_payment_method": {
                    "description": "Xendit VA bank code",
                    "enum": [
                      "BCA",
                      "BNI",
                      "BRI",
                      "MANDIRI",
                      "PERMATA",
                      "BSI",
                      "BJB",
                      "CIMB",
                      "SAHABAT_SAMPOERNA",
                      "ARTAJASA"
                    ],
                    "type": "string"
                  }
                },
                "title": "OrderDuplicateBody",
                "type": "object"
              }
            }
          },
          "description": "Duplicate order data",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "gross_revenue_for_dropshipper": {
                          "description": "Gross revenue for dropshipper after discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "advertiser": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "cogs": {
                          "description": "Cost of goods sold for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "dropshipper_name": {
                          "description": "Name of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "transferproof_url": {
                          "description": "Transfer proof URL",
                          "nullable": true,
                          "type": "string"
                        },
                        "scalev_fee": {
                          "description": "Scalev fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipment_status_history": {
                          "items": {
                            "properties": {
                              "description": {
                                "description": "Description of the status update",
                                "type": "string"
                              },
                              "status": {
                                "description": "Current status of the shipment",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the status update",
                                "format": "date-time",
                                "type": "string"
                              },
                              "timestamp_source": {
                                "description": "Source of the timestamp",
                                "type": "string"
                              }
                            },
                            "title": "ShipmentStatusHistory",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_code": {
                          "description": "Discount code used in the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "ready_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "warehouse": {
                          "properties": {
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "contact_name": {
                              "description": "Contact name at the warehouse",
                              "type": "string"
                            },
                            "contact_phone": {
                              "description": "Contact phone number at the warehouse",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the warehouse",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderWarehouse",
                          "type": "object"
                        },
                        "payment_fee_rate": {
                          "description": "Payment fee rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "pg_paid_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway paid info",
                          "nullable": true,
                          "type": "object"
                        },
                        "transfer_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "dropshipper_phone": {
                          "description": "Phone number of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipping_cost": {
                          "description": "Shipping cost for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_price": {
                          "description": "Total product price before discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "total_quantity": {
                          "description": "Total quantity of items in the order",
                          "type": "integer"
                        },
                        "net_revenue": {
                          "description": "Net revenue after all discounts and fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "bundle_price_options": {
                          "additionalProperties": true,
                          "description": "Bundle price options for the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "customer": {
                          "properties": {
                            "confirmed_at": {
                              "description": "Confirmation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "created_at": {
                              "description": "Creation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "email": {
                              "description": "Customer email",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Customer ID",
                              "type": "integer"
                            },
                            "last_updated_at": {
                              "description": "Last update timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "description": "Customer name",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Customer phone number",
                              "type": "string"
                            },
                            "status": {
                              "description": "Customer status",
                              "type": "string"
                            }
                          },
                          "title": "CustomerOrder",
                          "type": "object"
                        },
                        "variants": {
                          "additionalProperties": true,
                          "description": "Variants of the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "chat_message": {
                          "description": "Chat message associated with the order",
                          "type": "string"
                        },
                        "handler_phone": {
                          "description": "Handler phone number",
                          "nullable": true,
                          "type": "string"
                        },
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "order_emails": {
                          "description": "Order emails associated with the order",
                          "items": {
                            "properties": {
                              "from": {
                                "description": "Sender email address",
                                "type": "string"
                              },
                              "id": {
                                "description": "Order email ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Email creation timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "message_id": {
                                "description": "Message ID of the email",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Associated order primary key",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Email status",
                                "type": "string"
                              },
                              "status_history": {
                                "items": {
                                  "properties": {
                                    "status": {
                                      "description": "Email status",
                                      "type": "string"
                                    },
                                    "timestamp": {
                                      "description": "Timestamp of the status change",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "subject": {
                                "description": "Email subject",
                                "type": "string"
                              },
                              "to": {
                                "description": "Recipient email address",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the email",
                                "type": "string"
                              },
                              "updated_at": {
                                "description": "Last update timestamp of the email",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "OrderEmail",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "order_id": {
                          "description": "Order ID in string format",
                          "type": "string"
                        },
                        "product_discount": {
                          "description": "Total product discount applied",
                          "format": "decimal",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "handler": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "payment_account_number": {
                          "description": "Payment account number",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_method": {
                          "description": "Order payment method",
                          "enum": [
                            "gopay",
                            "va",
                            "qris",
                            "card",
                            "invoice",
                            "alfamart",
                            "ovo",
                            "dana",
                            "shopeepay",
                            "linkaja",
                            "no_payment",
                            "bank_transfer",
                            "marketplace",
                            "cod"
                          ],
                          "type": "string"
                        },
                        "courier": {
                          "description": "Courier ID for the order",
                          "nullable": true,
                          "type": "integer"
                        },
                        "origin_address": {
                          "properties": {
                            "address": {
                              "description": "Full address of the warehouse",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the warehouse address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "location_id": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "postal_code": {
                              "description": "Postal code of the warehouse address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the warehouse address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the warehouse address",
                              "type": "string"
                            },
                            "warehouse": {
                              "description": "ID of the associated warehouse",
                              "type": "integer"
                            }
                          },
                          "title": "WarehouseAddress",
                          "type": "object"
                        },
                        "epayment_provider": {
                          "description": "E-payment provider",
                          "nullable": true,
                          "type": "string"
                        },
                        "in_process_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "pg_reference_id": {
                          "description": "Payment gateway reference ID",
                          "nullable": true,
                          "type": "string"
                        },
                        "weight_bump": {
                          "description": "Weight bump added to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "follow_up_chat_type": {
                          "description": "Type of follow-up chat for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_status": {
                          "description": "Order AWB status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "platform": {
                          "description": "Platform of the order",
                          "type": "string"
                        },
                        "follow_up_chats": {
                          "items": {
                            "properties": {
                              "bundle_id": {
                                "description": "Bundle ID associated with the chat",
                                "type": "integer"
                              },
                              "change_status": {
                                "description": "Change status after follow up chat",
                                "type": "boolean"
                              },
                              "hours_after": {
                                "description": "Hours after which the follow up chat is triggered",
                                "type": "integer"
                              },
                              "id": {
                                "description": "Follow Up Chat ID",
                                "type": "integer"
                              },
                              "image": {
                                "description": "Image URL for the follow up chat",
                                "format": "uri",
                                "type": "string"
                              },
                              "is_default": {
                                "description": "Is this a default follow up chat?",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name of the follow up chat",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "Product ID associated with the chat",
                                "type": "integer"
                              },
                              "provider": {
                                "description": "Provider of the follow up chat service",
                                "type": "string"
                              },
                              "store_id": {
                                "description": "Store ID associated with the chat",
                                "type": "integer"
                              },
                              "trigger": {
                                "description": "Trigger condition for the follow up chat",
                                "type": "string"
                              }
                            },
                            "title": "FollowUpChat",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_purchase_kwai": {
                          "description": "Is this order a Kwai purchase",
                          "type": "boolean"
                        },
                        "shipping_discount": {
                          "description": "Shipping discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "conflict_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "paid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "confirmed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "canceled_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "status": {
                          "description": "Order status",
                          "enum": [
                            "draft",
                            "pending",
                            "confirmed",
                            "in_process",
                            "ready",
                            "shipped",
                            "completed",
                            "canceled",
                            "rts",
                            "closed"
                          ],
                          "type": "string"
                        },
                        "is_dropshipping": {
                          "description": "Is the order a dropshipping order",
                          "type": "boolean"
                        },
                        "payment_account_id": {
                          "description": "Payment account ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "is_repeat": {
                          "description": "Is repeat order",
                          "type": "boolean"
                        },
                        "tiktok_pixel_ids": {
                          "description": "TikTok pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "fb_pixel_ids": {
                          "description": "Facebook pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Order primary key",
                          "type": "integer"
                        },
                        "unpaid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "is_purchase_tiktok": {
                          "description": "Is this order a TikTok purchase",
                          "type": "boolean"
                        },
                        "orderlines": {
                          "items": {
                            "properties": {
                              "cogs": {
                                "description": "Cost of Goods Sold for this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "cogs_bt": {
                                "description": "COGS for this order line minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount": {
                                "description": "Discount amount applied",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_bt": {
                                "description": "Discount amount minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount": {
                                "description": "Discount from a discount code",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount_bt": {
                                "description": "Discount from a discount code minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_rate": {
                                "description": "Discount rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "id": {
                                "description": "Order Line ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the order line was created",
                                "example": "2023-10-01T12:00:00Z",
                                "format": "date-time",
                                "type": "string"
                              },
                              "is_inventory": {
                                "description": "Is this order line related to inventory?",
                                "type": "boolean"
                              },
                              "item_type": {
                                "description": "Type of the item",
                                "type": "string"
                              },
                              "product_business": {
                                "description": "Business ID of the product",
                                "type": "integer"
                              },
                              "product_name": {
                                "description": "Name of the product",
                                "type": "string"
                              },
                              "product_price": {
                                "description": "Price of the product before discounts",
                                "format": "float",
                                "type": "number"
                              },
                              "product_price_bt": {
                                "description": "Price of the product before discounts minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "quantity": {
                                "description": "Quantity of the item",
                                "type": "integer"
                              },
                              "reseller_product_price": {
                                "description": "Reseller price of the product",
                                "format": "float",
                                "type": "number"
                              },
                              "reseller_product_price_bt": {
                                "description": "Reseller price of the product minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "tax_rate": {
                                "description": "Tax rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "variant": {
                                "description": "Variant ID",
                                "type": "integer"
                              },
                              "variant_cogs": {
                                "description": "COGS of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_cogs_bt": {
                                "description": "COGS of the varian minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_option1_value": {
                                "description": "Value of option 1 for the variant",
                                "type": "string"
                              },
                              "variant_option2_value": {
                                "description": "Value of option 2 for the variant",
                                "type": "string"
                              },
                              "variant_option3_value": {
                                "description": "Value of option 3 for the variant",
                                "type": "string"
                              },
                              "variant_price": {
                                "description": "Price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_price_bt": {
                                "description": "Price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price": {
                                "description": "Reseller price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price_bt": {
                                "description": "Reseller price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_sku": {
                                "description": "SKU of the variant",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Weight of the product",
                                "format": "float",
                                "type": "number"
                              }
                            },
                            "title": "OrderLine",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "shipment_status": {
                          "description": "Current shipment status of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "kwai_pixel_ids": {
                          "description": "Kwai pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "cogs_bt": {
                          "description": "Cost of goods sold for the order minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "sub_payment_method": {
                          "description": "Xendit VA bank code",
                          "enum": [
                            "BCA",
                            "BNI",
                            "BRI",
                            "MANDIRI",
                            "PERMATA",
                            "BSI",
                            "BJB",
                            "CIMB",
                            "SAHABAT_SAMPOERNA",
                            "ARTAJASA"
                          ],
                          "type": "string"
                        },
                        "payment_fee": {
                          "description": "Payment fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "channel_name": {
                          "description": "Channel name of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_rate": {
                          "description": "Discount rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "final_variants": {
                          "additionalProperties": true,
                          "description": "Final variants of the order after bundle options",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_name": {
                          "description": "Name of other income source",
                          "nullable": true,
                          "type": "string"
                        },
                        "gross_revenue": {
                          "description": "Gross revenue of the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tags": {
                          "description": "Tags associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "discount_code_id": {
                          "description": "Discount code ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "other_income": {
                          "description": "Other income amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_weight": {
                          "description": "Total weight of the order including weight bump",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_probably_spam": {
                          "description": "Is probably spam",
                          "type": "boolean"
                        },
                        "external_id": {
                          "description": "External ID of the order",
                          "type": "string"
                        },
                        "payment_status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_discount": {
                          "description": "Discount code discount amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_discount_bt": {
                          "description": "Total product discount applied minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "store": {
                          "properties": {
                            "auto_expire_days": {
                              "description": "Days until auto-expire",
                              "type": "integer"
                            },
                            "auto_other_income": {
                              "description": "Is auto other income enabled?",
                              "type": "boolean"
                            },
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "capi_purchase_value_type": {
                              "description": "Type of CAPI purchase value",
                              "enum": [
                                "gross_revenue",
                                "net_revenue",
                                "adj_gross_revenue"
                              ],
                              "type": "string"
                            },
                            "cod_purchase_triggers": {
                              "description": "COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "dynamic_other_income_cod_default_amount": {
                              "description": "Default amount for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_default_percentage": {
                              "description": "Default percentage for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "dynamic_other_income_epayment_default_amount": {
                              "description": "Default amount for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_default_percentage": {
                              "description": "Default percentage for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "fixed_auto_other_income": {
                              "description": "Is fixed auto other income enabled?",
                              "type": "boolean"
                            },
                            "id": {
                              "description": "Store ID",
                              "type": "integer"
                            },
                            "is_active": {
                              "description": "Is the store active?",
                              "type": "boolean"
                            },
                            "is_auto_expire": {
                              "description": "Is auto-expire enabled?",
                              "type": "boolean"
                            },
                            "is_discount_editable": {
                              "description": "Is discount editable?",
                              "type": "boolean"
                            },
                            "is_dropshipping_allowed": {
                              "description": "Is dropshipping allowed in this store?",
                              "type": "boolean"
                            },
                            "is_moota_enabled": {
                              "description": "Is Moota integration enabled for this store?",
                              "type": "boolean"
                            },
                            "is_postal_code": {
                              "description": "Is postal code required for orders?",
                              "type": "boolean"
                            },
                            "is_transferproof_required": {
                              "description": "Is transfer proof required for orders in this store?",
                              "type": "boolean"
                            },
                            "is_unique_code": {
                              "description": "Is unique code required for orders?",
                              "type": "boolean"
                            },
                            "is_use_waba": {
                              "description": "Is WABA integration enabled?",
                              "type": "boolean"
                            },
                            "max_unique_code_amount": {
                              "description": "Maximum amount for unique code orders",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the store",
                              "type": "string"
                            },
                            "non_cod_purchase_triggers": {
                              "description": "Non-COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "other_income_name": {
                              "description": "Name of the other income",
                              "type": "string"
                            },
                            "postal_code_requirement": {
                              "description": "Postal code requirement options",
                              "enum": [
                                "autofill",
                                "manual"
                              ],
                              "type": "string"
                            },
                            "store_courier_other_incomes": {
                              "description": "Other incomes for store couriers",
                              "items": {
                                "description": "Store Courier Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "courier_id": {
                                    "description": "Courier ID",
                                    "type": "integer"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "type": {
                                    "description": "Type of other income",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "courier_id",
                                  "type"
                                ],
                                "title": "StoreCourierOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "store_method_other_incomes": {
                              "description": "Other incomes for store methods",
                              "items": {
                                "description": "Store Payment Method Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "payment_method": {
                                    "description": "Payment Method",
                                    "type": "string"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "sub_payment_method": {
                                    "description": "Sub Payment Method",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type of amount (fixed or percentage)",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "payment_method",
                                  "type"
                                ],
                                "title": "StorePaymentMethodOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "sub_payment_methods": {
                              "description": "Xendit VA bank codes",
                              "items": {
                                "description": "Xendit VA bank code",
                                "enum": [
                                  "BCA",
                                  "BNI",
                                  "BRI",
                                  "MANDIRI",
                                  "PERMATA",
                                  "BSI",
                                  "BJB",
                                  "CIMB",
                                  "SAHABAT_SAMPOERNA",
                                  "ARTAJASA"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the store",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "UUID of the store",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderStore",
                          "type": "object"
                        },
                        "pg_payment_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway payment info",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_bt": {
                          "description": "Other income amount minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "courier_service": {
                          "properties": {
                            "code": {
                              "description": "Code for the courier service",
                              "type": "string"
                            },
                            "code_co": {
                              "description": "Code for CO courier service",
                              "type": "string"
                            },
                            "code_ka": {
                              "description": "Code for KA courier service",
                              "type": "string"
                            },
                            "code_lincah": {
                              "description": "Code for Lincah courier service",
                              "type": "string"
                            },
                            "code_mengantar": {
                              "description": "Code for Mengantar courier service",
                              "type": "string"
                            },
                            "code_ro": {
                              "description": "Code for RO courier service",
                              "type": "string"
                            },
                            "courier": {
                              "properties": {
                                "code": {
                                  "description": "Courier code",
                                  "type": "string"
                                },
                                "code_ka": {
                                  "description": "Courier code in Georgian",
                                  "type": "string"
                                },
                                "code_lincah": {
                                  "description": "Courier code in Lincah",
                                  "type": "string"
                                },
                                "code_mengantar": {
                                  "description": "Courier code for Mengantar",
                                  "type": "string"
                                },
                                "code_ro": {
                                  "description": "Courier code in Romanian",
                                  "type": "string"
                                },
                                "courier_type": {
                                  "description": "Type of the courier",
                                  "enum": [
                                    "delivery",
                                    "pickup"
                                  ],
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Courier ID",
                                  "type": "integer"
                                },
                                "is_pickup": {
                                  "description": "Is this a pickup courier?",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "Courier name",
                                  "type": "string"
                                }
                              },
                              "title": "Courier",
                              "type": "object"
                            },
                            "id": {
                              "description": "Courier Service ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the courier service",
                              "type": "string"
                            }
                          },
                          "title": "CourierService",
                          "type": "object"
                        },
                        "mark_as_spam_by": {
                          "description": "Who marked as spam",
                          "type": "string"
                        },
                        "net_payment_revenue": {
                          "description": "Net payment revenue after fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "rts_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "min_payment_fee": {
                          "description": "Minimum payment fee applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "analytics_purchases": {
                          "description": "Analytics purchases associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Analytics Purchase ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the analytics purchase was created",
                                "format": "date-time",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Order ID associated with the analytics purchase",
                                "type": "integer"
                              },
                              "payload": {
                                "additionalProperties": true,
                                "description": "Payload data of the analytics purchase",
                                "type": "object"
                              },
                              "pixel_id": {
                                "description": "Pixel ID associated with the purchase",
                                "type": "string"
                              },
                              "platform": {
                                "description": "Platform of the analytics purchase",
                                "type": "string"
                              },
                              "response": {
                                "additionalProperties": true,
                                "description": "Response data from the analytics purchase",
                                "type": "object"
                              },
                              "updated_at": {
                                "description": "Timestamp when the analytics purchase was last updated",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "AnalyticsPurchase",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_from_form": {
                          "description": "Is from form submission",
                          "type": "boolean"
                        },
                        "secret_slug": {
                          "description": "Secret slug of the order",
                          "type": "string"
                        },
                        "shipping_fee": {
                          "description": "Shipping fee charged for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tax_rate": {
                          "description": "Tax rate applied to the order",
                          "format": "float",
                          "nullable": true,
                          "type": "number"
                        },
                        "draft_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "last_updated_at": {
                          "description": "Last updated timestamp of the order",
                          "format": "date-time",
                          "type": "string"
                        },
                        "courier_additional_info": {
                          "description": "Additional information for the courier",
                          "nullable": true,
                          "type": "string"
                        },
                        "closed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "financial_entity": {
                          "properties": {
                            "code": {
                              "description": "Code of the financial entity",
                              "type": "string"
                            },
                            "duitku_code": {
                              "description": "Duitku code for the financial entity",
                              "type": "string"
                            },
                            "entity_type": {
                              "description": "Type of the financial entity",
                              "type": "string"
                            },
                            "id": {
                              "description": "Financial Entity ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the financial entity",
                              "type": "string"
                            },
                            "platform": {
                              "description": "Platform associated with the financial entity",
                              "type": "string"
                            },
                            "xendit_code": {
                              "description": "Xendit code for the financial entity",
                              "type": "string"
                            }
                          },
                          "title": "FinancialEntity",
                          "type": "object"
                        },
                        "page": {
                          "properties": {
                            "id": {
                              "description": "Page ID",
                              "type": "integer"
                            },
                            "is_published": {
                              "description": "Is the page published?",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Name of the page",
                              "type": "string"
                            },
                            "published_at": {
                              "description": "Publication date of the page",
                              "format": "date-time",
                              "type": "string"
                            },
                            "slug": {
                              "description": "Slug for the page URL",
                              "type": "string"
                            },
                            "store_id": {
                              "description": "ID of the store the page belongs to",
                              "type": "integer"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the page",
                              "type": "string"
                            }
                          },
                          "title": "PageSimple",
                          "type": "object"
                        },
                        "product_price_bt": {
                          "description": "Total product price before discounts minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_purchase_fb": {
                          "description": "Is this order a Facebook purchase",
                          "type": "boolean"
                        },
                        "product_weight": {
                          "description": "Total weight of products in the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "completed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "utm_source": {
                          "description": "UTM source of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_account_holder": {
                          "description": "Payment account holder name",
                          "nullable": true,
                          "type": "string"
                        },
                        "ip": {
                          "description": "IP address of the customer who placed the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipment_receipt": {
                          "description": "Shipment receipt URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "message_history": {
                          "description": "Message history associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "ID of the Follow Up Chat",
                                "type": "integer"
                              },
                              "is_from_bot": {
                                "description": "Is the message from bot",
                                "type": "boolean"
                              },
                              "message": {
                                "description": "Message content",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the sender",
                                "type": "string"
                              },
                              "provider": {
                                "description": "Message provider",
                                "type": "string"
                              },
                              "recipient_name": {
                                "description": "Recipient name",
                                "type": "string"
                              },
                              "recipient_phone": {
                                "description": "Recipient phone number",
                                "type": "string"
                              },
                              "sender_name": {
                                "description": "Sender name",
                                "type": "string"
                              },
                              "sender_phone": {
                                "description": "Sender phone number",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the message",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "MessageHistoryItem",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "payment_status": {
                          "description": "Order payment status",
                          "enum": [
                            "unpaid",
                            "paid",
                            "conflict",
                            "settled"
                          ],
                          "type": "string"
                        },
                        "shipment_provider_code": {
                          "description": "Shipment provider code",
                          "enum": [
                            "mengantar",
                            "lincah",
                            "ninja"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Metadata associated with the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "rtsproof_url": {
                          "description": "RTS proof URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_code_applied_to": {
                          "description": "What the discount code was applied to",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipped_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_ca_status": {
                          "description": "Order AWB courier aggregator status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "created_at": {
                          "description": "Order creation timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "pending_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "notes": {
                          "description": "Notes or comments for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "destination_address": {
                          "properties": {
                            "address": {
                              "description": "Full address",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Order Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the recipient",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Phone number of the recipient",
                              "type": "string"
                            },
                            "postal_code": {
                              "description": "Postal code of the address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the address",
                              "type": "string"
                            }
                          },
                          "title": "OrderAddress",
                          "type": "object"
                        },
                        "unique_code_discount": {
                          "description": "Unique code discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipping_fee_discount": {
                          "description": "Shipping fee discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        }
                      },
                      "title": "Order",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Order duplicated and cancelled"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "add_order"
            ]
          }
        ],
        "summary": "Duplicate and cancel order",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}/emails": {
      "get": {
        "callbacks": {},
        "description": "Get list of emails sent for an order.",
        "operationId": "ScalevApiWeb.OrderViewController.index_order_emails",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "items": {
                        "properties": {
                          "from": {
                            "description": "Sender email address",
                            "type": "string"
                          },
                          "id": {
                            "description": "Order email ID",
                            "type": "integer"
                          },
                          "inserted_at": {
                            "description": "Email creation timestamp",
                            "format": "date-time",
                            "type": "string"
                          },
                          "message_id": {
                            "description": "Message ID of the email",
                            "type": "string"
                          },
                          "order_id": {
                            "description": "Associated order primary key",
                            "type": "integer"
                          },
                          "status": {
                            "description": "Email status",
                            "type": "string"
                          },
                          "status_history": {
                            "items": {
                              "properties": {
                                "status": {
                                  "description": "Email status",
                                  "type": "string"
                                },
                                "timestamp": {
                                  "description": "Timestamp of the status change",
                                  "format": "date-time",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "subject": {
                            "description": "Email subject",
                            "type": "string"
                          },
                          "to": {
                            "description": "Recipient email address",
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of the email",
                            "type": "string"
                          },
                          "updated_at": {
                            "description": "Last update timestamp of the email",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "title": "OrderEmail",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Order emails list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_order"
            ]
          }
        ],
        "summary": "List order emails",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}/message-history": {
      "post": {
        "callbacks": {},
        "description": "Add a new message to order message history.",
        "operationId": "ScalevApiWeb.OrderController.add_message_history",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "follow_up_chat_id": {
                    "description": "Follow-up chat ID",
                    "type": "integer"
                  }
                },
                "required": [
                  "follow_up_chat_id"
                ],
                "type": "object"
              }
            }
          },
          "description": "Message data",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "id": {
                          "description": "Order primary key",
                          "type": "integer"
                        },
                        "message_history": {
                          "description": "Message history associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "ID of the Follow Up Chat",
                                "type": "integer"
                              },
                              "is_from_bot": {
                                "description": "Is the message from bot",
                                "type": "boolean"
                              },
                              "message": {
                                "description": "Message content",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the sender",
                                "type": "string"
                              },
                              "provider": {
                                "description": "Message provider",
                                "type": "string"
                              },
                              "recipient_name": {
                                "description": "Recipient name",
                                "type": "string"
                              },
                              "recipient_phone": {
                                "description": "Recipient phone number",
                                "type": "string"
                              },
                              "sender_name": {
                                "description": "Sender name",
                                "type": "string"
                              },
                              "sender_phone": {
                                "description": "Sender phone number",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the message",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "MessageHistoryItem",
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "title": "OrderMessageHistory",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Message added successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_order"
            ]
          }
        ],
        "summary": "Add message to history",
        "tags": [
          "Orders"
        ]
      },
      "get": {
        "callbacks": {},
        "description": "Get message history for an order.",
        "operationId": "ScalevApiWeb.OrderViewController.show_message_history",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "id": {
                          "description": "Order primary key",
                          "type": "integer"
                        },
                        "message_history": {
                          "description": "Message history associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "ID of the Follow Up Chat",
                                "type": "integer"
                              },
                              "is_from_bot": {
                                "description": "Is the message from bot",
                                "type": "boolean"
                              },
                              "message": {
                                "description": "Message content",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the sender",
                                "type": "string"
                              },
                              "provider": {
                                "description": "Message provider",
                                "type": "string"
                              },
                              "recipient_name": {
                                "description": "Recipient name",
                                "type": "string"
                              },
                              "recipient_phone": {
                                "description": "Recipient phone number",
                                "type": "string"
                              },
                              "sender_name": {
                                "description": "Sender name",
                                "type": "string"
                              },
                              "sender_phone": {
                                "description": "Sender phone number",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the message",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "MessageHistoryItem",
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "title": "OrderMessageHistory",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Message history retrieved"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_order"
            ]
          }
        ],
        "summary": "Show message history",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}/payment": {
      "post": {
        "callbacks": {},
        "description": "Create a payment request / intent for an order.",
        "operationId": "ScalevApiWeb.OrderController.create_payment",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "additionalProperties": true,
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Payment created successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_order"
            ]
          }
        ],
        "summary": "Create payment for order",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}/send-lms-access": {
      "post": {
        "callbacks": {},
        "description": "Send LMS access email to customer.",
        "operationId": "ScalevApiWeb.OrderViewController.send_lms_access",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "LMS access sent successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_order"
            ]
          }
        ],
        "summary": "Send LMS access",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}/send-product-digital": {
      "post": {
        "callbacks": {},
        "description": "Send email containing links to download digital products to customer.",
        "operationId": "ScalevApiWeb.OrderViewController.send_product_digital",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Digital product sent successfully"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_order"
            ]
          }
        ],
        "summary": "Send digital product access",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}/shipment": {
      "patch": {
        "callbacks": {},
        "description": "Update shipment-related data for an order.",
        "operationId": "ScalevApiWeb.OrderController.update_shipment_raw",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "awb_ca_status": {
                    "description": "Order AWB courier aggregator status",
                    "enum": [
                      "unavailable",
                      "pending",
                      "waiting",
                      "failed",
                      "created",
                      "canceled"
                    ],
                    "type": "string"
                  },
                  "courier_additional_info": {
                    "description": "Additional courier information",
                    "nullable": true,
                    "type": "string"
                  },
                  "is_shipment_completed": {
                    "description": "Is the shipment completed",
                    "type": "boolean"
                  },
                  "shipment_provider_code": {
                    "description": "Shipment provider code",
                    "enum": [
                      "mengantar",
                      "lincah",
                      "ninja"
                    ],
                    "nullable": true,
                    "type": "string"
                  },
                  "shipment_receipt": {
                    "description": "Shipment receipt / tracking ID",
                    "nullable": true,
                    "type": "string"
                  }
                },
                "title": "OrderUpdateShipmentDataBody",
                "type": "object"
              }
            }
          },
          "description": "Shipment-related data",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "gross_revenue_for_dropshipper": {
                          "description": "Gross revenue for dropshipper after discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "advertiser": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "cogs": {
                          "description": "Cost of goods sold for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "dropshipper_name": {
                          "description": "Name of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "transferproof_url": {
                          "description": "Transfer proof URL",
                          "nullable": true,
                          "type": "string"
                        },
                        "scalev_fee": {
                          "description": "Scalev fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipment_status_history": {
                          "items": {
                            "properties": {
                              "description": {
                                "description": "Description of the status update",
                                "type": "string"
                              },
                              "status": {
                                "description": "Current status of the shipment",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the status update",
                                "format": "date-time",
                                "type": "string"
                              },
                              "timestamp_source": {
                                "description": "Source of the timestamp",
                                "type": "string"
                              }
                            },
                            "title": "ShipmentStatusHistory",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_code": {
                          "description": "Discount code used in the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "ready_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "warehouse": {
                          "properties": {
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "contact_name": {
                              "description": "Contact name at the warehouse",
                              "type": "string"
                            },
                            "contact_phone": {
                              "description": "Contact phone number at the warehouse",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the warehouse",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderWarehouse",
                          "type": "object"
                        },
                        "payment_fee_rate": {
                          "description": "Payment fee rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "pg_paid_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway paid info",
                          "nullable": true,
                          "type": "object"
                        },
                        "transfer_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "dropshipper_phone": {
                          "description": "Phone number of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipping_cost": {
                          "description": "Shipping cost for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_price": {
                          "description": "Total product price before discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "total_quantity": {
                          "description": "Total quantity of items in the order",
                          "type": "integer"
                        },
                        "net_revenue": {
                          "description": "Net revenue after all discounts and fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "bundle_price_options": {
                          "additionalProperties": true,
                          "description": "Bundle price options for the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "customer": {
                          "properties": {
                            "confirmed_at": {
                              "description": "Confirmation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "created_at": {
                              "description": "Creation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "email": {
                              "description": "Customer email",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Customer ID",
                              "type": "integer"
                            },
                            "last_updated_at": {
                              "description": "Last update timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "description": "Customer name",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Customer phone number",
                              "type": "string"
                            },
                            "status": {
                              "description": "Customer status",
                              "type": "string"
                            }
                          },
                          "title": "CustomerOrder",
                          "type": "object"
                        },
                        "variants": {
                          "additionalProperties": true,
                          "description": "Variants of the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "chat_message": {
                          "description": "Chat message associated with the order",
                          "type": "string"
                        },
                        "handler_phone": {
                          "description": "Handler phone number",
                          "nullable": true,
                          "type": "string"
                        },
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "order_emails": {
                          "description": "Order emails associated with the order",
                          "items": {
                            "properties": {
                              "from": {
                                "description": "Sender email address",
                                "type": "string"
                              },
                              "id": {
                                "description": "Order email ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Email creation timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "message_id": {
                                "description": "Message ID of the email",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Associated order primary key",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Email status",
                                "type": "string"
                              },
                              "status_history": {
                                "items": {
                                  "properties": {
                                    "status": {
                                      "description": "Email status",
                                      "type": "string"
                                    },
                                    "timestamp": {
                                      "description": "Timestamp of the status change",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "subject": {
                                "description": "Email subject",
                                "type": "string"
                              },
                              "to": {
                                "description": "Recipient email address",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the email",
                                "type": "string"
                              },
                              "updated_at": {
                                "description": "Last update timestamp of the email",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "OrderEmail",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "order_id": {
                          "description": "Order ID in string format",
                          "type": "string"
                        },
                        "product_discount": {
                          "description": "Total product discount applied",
                          "format": "decimal",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "handler": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "payment_account_number": {
                          "description": "Payment account number",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_method": {
                          "description": "Order payment method",
                          "enum": [
                            "gopay",
                            "va",
                            "qris",
                            "card",
                            "invoice",
                            "alfamart",
                            "ovo",
                            "dana",
                            "shopeepay",
                            "linkaja",
                            "no_payment",
                            "bank_transfer",
                            "marketplace",
                            "cod"
                          ],
                          "type": "string"
                        },
                        "courier": {
                          "description": "Courier ID for the order",
                          "nullable": true,
                          "type": "integer"
                        },
                        "origin_address": {
                          "properties": {
                            "address": {
                              "description": "Full address of the warehouse",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the warehouse address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "location_id": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "postal_code": {
                              "description": "Postal code of the warehouse address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the warehouse address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the warehouse address",
                              "type": "string"
                            },
                            "warehouse": {
                              "description": "ID of the associated warehouse",
                              "type": "integer"
                            }
                          },
                          "title": "WarehouseAddress",
                          "type": "object"
                        },
                        "epayment_provider": {
                          "description": "E-payment provider",
                          "nullable": true,
                          "type": "string"
                        },
                        "in_process_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "pg_reference_id": {
                          "description": "Payment gateway reference ID",
                          "nullable": true,
                          "type": "string"
                        },
                        "weight_bump": {
                          "description": "Weight bump added to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "follow_up_chat_type": {
                          "description": "Type of follow-up chat for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_status": {
                          "description": "Order AWB status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "platform": {
                          "description": "Platform of the order",
                          "type": "string"
                        },
                        "follow_up_chats": {
                          "items": {
                            "properties": {
                              "bundle_id": {
                                "description": "Bundle ID associated with the chat",
                                "type": "integer"
                              },
                              "change_status": {
                                "description": "Change status after follow up chat",
                                "type": "boolean"
                              },
                              "hours_after": {
                                "description": "Hours after which the follow up chat is triggered",
                                "type": "integer"
                              },
                              "id": {
                                "description": "Follow Up Chat ID",
                                "type": "integer"
                              },
                              "image": {
                                "description": "Image URL for the follow up chat",
                                "format": "uri",
                                "type": "string"
                              },
                              "is_default": {
                                "description": "Is this a default follow up chat?",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name of the follow up chat",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "Product ID associated with the chat",
                                "type": "integer"
                              },
                              "provider": {
                                "description": "Provider of the follow up chat service",
                                "type": "string"
                              },
                              "store_id": {
                                "description": "Store ID associated with the chat",
                                "type": "integer"
                              },
                              "trigger": {
                                "description": "Trigger condition for the follow up chat",
                                "type": "string"
                              }
                            },
                            "title": "FollowUpChat",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_purchase_kwai": {
                          "description": "Is this order a Kwai purchase",
                          "type": "boolean"
                        },
                        "shipping_discount": {
                          "description": "Shipping discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "conflict_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "paid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "confirmed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "canceled_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "status": {
                          "description": "Order status",
                          "enum": [
                            "draft",
                            "pending",
                            "confirmed",
                            "in_process",
                            "ready",
                            "shipped",
                            "completed",
                            "canceled",
                            "rts",
                            "closed"
                          ],
                          "type": "string"
                        },
                        "is_dropshipping": {
                          "description": "Is the order a dropshipping order",
                          "type": "boolean"
                        },
                        "payment_account_id": {
                          "description": "Payment account ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "is_repeat": {
                          "description": "Is repeat order",
                          "type": "boolean"
                        },
                        "tiktok_pixel_ids": {
                          "description": "TikTok pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "fb_pixel_ids": {
                          "description": "Facebook pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Order primary key",
                          "type": "integer"
                        },
                        "unpaid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "is_purchase_tiktok": {
                          "description": "Is this order a TikTok purchase",
                          "type": "boolean"
                        },
                        "orderlines": {
                          "items": {
                            "properties": {
                              "cogs": {
                                "description": "Cost of Goods Sold for this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "cogs_bt": {
                                "description": "COGS for this order line minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount": {
                                "description": "Discount amount applied",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_bt": {
                                "description": "Discount amount minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount": {
                                "description": "Discount from a discount code",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount_bt": {
                                "description": "Discount from a discount code minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_rate": {
                                "description": "Discount rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "id": {
                                "description": "Order Line ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the order line was created",
                                "example": "2023-10-01T12:00:00Z",
                                "format": "date-time",
                                "type": "string"
                              },
                              "is_inventory": {
                                "description": "Is this order line related to inventory?",
                                "type": "boolean"
                              },
                              "item_type": {
                                "description": "Type of the item",
                                "type": "string"
                              },
                              "product_business": {
                                "description": "Business ID of the product",
                                "type": "integer"
                              },
                              "product_name": {
                                "description": "Name of the product",
                                "type": "string"
                              },
                              "product_price": {
                                "description": "Price of the product before discounts",
                                "format": "float",
                                "type": "number"
                              },
                              "product_price_bt": {
                                "description": "Price of the product before discounts minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "quantity": {
                                "description": "Quantity of the item",
                                "type": "integer"
                              },
                              "reseller_product_price": {
                                "description": "Reseller price of the product",
                                "format": "float",
                                "type": "number"
                              },
                              "reseller_product_price_bt": {
                                "description": "Reseller price of the product minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "tax_rate": {
                                "description": "Tax rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "variant": {
                                "description": "Variant ID",
                                "type": "integer"
                              },
                              "variant_cogs": {
                                "description": "COGS of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_cogs_bt": {
                                "description": "COGS of the varian minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_option1_value": {
                                "description": "Value of option 1 for the variant",
                                "type": "string"
                              },
                              "variant_option2_value": {
                                "description": "Value of option 2 for the variant",
                                "type": "string"
                              },
                              "variant_option3_value": {
                                "description": "Value of option 3 for the variant",
                                "type": "string"
                              },
                              "variant_price": {
                                "description": "Price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_price_bt": {
                                "description": "Price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price": {
                                "description": "Reseller price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price_bt": {
                                "description": "Reseller price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_sku": {
                                "description": "SKU of the variant",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Weight of the product",
                                "format": "float",
                                "type": "number"
                              }
                            },
                            "title": "OrderLine",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "shipment_status": {
                          "description": "Current shipment status of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "kwai_pixel_ids": {
                          "description": "Kwai pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "cogs_bt": {
                          "description": "Cost of goods sold for the order minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "sub_payment_method": {
                          "description": "Xendit VA bank code",
                          "enum": [
                            "BCA",
                            "BNI",
                            "BRI",
                            "MANDIRI",
                            "PERMATA",
                            "BSI",
                            "BJB",
                            "CIMB",
                            "SAHABAT_SAMPOERNA",
                            "ARTAJASA"
                          ],
                          "type": "string"
                        },
                        "payment_fee": {
                          "description": "Payment fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "channel_name": {
                          "description": "Channel name of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_rate": {
                          "description": "Discount rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "final_variants": {
                          "additionalProperties": true,
                          "description": "Final variants of the order after bundle options",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_name": {
                          "description": "Name of other income source",
                          "nullable": true,
                          "type": "string"
                        },
                        "gross_revenue": {
                          "description": "Gross revenue of the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tags": {
                          "description": "Tags associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "discount_code_id": {
                          "description": "Discount code ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "other_income": {
                          "description": "Other income amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_weight": {
                          "description": "Total weight of the order including weight bump",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_probably_spam": {
                          "description": "Is probably spam",
                          "type": "boolean"
                        },
                        "external_id": {
                          "description": "External ID of the order",
                          "type": "string"
                        },
                        "payment_status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_discount": {
                          "description": "Discount code discount amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_discount_bt": {
                          "description": "Total product discount applied minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "store": {
                          "properties": {
                            "auto_expire_days": {
                              "description": "Days until auto-expire",
                              "type": "integer"
                            },
                            "auto_other_income": {
                              "description": "Is auto other income enabled?",
                              "type": "boolean"
                            },
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "capi_purchase_value_type": {
                              "description": "Type of CAPI purchase value",
                              "enum": [
                                "gross_revenue",
                                "net_revenue",
                                "adj_gross_revenue"
                              ],
                              "type": "string"
                            },
                            "cod_purchase_triggers": {
                              "description": "COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "dynamic_other_income_cod_default_amount": {
                              "description": "Default amount for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_default_percentage": {
                              "description": "Default percentage for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "dynamic_other_income_epayment_default_amount": {
                              "description": "Default amount for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_default_percentage": {
                              "description": "Default percentage for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "fixed_auto_other_income": {
                              "description": "Is fixed auto other income enabled?",
                              "type": "boolean"
                            },
                            "id": {
                              "description": "Store ID",
                              "type": "integer"
                            },
                            "is_active": {
                              "description": "Is the store active?",
                              "type": "boolean"
                            },
                            "is_auto_expire": {
                              "description": "Is auto-expire enabled?",
                              "type": "boolean"
                            },
                            "is_discount_editable": {
                              "description": "Is discount editable?",
                              "type": "boolean"
                            },
                            "is_dropshipping_allowed": {
                              "description": "Is dropshipping allowed in this store?",
                              "type": "boolean"
                            },
                            "is_moota_enabled": {
                              "description": "Is Moota integration enabled for this store?",
                              "type": "boolean"
                            },
                            "is_postal_code": {
                              "description": "Is postal code required for orders?",
                              "type": "boolean"
                            },
                            "is_transferproof_required": {
                              "description": "Is transfer proof required for orders in this store?",
                              "type": "boolean"
                            },
                            "is_unique_code": {
                              "description": "Is unique code required for orders?",
                              "type": "boolean"
                            },
                            "is_use_waba": {
                              "description": "Is WABA integration enabled?",
                              "type": "boolean"
                            },
                            "max_unique_code_amount": {
                              "description": "Maximum amount for unique code orders",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the store",
                              "type": "string"
                            },
                            "non_cod_purchase_triggers": {
                              "description": "Non-COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "other_income_name": {
                              "description": "Name of the other income",
                              "type": "string"
                            },
                            "postal_code_requirement": {
                              "description": "Postal code requirement options",
                              "enum": [
                                "autofill",
                                "manual"
                              ],
                              "type": "string"
                            },
                            "store_courier_other_incomes": {
                              "description": "Other incomes for store couriers",
                              "items": {
                                "description": "Store Courier Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "courier_id": {
                                    "description": "Courier ID",
                                    "type": "integer"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "type": {
                                    "description": "Type of other income",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "courier_id",
                                  "type"
                                ],
                                "title": "StoreCourierOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "store_method_other_incomes": {
                              "description": "Other incomes for store methods",
                              "items": {
                                "description": "Store Payment Method Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "payment_method": {
                                    "description": "Payment Method",
                                    "type": "string"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "sub_payment_method": {
                                    "description": "Sub Payment Method",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type of amount (fixed or percentage)",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "payment_method",
                                  "type"
                                ],
                                "title": "StorePaymentMethodOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "sub_payment_methods": {
                              "description": "Xendit VA bank codes",
                              "items": {
                                "description": "Xendit VA bank code",
                                "enum": [
                                  "BCA",
                                  "BNI",
                                  "BRI",
                                  "MANDIRI",
                                  "PERMATA",
                                  "BSI",
                                  "BJB",
                                  "CIMB",
                                  "SAHABAT_SAMPOERNA",
                                  "ARTAJASA"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the store",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "UUID of the store",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderStore",
                          "type": "object"
                        },
                        "pg_payment_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway payment info",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_bt": {
                          "description": "Other income amount minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "courier_service": {
                          "properties": {
                            "code": {
                              "description": "Code for the courier service",
                              "type": "string"
                            },
                            "code_co": {
                              "description": "Code for CO courier service",
                              "type": "string"
                            },
                            "code_ka": {
                              "description": "Code for KA courier service",
                              "type": "string"
                            },
                            "code_lincah": {
                              "description": "Code for Lincah courier service",
                              "type": "string"
                            },
                            "code_mengantar": {
                              "description": "Code for Mengantar courier service",
                              "type": "string"
                            },
                            "code_ro": {
                              "description": "Code for RO courier service",
                              "type": "string"
                            },
                            "courier": {
                              "properties": {
                                "code": {
                                  "description": "Courier code",
                                  "type": "string"
                                },
                                "code_ka": {
                                  "description": "Courier code in Georgian",
                                  "type": "string"
                                },
                                "code_lincah": {
                                  "description": "Courier code in Lincah",
                                  "type": "string"
                                },
                                "code_mengantar": {
                                  "description": "Courier code for Mengantar",
                                  "type": "string"
                                },
                                "code_ro": {
                                  "description": "Courier code in Romanian",
                                  "type": "string"
                                },
                                "courier_type": {
                                  "description": "Type of the courier",
                                  "enum": [
                                    "delivery",
                                    "pickup"
                                  ],
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Courier ID",
                                  "type": "integer"
                                },
                                "is_pickup": {
                                  "description": "Is this a pickup courier?",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "Courier name",
                                  "type": "string"
                                }
                              },
                              "title": "Courier",
                              "type": "object"
                            },
                            "id": {
                              "description": "Courier Service ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the courier service",
                              "type": "string"
                            }
                          },
                          "title": "CourierService",
                          "type": "object"
                        },
                        "mark_as_spam_by": {
                          "description": "Who marked as spam",
                          "type": "string"
                        },
                        "net_payment_revenue": {
                          "description": "Net payment revenue after fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "rts_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "min_payment_fee": {
                          "description": "Minimum payment fee applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "analytics_purchases": {
                          "description": "Analytics purchases associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Analytics Purchase ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the analytics purchase was created",
                                "format": "date-time",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Order ID associated with the analytics purchase",
                                "type": "integer"
                              },
                              "payload": {
                                "additionalProperties": true,
                                "description": "Payload data of the analytics purchase",
                                "type": "object"
                              },
                              "pixel_id": {
                                "description": "Pixel ID associated with the purchase",
                                "type": "string"
                              },
                              "platform": {
                                "description": "Platform of the analytics purchase",
                                "type": "string"
                              },
                              "response": {
                                "additionalProperties": true,
                                "description": "Response data from the analytics purchase",
                                "type": "object"
                              },
                              "updated_at": {
                                "description": "Timestamp when the analytics purchase was last updated",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "AnalyticsPurchase",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_from_form": {
                          "description": "Is from form submission",
                          "type": "boolean"
                        },
                        "secret_slug": {
                          "description": "Secret slug of the order",
                          "type": "string"
                        },
                        "shipping_fee": {
                          "description": "Shipping fee charged for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tax_rate": {
                          "description": "Tax rate applied to the order",
                          "format": "float",
                          "nullable": true,
                          "type": "number"
                        },
                        "draft_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "last_updated_at": {
                          "description": "Last updated timestamp of the order",
                          "format": "date-time",
                          "type": "string"
                        },
                        "courier_additional_info": {
                          "description": "Additional information for the courier",
                          "nullable": true,
                          "type": "string"
                        },
                        "closed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "financial_entity": {
                          "properties": {
                            "code": {
                              "description": "Code of the financial entity",
                              "type": "string"
                            },
                            "duitku_code": {
                              "description": "Duitku code for the financial entity",
                              "type": "string"
                            },
                            "entity_type": {
                              "description": "Type of the financial entity",
                              "type": "string"
                            },
                            "id": {
                              "description": "Financial Entity ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the financial entity",
                              "type": "string"
                            },
                            "platform": {
                              "description": "Platform associated with the financial entity",
                              "type": "string"
                            },
                            "xendit_code": {
                              "description": "Xendit code for the financial entity",
                              "type": "string"
                            }
                          },
                          "title": "FinancialEntity",
                          "type": "object"
                        },
                        "page": {
                          "properties": {
                            "id": {
                              "description": "Page ID",
                              "type": "integer"
                            },
                            "is_published": {
                              "description": "Is the page published?",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Name of the page",
                              "type": "string"
                            },
                            "published_at": {
                              "description": "Publication date of the page",
                              "format": "date-time",
                              "type": "string"
                            },
                            "slug": {
                              "description": "Slug for the page URL",
                              "type": "string"
                            },
                            "store_id": {
                              "description": "ID of the store the page belongs to",
                              "type": "integer"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the page",
                              "type": "string"
                            }
                          },
                          "title": "PageSimple",
                          "type": "object"
                        },
                        "product_price_bt": {
                          "description": "Total product price before discounts minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_purchase_fb": {
                          "description": "Is this order a Facebook purchase",
                          "type": "boolean"
                        },
                        "product_weight": {
                          "description": "Total weight of products in the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "completed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "utm_source": {
                          "description": "UTM source of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_account_holder": {
                          "description": "Payment account holder name",
                          "nullable": true,
                          "type": "string"
                        },
                        "ip": {
                          "description": "IP address of the customer who placed the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipment_receipt": {
                          "description": "Shipment receipt URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "message_history": {
                          "description": "Message history associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "ID of the Follow Up Chat",
                                "type": "integer"
                              },
                              "is_from_bot": {
                                "description": "Is the message from bot",
                                "type": "boolean"
                              },
                              "message": {
                                "description": "Message content",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the sender",
                                "type": "string"
                              },
                              "provider": {
                                "description": "Message provider",
                                "type": "string"
                              },
                              "recipient_name": {
                                "description": "Recipient name",
                                "type": "string"
                              },
                              "recipient_phone": {
                                "description": "Recipient phone number",
                                "type": "string"
                              },
                              "sender_name": {
                                "description": "Sender name",
                                "type": "string"
                              },
                              "sender_phone": {
                                "description": "Sender phone number",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the message",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "MessageHistoryItem",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "payment_status": {
                          "description": "Order payment status",
                          "enum": [
                            "unpaid",
                            "paid",
                            "conflict",
                            "settled"
                          ],
                          "type": "string"
                        },
                        "shipment_provider_code": {
                          "description": "Shipment provider code",
                          "enum": [
                            "mengantar",
                            "lincah",
                            "ninja"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Metadata associated with the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "rtsproof_url": {
                          "description": "RTS proof URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_code_applied_to": {
                          "description": "What the discount code was applied to",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipped_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_ca_status": {
                          "description": "Order AWB courier aggregator status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "created_at": {
                          "description": "Order creation timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "pending_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "notes": {
                          "description": "Notes or comments for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "destination_address": {
                          "properties": {
                            "address": {
                              "description": "Full address",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Order Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the recipient",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Phone number of the recipient",
                              "type": "string"
                            },
                            "postal_code": {
                              "description": "Postal code of the address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the address",
                              "type": "string"
                            }
                          },
                          "title": "OrderAddress",
                          "type": "object"
                        },
                        "unique_code_discount": {
                          "description": "Unique code discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipping_fee_discount": {
                          "description": "Shipping fee discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        }
                      },
                      "title": "Order",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Shipment updated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_order"
            ]
          }
        ],
        "summary": "Update shipment-related data",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}/shipment-receipt": {
      "patch": {
        "callbacks": {},
        "description": "Update shipment receipt / tracking ID for an order.",
        "operationId": "ScalevApiWeb.OrderController.update_receipt",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "shipment_receipt": {
                    "type": "string"
                  }
                },
                "required": [
                  "shipment_receipt"
                ],
                "type": "object"
              }
            }
          },
          "description": "Update shipment receipt data",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "id": {
                          "description": "Order primary key",
                          "type": "integer"
                        },
                        "order_id": {
                          "description": "Order ID in string format",
                          "type": "string"
                        },
                        "shipment_receipt": {
                          "description": "Shipment receipt URL",
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "title": "UploadReceipt",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Receipt updated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_order"
            ]
          }
        ],
        "summary": "Update shipment receipt information",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}/shipment-status-history": {
      "post": {
        "callbacks": {},
        "description": "Create a new shipment status history entry for an order.",
        "operationId": "ScalevApiWeb.OrderController.create_ssh",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "Description of the shipment status change",
                    "type": "string"
                  },
                  "status": {
                    "description": "Order status",
                    "enum": [
                      "draft",
                      "pending",
                      "confirmed",
                      "in_process",
                      "ready",
                      "shipped",
                      "completed",
                      "canceled",
                      "rts",
                      "closed"
                    ],
                    "type": "string"
                  },
                  "timestamp": {
                    "description": "Timestamp of the shipment status change (ISO 8601 format)",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "required": [
                  "timestamp",
                  "status",
                  "description"
                ],
                "title": "OrderCreateShipmentStatusHistoryBody",
                "type": "object"
              }
            }
          },
          "description": "Shipment status history data",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "gross_revenue_for_dropshipper": {
                          "description": "Gross revenue for dropshipper after discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "advertiser": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "cogs": {
                          "description": "Cost of goods sold for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "dropshipper_name": {
                          "description": "Name of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "transferproof_url": {
                          "description": "Transfer proof URL",
                          "nullable": true,
                          "type": "string"
                        },
                        "scalev_fee": {
                          "description": "Scalev fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipment_status_history": {
                          "items": {
                            "properties": {
                              "description": {
                                "description": "Description of the status update",
                                "type": "string"
                              },
                              "status": {
                                "description": "Current status of the shipment",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the status update",
                                "format": "date-time",
                                "type": "string"
                              },
                              "timestamp_source": {
                                "description": "Source of the timestamp",
                                "type": "string"
                              }
                            },
                            "title": "ShipmentStatusHistory",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_code": {
                          "description": "Discount code used in the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "ready_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "warehouse": {
                          "properties": {
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "contact_name": {
                              "description": "Contact name at the warehouse",
                              "type": "string"
                            },
                            "contact_phone": {
                              "description": "Contact phone number at the warehouse",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the warehouse",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderWarehouse",
                          "type": "object"
                        },
                        "payment_fee_rate": {
                          "description": "Payment fee rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "pg_paid_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway paid info",
                          "nullable": true,
                          "type": "object"
                        },
                        "transfer_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "dropshipper_phone": {
                          "description": "Phone number of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipping_cost": {
                          "description": "Shipping cost for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_price": {
                          "description": "Total product price before discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "total_quantity": {
                          "description": "Total quantity of items in the order",
                          "type": "integer"
                        },
                        "net_revenue": {
                          "description": "Net revenue after all discounts and fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "bundle_price_options": {
                          "additionalProperties": true,
                          "description": "Bundle price options for the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "customer": {
                          "properties": {
                            "confirmed_at": {
                              "description": "Confirmation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "created_at": {
                              "description": "Creation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "email": {
                              "description": "Customer email",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Customer ID",
                              "type": "integer"
                            },
                            "last_updated_at": {
                              "description": "Last update timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "description": "Customer name",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Customer phone number",
                              "type": "string"
                            },
                            "status": {
                              "description": "Customer status",
                              "type": "string"
                            }
                          },
                          "title": "CustomerOrder",
                          "type": "object"
                        },
                        "variants": {
                          "additionalProperties": true,
                          "description": "Variants of the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "chat_message": {
                          "description": "Chat message associated with the order",
                          "type": "string"
                        },
                        "handler_phone": {
                          "description": "Handler phone number",
                          "nullable": true,
                          "type": "string"
                        },
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "order_emails": {
                          "description": "Order emails associated with the order",
                          "items": {
                            "properties": {
                              "from": {
                                "description": "Sender email address",
                                "type": "string"
                              },
                              "id": {
                                "description": "Order email ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Email creation timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "message_id": {
                                "description": "Message ID of the email",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Associated order primary key",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Email status",
                                "type": "string"
                              },
                              "status_history": {
                                "items": {
                                  "properties": {
                                    "status": {
                                      "description": "Email status",
                                      "type": "string"
                                    },
                                    "timestamp": {
                                      "description": "Timestamp of the status change",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "subject": {
                                "description": "Email subject",
                                "type": "string"
                              },
                              "to": {
                                "description": "Recipient email address",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the email",
                                "type": "string"
                              },
                              "updated_at": {
                                "description": "Last update timestamp of the email",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "OrderEmail",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "order_id": {
                          "description": "Order ID in string format",
                          "type": "string"
                        },
                        "product_discount": {
                          "description": "Total product discount applied",
                          "format": "decimal",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "handler": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "payment_account_number": {
                          "description": "Payment account number",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_method": {
                          "description": "Order payment method",
                          "enum": [
                            "gopay",
                            "va",
                            "qris",
                            "card",
                            "invoice",
                            "alfamart",
                            "ovo",
                            "dana",
                            "shopeepay",
                            "linkaja",
                            "no_payment",
                            "bank_transfer",
                            "marketplace",
                            "cod"
                          ],
                          "type": "string"
                        },
                        "courier": {
                          "description": "Courier ID for the order",
                          "nullable": true,
                          "type": "integer"
                        },
                        "origin_address": {
                          "properties": {
                            "address": {
                              "description": "Full address of the warehouse",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the warehouse address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "location_id": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "postal_code": {
                              "description": "Postal code of the warehouse address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the warehouse address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the warehouse address",
                              "type": "string"
                            },
                            "warehouse": {
                              "description": "ID of the associated warehouse",
                              "type": "integer"
                            }
                          },
                          "title": "WarehouseAddress",
                          "type": "object"
                        },
                        "epayment_provider": {
                          "description": "E-payment provider",
                          "nullable": true,
                          "type": "string"
                        },
                        "in_process_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "pg_reference_id": {
                          "description": "Payment gateway reference ID",
                          "nullable": true,
                          "type": "string"
                        },
                        "weight_bump": {
                          "description": "Weight bump added to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "follow_up_chat_type": {
                          "description": "Type of follow-up chat for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_status": {
                          "description": "Order AWB status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "platform": {
                          "description": "Platform of the order",
                          "type": "string"
                        },
                        "follow_up_chats": {
                          "items": {
                            "properties": {
                              "bundle_id": {
                                "description": "Bundle ID associated with the chat",
                                "type": "integer"
                              },
                              "change_status": {
                                "description": "Change status after follow up chat",
                                "type": "boolean"
                              },
                              "hours_after": {
                                "description": "Hours after which the follow up chat is triggered",
                                "type": "integer"
                              },
                              "id": {
                                "description": "Follow Up Chat ID",
                                "type": "integer"
                              },
                              "image": {
                                "description": "Image URL for the follow up chat",
                                "format": "uri",
                                "type": "string"
                              },
                              "is_default": {
                                "description": "Is this a default follow up chat?",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name of the follow up chat",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "Product ID associated with the chat",
                                "type": "integer"
                              },
                              "provider": {
                                "description": "Provider of the follow up chat service",
                                "type": "string"
                              },
                              "store_id": {
                                "description": "Store ID associated with the chat",
                                "type": "integer"
                              },
                              "trigger": {
                                "description": "Trigger condition for the follow up chat",
                                "type": "string"
                              }
                            },
                            "title": "FollowUpChat",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_purchase_kwai": {
                          "description": "Is this order a Kwai purchase",
                          "type": "boolean"
                        },
                        "shipping_discount": {
                          "description": "Shipping discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "conflict_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "paid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "confirmed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "canceled_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "status": {
                          "description": "Order status",
                          "enum": [
                            "draft",
                            "pending",
                            "confirmed",
                            "in_process",
                            "ready",
                            "shipped",
                            "completed",
                            "canceled",
                            "rts",
                            "closed"
                          ],
                          "type": "string"
                        },
                        "is_dropshipping": {
                          "description": "Is the order a dropshipping order",
                          "type": "boolean"
                        },
                        "payment_account_id": {
                          "description": "Payment account ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "is_repeat": {
                          "description": "Is repeat order",
                          "type": "boolean"
                        },
                        "tiktok_pixel_ids": {
                          "description": "TikTok pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "fb_pixel_ids": {
                          "description": "Facebook pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Order primary key",
                          "type": "integer"
                        },
                        "unpaid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "is_purchase_tiktok": {
                          "description": "Is this order a TikTok purchase",
                          "type": "boolean"
                        },
                        "orderlines": {
                          "items": {
                            "properties": {
                              "cogs": {
                                "description": "Cost of Goods Sold for this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "cogs_bt": {
                                "description": "COGS for this order line minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount": {
                                "description": "Discount amount applied",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_bt": {
                                "description": "Discount amount minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount": {
                                "description": "Discount from a discount code",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount_bt": {
                                "description": "Discount from a discount code minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_rate": {
                                "description": "Discount rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "id": {
                                "description": "Order Line ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the order line was created",
                                "example": "2023-10-01T12:00:00Z",
                                "format": "date-time",
                                "type": "string"
                              },
                              "is_inventory": {
                                "description": "Is this order line related to inventory?",
                                "type": "boolean"
                              },
                              "item_type": {
                                "description": "Type of the item",
                                "type": "string"
                              },
                              "product_business": {
                                "description": "Business ID of the product",
                                "type": "integer"
                              },
                              "product_name": {
                                "description": "Name of the product",
                                "type": "string"
                              },
                              "product_price": {
                                "description": "Price of the product before discounts",
                                "format": "float",
                                "type": "number"
                              },
                              "product_price_bt": {
                                "description": "Price of the product before discounts minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "quantity": {
                                "description": "Quantity of the item",
                                "type": "integer"
                              },
                              "reseller_product_price": {
                                "description": "Reseller price of the product",
                                "format": "float",
                                "type": "number"
                              },
                              "reseller_product_price_bt": {
                                "description": "Reseller price of the product minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "tax_rate": {
                                "description": "Tax rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "variant": {
                                "description": "Variant ID",
                                "type": "integer"
                              },
                              "variant_cogs": {
                                "description": "COGS of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_cogs_bt": {
                                "description": "COGS of the varian minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_option1_value": {
                                "description": "Value of option 1 for the variant",
                                "type": "string"
                              },
                              "variant_option2_value": {
                                "description": "Value of option 2 for the variant",
                                "type": "string"
                              },
                              "variant_option3_value": {
                                "description": "Value of option 3 for the variant",
                                "type": "string"
                              },
                              "variant_price": {
                                "description": "Price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_price_bt": {
                                "description": "Price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price": {
                                "description": "Reseller price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price_bt": {
                                "description": "Reseller price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_sku": {
                                "description": "SKU of the variant",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Weight of the product",
                                "format": "float",
                                "type": "number"
                              }
                            },
                            "title": "OrderLine",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "shipment_status": {
                          "description": "Current shipment status of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "kwai_pixel_ids": {
                          "description": "Kwai pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "cogs_bt": {
                          "description": "Cost of goods sold for the order minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "sub_payment_method": {
                          "description": "Xendit VA bank code",
                          "enum": [
                            "BCA",
                            "BNI",
                            "BRI",
                            "MANDIRI",
                            "PERMATA",
                            "BSI",
                            "BJB",
                            "CIMB",
                            "SAHABAT_SAMPOERNA",
                            "ARTAJASA"
                          ],
                          "type": "string"
                        },
                        "payment_fee": {
                          "description": "Payment fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "channel_name": {
                          "description": "Channel name of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_rate": {
                          "description": "Discount rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "final_variants": {
                          "additionalProperties": true,
                          "description": "Final variants of the order after bundle options",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_name": {
                          "description": "Name of other income source",
                          "nullable": true,
                          "type": "string"
                        },
                        "gross_revenue": {
                          "description": "Gross revenue of the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tags": {
                          "description": "Tags associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "discount_code_id": {
                          "description": "Discount code ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "other_income": {
                          "description": "Other income amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_weight": {
                          "description": "Total weight of the order including weight bump",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_probably_spam": {
                          "description": "Is probably spam",
                          "type": "boolean"
                        },
                        "external_id": {
                          "description": "External ID of the order",
                          "type": "string"
                        },
                        "payment_status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_discount": {
                          "description": "Discount code discount amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_discount_bt": {
                          "description": "Total product discount applied minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "store": {
                          "properties": {
                            "auto_expire_days": {
                              "description": "Days until auto-expire",
                              "type": "integer"
                            },
                            "auto_other_income": {
                              "description": "Is auto other income enabled?",
                              "type": "boolean"
                            },
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "capi_purchase_value_type": {
                              "description": "Type of CAPI purchase value",
                              "enum": [
                                "gross_revenue",
                                "net_revenue",
                                "adj_gross_revenue"
                              ],
                              "type": "string"
                            },
                            "cod_purchase_triggers": {
                              "description": "COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "dynamic_other_income_cod_default_amount": {
                              "description": "Default amount for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_default_percentage": {
                              "description": "Default percentage for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "dynamic_other_income_epayment_default_amount": {
                              "description": "Default amount for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_default_percentage": {
                              "description": "Default percentage for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "fixed_auto_other_income": {
                              "description": "Is fixed auto other income enabled?",
                              "type": "boolean"
                            },
                            "id": {
                              "description": "Store ID",
                              "type": "integer"
                            },
                            "is_active": {
                              "description": "Is the store active?",
                              "type": "boolean"
                            },
                            "is_auto_expire": {
                              "description": "Is auto-expire enabled?",
                              "type": "boolean"
                            },
                            "is_discount_editable": {
                              "description": "Is discount editable?",
                              "type": "boolean"
                            },
                            "is_dropshipping_allowed": {
                              "description": "Is dropshipping allowed in this store?",
                              "type": "boolean"
                            },
                            "is_moota_enabled": {
                              "description": "Is Moota integration enabled for this store?",
                              "type": "boolean"
                            },
                            "is_postal_code": {
                              "description": "Is postal code required for orders?",
                              "type": "boolean"
                            },
                            "is_transferproof_required": {
                              "description": "Is transfer proof required for orders in this store?",
                              "type": "boolean"
                            },
                            "is_unique_code": {
                              "description": "Is unique code required for orders?",
                              "type": "boolean"
                            },
                            "is_use_waba": {
                              "description": "Is WABA integration enabled?",
                              "type": "boolean"
                            },
                            "max_unique_code_amount": {
                              "description": "Maximum amount for unique code orders",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the store",
                              "type": "string"
                            },
                            "non_cod_purchase_triggers": {
                              "description": "Non-COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "other_income_name": {
                              "description": "Name of the other income",
                              "type": "string"
                            },
                            "postal_code_requirement": {
                              "description": "Postal code requirement options",
                              "enum": [
                                "autofill",
                                "manual"
                              ],
                              "type": "string"
                            },
                            "store_courier_other_incomes": {
                              "description": "Other incomes for store couriers",
                              "items": {
                                "description": "Store Courier Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "courier_id": {
                                    "description": "Courier ID",
                                    "type": "integer"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "type": {
                                    "description": "Type of other income",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "courier_id",
                                  "type"
                                ],
                                "title": "StoreCourierOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "store_method_other_incomes": {
                              "description": "Other incomes for store methods",
                              "items": {
                                "description": "Store Payment Method Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "payment_method": {
                                    "description": "Payment Method",
                                    "type": "string"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "sub_payment_method": {
                                    "description": "Sub Payment Method",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type of amount (fixed or percentage)",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "payment_method",
                                  "type"
                                ],
                                "title": "StorePaymentMethodOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "sub_payment_methods": {
                              "description": "Xendit VA bank codes",
                              "items": {
                                "description": "Xendit VA bank code",
                                "enum": [
                                  "BCA",
                                  "BNI",
                                  "BRI",
                                  "MANDIRI",
                                  "PERMATA",
                                  "BSI",
                                  "BJB",
                                  "CIMB",
                                  "SAHABAT_SAMPOERNA",
                                  "ARTAJASA"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the store",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "UUID of the store",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderStore",
                          "type": "object"
                        },
                        "pg_payment_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway payment info",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_bt": {
                          "description": "Other income amount minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "courier_service": {
                          "properties": {
                            "code": {
                              "description": "Code for the courier service",
                              "type": "string"
                            },
                            "code_co": {
                              "description": "Code for CO courier service",
                              "type": "string"
                            },
                            "code_ka": {
                              "description": "Code for KA courier service",
                              "type": "string"
                            },
                            "code_lincah": {
                              "description": "Code for Lincah courier service",
                              "type": "string"
                            },
                            "code_mengantar": {
                              "description": "Code for Mengantar courier service",
                              "type": "string"
                            },
                            "code_ro": {
                              "description": "Code for RO courier service",
                              "type": "string"
                            },
                            "courier": {
                              "properties": {
                                "code": {
                                  "description": "Courier code",
                                  "type": "string"
                                },
                                "code_ka": {
                                  "description": "Courier code in Georgian",
                                  "type": "string"
                                },
                                "code_lincah": {
                                  "description": "Courier code in Lincah",
                                  "type": "string"
                                },
                                "code_mengantar": {
                                  "description": "Courier code for Mengantar",
                                  "type": "string"
                                },
                                "code_ro": {
                                  "description": "Courier code in Romanian",
                                  "type": "string"
                                },
                                "courier_type": {
                                  "description": "Type of the courier",
                                  "enum": [
                                    "delivery",
                                    "pickup"
                                  ],
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Courier ID",
                                  "type": "integer"
                                },
                                "is_pickup": {
                                  "description": "Is this a pickup courier?",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "Courier name",
                                  "type": "string"
                                }
                              },
                              "title": "Courier",
                              "type": "object"
                            },
                            "id": {
                              "description": "Courier Service ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the courier service",
                              "type": "string"
                            }
                          },
                          "title": "CourierService",
                          "type": "object"
                        },
                        "mark_as_spam_by": {
                          "description": "Who marked as spam",
                          "type": "string"
                        },
                        "net_payment_revenue": {
                          "description": "Net payment revenue after fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "rts_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "min_payment_fee": {
                          "description": "Minimum payment fee applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "analytics_purchases": {
                          "description": "Analytics purchases associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Analytics Purchase ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the analytics purchase was created",
                                "format": "date-time",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Order ID associated with the analytics purchase",
                                "type": "integer"
                              },
                              "payload": {
                                "additionalProperties": true,
                                "description": "Payload data of the analytics purchase",
                                "type": "object"
                              },
                              "pixel_id": {
                                "description": "Pixel ID associated with the purchase",
                                "type": "string"
                              },
                              "platform": {
                                "description": "Platform of the analytics purchase",
                                "type": "string"
                              },
                              "response": {
                                "additionalProperties": true,
                                "description": "Response data from the analytics purchase",
                                "type": "object"
                              },
                              "updated_at": {
                                "description": "Timestamp when the analytics purchase was last updated",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "AnalyticsPurchase",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_from_form": {
                          "description": "Is from form submission",
                          "type": "boolean"
                        },
                        "secret_slug": {
                          "description": "Secret slug of the order",
                          "type": "string"
                        },
                        "shipping_fee": {
                          "description": "Shipping fee charged for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tax_rate": {
                          "description": "Tax rate applied to the order",
                          "format": "float",
                          "nullable": true,
                          "type": "number"
                        },
                        "draft_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "last_updated_at": {
                          "description": "Last updated timestamp of the order",
                          "format": "date-time",
                          "type": "string"
                        },
                        "courier_additional_info": {
                          "description": "Additional information for the courier",
                          "nullable": true,
                          "type": "string"
                        },
                        "closed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "financial_entity": {
                          "properties": {
                            "code": {
                              "description": "Code of the financial entity",
                              "type": "string"
                            },
                            "duitku_code": {
                              "description": "Duitku code for the financial entity",
                              "type": "string"
                            },
                            "entity_type": {
                              "description": "Type of the financial entity",
                              "type": "string"
                            },
                            "id": {
                              "description": "Financial Entity ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the financial entity",
                              "type": "string"
                            },
                            "platform": {
                              "description": "Platform associated with the financial entity",
                              "type": "string"
                            },
                            "xendit_code": {
                              "description": "Xendit code for the financial entity",
                              "type": "string"
                            }
                          },
                          "title": "FinancialEntity",
                          "type": "object"
                        },
                        "page": {
                          "properties": {
                            "id": {
                              "description": "Page ID",
                              "type": "integer"
                            },
                            "is_published": {
                              "description": "Is the page published?",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Name of the page",
                              "type": "string"
                            },
                            "published_at": {
                              "description": "Publication date of the page",
                              "format": "date-time",
                              "type": "string"
                            },
                            "slug": {
                              "description": "Slug for the page URL",
                              "type": "string"
                            },
                            "store_id": {
                              "description": "ID of the store the page belongs to",
                              "type": "integer"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the page",
                              "type": "string"
                            }
                          },
                          "title": "PageSimple",
                          "type": "object"
                        },
                        "product_price_bt": {
                          "description": "Total product price before discounts minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_purchase_fb": {
                          "description": "Is this order a Facebook purchase",
                          "type": "boolean"
                        },
                        "product_weight": {
                          "description": "Total weight of products in the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "completed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "utm_source": {
                          "description": "UTM source of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_account_holder": {
                          "description": "Payment account holder name",
                          "nullable": true,
                          "type": "string"
                        },
                        "ip": {
                          "description": "IP address of the customer who placed the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipment_receipt": {
                          "description": "Shipment receipt URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "message_history": {
                          "description": "Message history associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "ID of the Follow Up Chat",
                                "type": "integer"
                              },
                              "is_from_bot": {
                                "description": "Is the message from bot",
                                "type": "boolean"
                              },
                              "message": {
                                "description": "Message content",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the sender",
                                "type": "string"
                              },
                              "provider": {
                                "description": "Message provider",
                                "type": "string"
                              },
                              "recipient_name": {
                                "description": "Recipient name",
                                "type": "string"
                              },
                              "recipient_phone": {
                                "description": "Recipient phone number",
                                "type": "string"
                              },
                              "sender_name": {
                                "description": "Sender name",
                                "type": "string"
                              },
                              "sender_phone": {
                                "description": "Sender phone number",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the message",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "MessageHistoryItem",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "payment_status": {
                          "description": "Order payment status",
                          "enum": [
                            "unpaid",
                            "paid",
                            "conflict",
                            "settled"
                          ],
                          "type": "string"
                        },
                        "shipment_provider_code": {
                          "description": "Shipment provider code",
                          "enum": [
                            "mengantar",
                            "lincah",
                            "ninja"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Metadata associated with the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "rtsproof_url": {
                          "description": "RTS proof URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_code_applied_to": {
                          "description": "What the discount code was applied to",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipped_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_ca_status": {
                          "description": "Order AWB courier aggregator status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "created_at": {
                          "description": "Order creation timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "pending_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "notes": {
                          "description": "Notes or comments for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "destination_address": {
                          "properties": {
                            "address": {
                              "description": "Full address",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Order Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the recipient",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Phone number of the recipient",
                              "type": "string"
                            },
                            "postal_code": {
                              "description": "Postal code of the address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the address",
                              "type": "string"
                            }
                          },
                          "title": "OrderAddress",
                          "type": "object"
                        },
                        "unique_code_discount": {
                          "description": "Unique code discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipping_fee_discount": {
                          "description": "Shipping fee discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        }
                      },
                      "title": "Order",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "SSH connection created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_order"
            ]
          }
        ],
        "summary": "Create shipment status history",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}/trigger-purchase": {
      "post": {
        "callbacks": {},
        "description": "Trigger purchase event for analytics and tracking.",
        "operationId": "ScalevApiWeb.OrderController.trigger_purchase_event",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "kwai": {
                          "additionalProperties": true,
                          "description": "Kwai purchase trigger response",
                          "type": "object"
                        },
                        "meta": {
                          "additionalProperties": true,
                          "description": "Meta purchase trigger response",
                          "type": "object"
                        },
                        "tiktok": {
                          "additionalProperties": true,
                          "description": "TikTok purchase trigger response",
                          "type": "object"
                        }
                      },
                      "title": "TriggerPurchase",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Purchase event triggered sucessfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_order"
            ]
          }
        ],
        "summary": "Trigger purchase event",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/order/{id}/update-tags": {
      "post": {
        "callbacks": {},
        "description": "Update tags for an order.",
        "operationId": "ScalevApiWeb.OrderController.update_tags",
        "parameters": [
          {
            "description": "Order primary key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "tags": {
                    "items": {
                      "description": "Order tags to update",
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "tags"
                ],
                "type": "object"
              }
            }
          },
          "description": "Order tags data",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "gross_revenue_for_dropshipper": {
                          "description": "Gross revenue for dropshipper after discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "advertiser": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "cogs": {
                          "description": "Cost of goods sold for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "dropshipper_name": {
                          "description": "Name of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "transferproof_url": {
                          "description": "Transfer proof URL",
                          "nullable": true,
                          "type": "string"
                        },
                        "scalev_fee": {
                          "description": "Scalev fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipment_status_history": {
                          "items": {
                            "properties": {
                              "description": {
                                "description": "Description of the status update",
                                "type": "string"
                              },
                              "status": {
                                "description": "Current status of the shipment",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the status update",
                                "format": "date-time",
                                "type": "string"
                              },
                              "timestamp_source": {
                                "description": "Source of the timestamp",
                                "type": "string"
                              }
                            },
                            "title": "ShipmentStatusHistory",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_code": {
                          "description": "Discount code used in the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "ready_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "warehouse": {
                          "properties": {
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "contact_name": {
                              "description": "Contact name at the warehouse",
                              "type": "string"
                            },
                            "contact_phone": {
                              "description": "Contact phone number at the warehouse",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the warehouse",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderWarehouse",
                          "type": "object"
                        },
                        "payment_fee_rate": {
                          "description": "Payment fee rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "pg_paid_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway paid info",
                          "nullable": true,
                          "type": "object"
                        },
                        "transfer_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "dropshipper_phone": {
                          "description": "Phone number of the dropshipper",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipping_cost": {
                          "description": "Shipping cost for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_price": {
                          "description": "Total product price before discounts",
                          "format": "decimal",
                          "type": "string"
                        },
                        "total_quantity": {
                          "description": "Total quantity of items in the order",
                          "type": "integer"
                        },
                        "net_revenue": {
                          "description": "Net revenue after all discounts and fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "bundle_price_options": {
                          "additionalProperties": true,
                          "description": "Bundle price options for the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "customer": {
                          "properties": {
                            "confirmed_at": {
                              "description": "Confirmation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "created_at": {
                              "description": "Creation timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "email": {
                              "description": "Customer email",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Customer ID",
                              "type": "integer"
                            },
                            "last_updated_at": {
                              "description": "Last update timestamp",
                              "format": "date-time",
                              "type": "string"
                            },
                            "name": {
                              "description": "Customer name",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Customer phone number",
                              "type": "string"
                            },
                            "status": {
                              "description": "Customer status",
                              "type": "string"
                            }
                          },
                          "title": "CustomerOrder",
                          "type": "object"
                        },
                        "variants": {
                          "additionalProperties": true,
                          "description": "Variants of the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "chat_message": {
                          "description": "Chat message associated with the order",
                          "type": "string"
                        },
                        "handler_phone": {
                          "description": "Handler phone number",
                          "nullable": true,
                          "type": "string"
                        },
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "order_emails": {
                          "description": "Order emails associated with the order",
                          "items": {
                            "properties": {
                              "from": {
                                "description": "Sender email address",
                                "type": "string"
                              },
                              "id": {
                                "description": "Order email ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Email creation timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "message_id": {
                                "description": "Message ID of the email",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Associated order primary key",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Email status",
                                "type": "string"
                              },
                              "status_history": {
                                "items": {
                                  "properties": {
                                    "status": {
                                      "description": "Email status",
                                      "type": "string"
                                    },
                                    "timestamp": {
                                      "description": "Timestamp of the status change",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "subject": {
                                "description": "Email subject",
                                "type": "string"
                              },
                              "to": {
                                "description": "Recipient email address",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the email",
                                "type": "string"
                              },
                              "updated_at": {
                                "description": "Last update timestamp of the email",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "OrderEmail",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "order_id": {
                          "description": "Order ID in string format",
                          "type": "string"
                        },
                        "product_discount": {
                          "description": "Total product discount applied",
                          "format": "decimal",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "handler": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "payment_account_number": {
                          "description": "Payment account number",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_method": {
                          "description": "Order payment method",
                          "enum": [
                            "gopay",
                            "va",
                            "qris",
                            "card",
                            "invoice",
                            "alfamart",
                            "ovo",
                            "dana",
                            "shopeepay",
                            "linkaja",
                            "no_payment",
                            "bank_transfer",
                            "marketplace",
                            "cod"
                          ],
                          "type": "string"
                        },
                        "courier": {
                          "description": "Courier ID for the order",
                          "nullable": true,
                          "type": "integer"
                        },
                        "origin_address": {
                          "properties": {
                            "address": {
                              "description": "Full address of the warehouse",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the warehouse address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "location_id": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "postal_code": {
                              "description": "Postal code of the warehouse address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the warehouse address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the warehouse address",
                              "type": "string"
                            },
                            "warehouse": {
                              "description": "ID of the associated warehouse",
                              "type": "integer"
                            }
                          },
                          "title": "WarehouseAddress",
                          "type": "object"
                        },
                        "epayment_provider": {
                          "description": "E-payment provider",
                          "nullable": true,
                          "type": "string"
                        },
                        "in_process_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "pg_reference_id": {
                          "description": "Payment gateway reference ID",
                          "nullable": true,
                          "type": "string"
                        },
                        "weight_bump": {
                          "description": "Weight bump added to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "follow_up_chat_type": {
                          "description": "Type of follow-up chat for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_status": {
                          "description": "Order AWB status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "platform": {
                          "description": "Platform of the order",
                          "type": "string"
                        },
                        "follow_up_chats": {
                          "items": {
                            "properties": {
                              "bundle_id": {
                                "description": "Bundle ID associated with the chat",
                                "type": "integer"
                              },
                              "change_status": {
                                "description": "Change status after follow up chat",
                                "type": "boolean"
                              },
                              "hours_after": {
                                "description": "Hours after which the follow up chat is triggered",
                                "type": "integer"
                              },
                              "id": {
                                "description": "Follow Up Chat ID",
                                "type": "integer"
                              },
                              "image": {
                                "description": "Image URL for the follow up chat",
                                "format": "uri",
                                "type": "string"
                              },
                              "is_default": {
                                "description": "Is this a default follow up chat?",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name of the follow up chat",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "Product ID associated with the chat",
                                "type": "integer"
                              },
                              "provider": {
                                "description": "Provider of the follow up chat service",
                                "type": "string"
                              },
                              "store_id": {
                                "description": "Store ID associated with the chat",
                                "type": "integer"
                              },
                              "trigger": {
                                "description": "Trigger condition for the follow up chat",
                                "type": "string"
                              }
                            },
                            "title": "FollowUpChat",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_purchase_kwai": {
                          "description": "Is this order a Kwai purchase",
                          "type": "boolean"
                        },
                        "shipping_discount": {
                          "description": "Shipping discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "conflict_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "paid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "confirmed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "canceled_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "status": {
                          "description": "Order status",
                          "enum": [
                            "draft",
                            "pending",
                            "confirmed",
                            "in_process",
                            "ready",
                            "shipped",
                            "completed",
                            "canceled",
                            "rts",
                            "closed"
                          ],
                          "type": "string"
                        },
                        "is_dropshipping": {
                          "description": "Is the order a dropshipping order",
                          "type": "boolean"
                        },
                        "payment_account_id": {
                          "description": "Payment account ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "is_repeat": {
                          "description": "Is repeat order",
                          "type": "boolean"
                        },
                        "tiktok_pixel_ids": {
                          "description": "TikTok pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "fb_pixel_ids": {
                          "description": "Facebook pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Order primary key",
                          "type": "integer"
                        },
                        "unpaid_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "is_purchase_tiktok": {
                          "description": "Is this order a TikTok purchase",
                          "type": "boolean"
                        },
                        "orderlines": {
                          "items": {
                            "properties": {
                              "cogs": {
                                "description": "Cost of Goods Sold for this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "cogs_bt": {
                                "description": "COGS for this order line minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount": {
                                "description": "Discount amount applied",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_bt": {
                                "description": "Discount amount minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount": {
                                "description": "Discount from a discount code",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_code_discount_bt": {
                                "description": "Discount from a discount code minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "discount_rate": {
                                "description": "Discount rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "id": {
                                "description": "Order Line ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the order line was created",
                                "example": "2023-10-01T12:00:00Z",
                                "format": "date-time",
                                "type": "string"
                              },
                              "is_inventory": {
                                "description": "Is this order line related to inventory?",
                                "type": "boolean"
                              },
                              "item_type": {
                                "description": "Type of the item",
                                "type": "string"
                              },
                              "product_business": {
                                "description": "Business ID of the product",
                                "type": "integer"
                              },
                              "product_name": {
                                "description": "Name of the product",
                                "type": "string"
                              },
                              "product_price": {
                                "description": "Price of the product before discounts",
                                "format": "float",
                                "type": "number"
                              },
                              "product_price_bt": {
                                "description": "Price of the product before discounts minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "quantity": {
                                "description": "Quantity of the item",
                                "type": "integer"
                              },
                              "reseller_product_price": {
                                "description": "Reseller price of the product",
                                "format": "float",
                                "type": "number"
                              },
                              "reseller_product_price_bt": {
                                "description": "Reseller price of the product minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "tax_rate": {
                                "description": "Tax rate applied to this order line",
                                "format": "float",
                                "type": "number"
                              },
                              "variant": {
                                "description": "Variant ID",
                                "type": "integer"
                              },
                              "variant_cogs": {
                                "description": "COGS of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_cogs_bt": {
                                "description": "COGS of the varian minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_option1_value": {
                                "description": "Value of option 1 for the variant",
                                "type": "string"
                              },
                              "variant_option2_value": {
                                "description": "Value of option 2 for the variant",
                                "type": "string"
                              },
                              "variant_option3_value": {
                                "description": "Value of option 3 for the variant",
                                "type": "string"
                              },
                              "variant_price": {
                                "description": "Price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_price_bt": {
                                "description": "Price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price": {
                                "description": "Reseller price of the variant",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_reseller_price_bt": {
                                "description": "Reseller price of the variant minus tax",
                                "format": "float",
                                "type": "number"
                              },
                              "variant_sku": {
                                "description": "SKU of the variant",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Weight of the product",
                                "format": "float",
                                "type": "number"
                              }
                            },
                            "title": "OrderLine",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "shipment_status": {
                          "description": "Current shipment status of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "kwai_pixel_ids": {
                          "description": "Kwai pixel IDs associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "cogs_bt": {
                          "description": "Cost of goods sold for the order minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "sub_payment_method": {
                          "description": "Xendit VA bank code",
                          "enum": [
                            "BCA",
                            "BNI",
                            "BRI",
                            "MANDIRI",
                            "PERMATA",
                            "BSI",
                            "BJB",
                            "CIMB",
                            "SAHABAT_SAMPOERNA",
                            "ARTAJASA"
                          ],
                          "type": "string"
                        },
                        "payment_fee": {
                          "description": "Payment fee for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "channel_name": {
                          "description": "Channel name of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_rate": {
                          "description": "Discount rate applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "final_variants": {
                          "additionalProperties": true,
                          "description": "Final variants of the order after bundle options",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_name": {
                          "description": "Name of other income source",
                          "nullable": true,
                          "type": "string"
                        },
                        "gross_revenue": {
                          "description": "Gross revenue of the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tags": {
                          "description": "Tags associated with the order",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "discount_code_id": {
                          "description": "Discount code ID",
                          "nullable": true,
                          "type": "integer"
                        },
                        "other_income": {
                          "description": "Other income amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_weight": {
                          "description": "Total weight of the order including weight bump",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_probably_spam": {
                          "description": "Is probably spam",
                          "type": "boolean"
                        },
                        "external_id": {
                          "description": "External ID of the order",
                          "type": "string"
                        },
                        "payment_status_history": {
                          "items": {
                            "properties": {
                              "by": {
                                "description": "Who changed the status",
                                "nullable": true,
                                "type": "string"
                              },
                              "status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              },
                              "time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "discount_code_discount": {
                          "description": "Discount code discount amount",
                          "format": "decimal",
                          "type": "string"
                        },
                        "product_discount_bt": {
                          "description": "Total product discount applied minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "store": {
                          "properties": {
                            "auto_expire_days": {
                              "description": "Days until auto-expire",
                              "type": "integer"
                            },
                            "auto_other_income": {
                              "description": "Is auto other income enabled?",
                              "type": "boolean"
                            },
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "capi_purchase_value_type": {
                              "description": "Type of CAPI purchase value",
                              "enum": [
                                "gross_revenue",
                                "net_revenue",
                                "adj_gross_revenue"
                              ],
                              "type": "string"
                            },
                            "cod_purchase_triggers": {
                              "description": "COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "dynamic_other_income_cod_default_amount": {
                              "description": "Default amount for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_default_percentage": {
                              "description": "Default percentage for dynamic COD income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_cod_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "dynamic_other_income_epayment_default_amount": {
                              "description": "Default amount for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_default_percentage": {
                              "description": "Default percentage for dynamic e-payment income",
                              "format": "float",
                              "type": "number"
                            },
                            "dynamic_other_income_epayment_type": {
                              "description": "Type of amount (fixed or percentage)",
                              "enum": [
                                "fixed",
                                "percentage"
                              ],
                              "type": "string"
                            },
                            "fixed_auto_other_income": {
                              "description": "Is fixed auto other income enabled?",
                              "type": "boolean"
                            },
                            "id": {
                              "description": "Store ID",
                              "type": "integer"
                            },
                            "is_active": {
                              "description": "Is the store active?",
                              "type": "boolean"
                            },
                            "is_auto_expire": {
                              "description": "Is auto-expire enabled?",
                              "type": "boolean"
                            },
                            "is_discount_editable": {
                              "description": "Is discount editable?",
                              "type": "boolean"
                            },
                            "is_dropshipping_allowed": {
                              "description": "Is dropshipping allowed in this store?",
                              "type": "boolean"
                            },
                            "is_moota_enabled": {
                              "description": "Is Moota integration enabled for this store?",
                              "type": "boolean"
                            },
                            "is_postal_code": {
                              "description": "Is postal code required for orders?",
                              "type": "boolean"
                            },
                            "is_transferproof_required": {
                              "description": "Is transfer proof required for orders in this store?",
                              "type": "boolean"
                            },
                            "is_unique_code": {
                              "description": "Is unique code required for orders?",
                              "type": "boolean"
                            },
                            "is_use_waba": {
                              "description": "Is WABA integration enabled?",
                              "type": "boolean"
                            },
                            "max_unique_code_amount": {
                              "description": "Maximum amount for unique code orders",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the store",
                              "type": "string"
                            },
                            "non_cod_purchase_triggers": {
                              "description": "Non-COD purchase triggers",
                              "items": {
                                "enum": [
                                  "public_upload",
                                  "internal_upload",
                                  "confirmed",
                                  "shipped",
                                  "completed"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "other_income_name": {
                              "description": "Name of the other income",
                              "type": "string"
                            },
                            "postal_code_requirement": {
                              "description": "Postal code requirement options",
                              "enum": [
                                "autofill",
                                "manual"
                              ],
                              "type": "string"
                            },
                            "store_courier_other_incomes": {
                              "description": "Other incomes for store couriers",
                              "items": {
                                "description": "Store Courier Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "courier_id": {
                                    "description": "Courier ID",
                                    "type": "integer"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "type": {
                                    "description": "Type of other income",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "courier_id",
                                  "type"
                                ],
                                "title": "StoreCourierOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "store_method_other_incomes": {
                              "description": "Other incomes for store methods",
                              "items": {
                                "description": "Store Payment Method Other Income Schema",
                                "properties": {
                                  "amount": {
                                    "description": "Amount of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "payment_method": {
                                    "description": "Payment Method",
                                    "type": "string"
                                  },
                                  "percentage": {
                                    "description": "Percentage of other income",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "sub_payment_method": {
                                    "description": "Sub Payment Method",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type of amount (fixed or percentage)",
                                    "enum": [
                                      "fixed",
                                      "percentage"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "payment_method",
                                  "type"
                                ],
                                "title": "StorePaymentMethodOtherIncome",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "sub_payment_methods": {
                              "description": "Xendit VA bank codes",
                              "items": {
                                "description": "Xendit VA bank code",
                                "enum": [
                                  "BCA",
                                  "BNI",
                                  "BRI",
                                  "MANDIRI",
                                  "PERMATA",
                                  "BSI",
                                  "BJB",
                                  "CIMB",
                                  "SAHABAT_SAMPOERNA",
                                  "ARTAJASA"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the store",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "UUID of the store",
                              "type": "string"
                            }
                          },
                          "title": "ForOrderStore",
                          "type": "object"
                        },
                        "pg_payment_info": {
                          "additionalProperties": true,
                          "description": "Payment gateway payment info",
                          "nullable": true,
                          "type": "object"
                        },
                        "other_income_bt": {
                          "description": "Other income amount minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "courier_service": {
                          "properties": {
                            "code": {
                              "description": "Code for the courier service",
                              "type": "string"
                            },
                            "code_co": {
                              "description": "Code for CO courier service",
                              "type": "string"
                            },
                            "code_ka": {
                              "description": "Code for KA courier service",
                              "type": "string"
                            },
                            "code_lincah": {
                              "description": "Code for Lincah courier service",
                              "type": "string"
                            },
                            "code_mengantar": {
                              "description": "Code for Mengantar courier service",
                              "type": "string"
                            },
                            "code_ro": {
                              "description": "Code for RO courier service",
                              "type": "string"
                            },
                            "courier": {
                              "properties": {
                                "code": {
                                  "description": "Courier code",
                                  "type": "string"
                                },
                                "code_ka": {
                                  "description": "Courier code in Georgian",
                                  "type": "string"
                                },
                                "code_lincah": {
                                  "description": "Courier code in Lincah",
                                  "type": "string"
                                },
                                "code_mengantar": {
                                  "description": "Courier code for Mengantar",
                                  "type": "string"
                                },
                                "code_ro": {
                                  "description": "Courier code in Romanian",
                                  "type": "string"
                                },
                                "courier_type": {
                                  "description": "Type of the courier",
                                  "enum": [
                                    "delivery",
                                    "pickup"
                                  ],
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Courier ID",
                                  "type": "integer"
                                },
                                "is_pickup": {
                                  "description": "Is this a pickup courier?",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "Courier name",
                                  "type": "string"
                                }
                              },
                              "title": "Courier",
                              "type": "object"
                            },
                            "id": {
                              "description": "Courier Service ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the courier service",
                              "type": "string"
                            }
                          },
                          "title": "CourierService",
                          "type": "object"
                        },
                        "mark_as_spam_by": {
                          "description": "Who marked as spam",
                          "type": "string"
                        },
                        "net_payment_revenue": {
                          "description": "Net payment revenue after fees",
                          "format": "decimal",
                          "type": "string"
                        },
                        "rts_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "min_payment_fee": {
                          "description": "Minimum payment fee applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "analytics_purchases": {
                          "description": "Analytics purchases associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Analytics Purchase ID",
                                "type": "integer"
                              },
                              "inserted_at": {
                                "description": "Timestamp when the analytics purchase was created",
                                "format": "date-time",
                                "type": "string"
                              },
                              "order_id": {
                                "description": "Order ID associated with the analytics purchase",
                                "type": "integer"
                              },
                              "payload": {
                                "additionalProperties": true,
                                "description": "Payload data of the analytics purchase",
                                "type": "object"
                              },
                              "pixel_id": {
                                "description": "Pixel ID associated with the purchase",
                                "type": "string"
                              },
                              "platform": {
                                "description": "Platform of the analytics purchase",
                                "type": "string"
                              },
                              "response": {
                                "additionalProperties": true,
                                "description": "Response data from the analytics purchase",
                                "type": "object"
                              },
                              "updated_at": {
                                "description": "Timestamp when the analytics purchase was last updated",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "AnalyticsPurchase",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "is_from_form": {
                          "description": "Is from form submission",
                          "type": "boolean"
                        },
                        "secret_slug": {
                          "description": "Secret slug of the order",
                          "type": "string"
                        },
                        "shipping_fee": {
                          "description": "Shipping fee charged for the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "tax_rate": {
                          "description": "Tax rate applied to the order",
                          "format": "float",
                          "nullable": true,
                          "type": "number"
                        },
                        "draft_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "last_updated_at": {
                          "description": "Last updated timestamp of the order",
                          "format": "date-time",
                          "type": "string"
                        },
                        "courier_additional_info": {
                          "description": "Additional information for the courier",
                          "nullable": true,
                          "type": "string"
                        },
                        "closed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "financial_entity": {
                          "properties": {
                            "code": {
                              "description": "Code of the financial entity",
                              "type": "string"
                            },
                            "duitku_code": {
                              "description": "Duitku code for the financial entity",
                              "type": "string"
                            },
                            "entity_type": {
                              "description": "Type of the financial entity",
                              "type": "string"
                            },
                            "id": {
                              "description": "Financial Entity ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the financial entity",
                              "type": "string"
                            },
                            "platform": {
                              "description": "Platform associated with the financial entity",
                              "type": "string"
                            },
                            "xendit_code": {
                              "description": "Xendit code for the financial entity",
                              "type": "string"
                            }
                          },
                          "title": "FinancialEntity",
                          "type": "object"
                        },
                        "page": {
                          "properties": {
                            "id": {
                              "description": "Page ID",
                              "type": "integer"
                            },
                            "is_published": {
                              "description": "Is the page published?",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Name of the page",
                              "type": "string"
                            },
                            "published_at": {
                              "description": "Publication date of the page",
                              "format": "date-time",
                              "type": "string"
                            },
                            "slug": {
                              "description": "Slug for the page URL",
                              "type": "string"
                            },
                            "store_id": {
                              "description": "ID of the store the page belongs to",
                              "type": "integer"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the page",
                              "type": "string"
                            }
                          },
                          "title": "PageSimple",
                          "type": "object"
                        },
                        "product_price_bt": {
                          "description": "Total product price before discounts minus tax",
                          "format": "decimal",
                          "type": "string"
                        },
                        "is_purchase_fb": {
                          "description": "Is this order a Facebook purchase",
                          "type": "boolean"
                        },
                        "product_weight": {
                          "description": "Total weight of products in the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "completed_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "utm_source": {
                          "description": "UTM source of the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "payment_account_holder": {
                          "description": "Payment account holder name",
                          "nullable": true,
                          "type": "string"
                        },
                        "ip": {
                          "description": "IP address of the customer who placed the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipment_receipt": {
                          "description": "Shipment receipt URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "message_history": {
                          "description": "Message history associated with the order",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "ID of the Follow Up Chat",
                                "type": "integer"
                              },
                              "is_from_bot": {
                                "description": "Is the message from bot",
                                "type": "boolean"
                              },
                              "message": {
                                "description": "Message content",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the sender",
                                "type": "string"
                              },
                              "provider": {
                                "description": "Message provider",
                                "type": "string"
                              },
                              "recipient_name": {
                                "description": "Recipient name",
                                "type": "string"
                              },
                              "recipient_phone": {
                                "description": "Recipient phone number",
                                "type": "string"
                              },
                              "sender_name": {
                                "description": "Sender name",
                                "type": "string"
                              },
                              "sender_phone": {
                                "description": "Sender phone number",
                                "type": "string"
                              },
                              "timestamp": {
                                "description": "Timestamp of the message",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "MessageHistoryItem",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "payment_status": {
                          "description": "Order payment status",
                          "enum": [
                            "unpaid",
                            "paid",
                            "conflict",
                            "settled"
                          ],
                          "type": "string"
                        },
                        "shipment_provider_code": {
                          "description": "Shipment provider code",
                          "enum": [
                            "mengantar",
                            "lincah",
                            "ninja"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Metadata associated with the order",
                          "nullable": true,
                          "type": "object"
                        },
                        "rtsproof_url": {
                          "description": "RTS proof URL for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "discount_code_applied_to": {
                          "description": "What the discount code was applied to",
                          "nullable": true,
                          "type": "string"
                        },
                        "shipped_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "awb_ca_status": {
                          "description": "Order AWB courier aggregator status",
                          "enum": [
                            "unavailable",
                            "pending",
                            "waiting",
                            "failed",
                            "created",
                            "canceled"
                          ],
                          "type": "string"
                        },
                        "created_at": {
                          "description": "Order creation timestamp",
                          "format": "date-time",
                          "type": "string"
                        },
                        "pending_time": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "notes": {
                          "description": "Notes or comments for the order",
                          "nullable": true,
                          "type": "string"
                        },
                        "destination_address": {
                          "properties": {
                            "address": {
                              "description": "Full address",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Order Address ID",
                              "type": "integer"
                            },
                            "location": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the recipient",
                              "type": "string"
                            },
                            "phone": {
                              "description": "Phone number of the recipient",
                              "type": "string"
                            },
                            "postal_code": {
                              "description": "Postal code of the address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the address",
                              "type": "string"
                            }
                          },
                          "title": "OrderAddress",
                          "type": "object"
                        },
                        "unique_code_discount": {
                          "description": "Unique code discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        },
                        "shipping_fee_discount": {
                          "description": "Shipping fee discount applied to the order",
                          "format": "decimal",
                          "type": "string"
                        }
                      },
                      "title": "Order",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Order tags updated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_order"
            ]
          }
        ],
        "summary": "Update order tags",
        "tags": [
          "Orders"
        ]
      }
    },
    "/v2/product-taxonomies": {
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of product taxonomies.",
        "operationId": "ScalevApiWeb.ProductController.index_taxonomies",
        "parameters": [
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of items per page",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term to filter taxonomies by name (case-insensitive, partial match)",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "page": {
                          "default": 1,
                          "example": 1,
                          "nullable": false,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "full_path": {
                                "description": "Full Path",
                                "type": "string"
                              },
                              "id": {
                                "description": "Taxonomy ID",
                                "type": "integer"
                              },
                              "level_1": {
                                "description": "Level 1",
                                "type": "string"
                              },
                              "level_2": {
                                "description": "Level 2",
                                "type": "string"
                              },
                              "level_3": {
                                "description": "Level 3",
                                "type": "string"
                              },
                              "level_4": {
                                "description": "Level 4",
                                "type": "string"
                              },
                              "level_5": {
                                "description": "Level 5",
                                "type": "string"
                              },
                              "level_6": {
                                "description": "Level 6",
                                "type": "string"
                              },
                              "level_7": {
                                "description": "Level 7",
                                "type": "string"
                              }
                            },
                            "title": "ProductTaxonomy",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Paginated list of product taxonomies"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_product"
            ]
          }
        ],
        "summary": "List product taxonomies",
        "tags": [
          "Products"
        ]
      }
    },
    "/v2/product-taxonomies/{id}": {
      "get": {
        "callbacks": {},
        "description": "Shows a single product taxonomy by ID.",
        "operationId": "ScalevApiWeb.ProductController.show_taxonomy",
        "parameters": [
          {
            "description": "Taxonomy ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "full_path": {
                          "description": "Full Path",
                          "type": "string"
                        },
                        "id": {
                          "description": "Taxonomy ID",
                          "type": "integer"
                        },
                        "level_1": {
                          "description": "Level 1",
                          "type": "string"
                        },
                        "level_2": {
                          "description": "Level 2",
                          "type": "string"
                        },
                        "level_3": {
                          "description": "Level 3",
                          "type": "string"
                        },
                        "level_4": {
                          "description": "Level 4",
                          "type": "string"
                        },
                        "level_5": {
                          "description": "Level 5",
                          "type": "string"
                        },
                        "level_6": {
                          "description": "Level 6",
                          "type": "string"
                        },
                        "level_7": {
                          "description": "Level 7",
                          "type": "string"
                        }
                      },
                      "title": "ProductTaxonomy",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Product taxonomy"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_product"
            ]
          }
        ],
        "summary": "Show a product taxonomy",
        "tags": [
          "Products"
        ]
      }
    },
    "/v2/products": {
      "post": {
        "callbacks": {},
        "description": "Creates a new product with the provided data.",
        "operationId": "ScalevApiWeb.ProductController.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "is_inventory": {
                    "description": "Is Inventory",
                    "type": "boolean"
                  },
                  "is_multiple": {
                    "description": "Is Multiple",
                    "type": "boolean"
                  },
                  "is_product_sharing": {
                    "description": "Is Product Sharing",
                    "type": "boolean"
                  },
                  "item_type": {
                    "description": "Type of the product item",
                    "enum": [
                      "physical",
                      "digital",
                      "course"
                    ],
                    "title": "ItemType",
                    "type": "string"
                  },
                  "meta_thumbnail": {
                    "description": "Meta Thumbnail",
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "description": "Product Name",
                    "type": "string"
                  },
                  "option1_name": {
                    "description": "Option 1 Name",
                    "type": "string"
                  },
                  "option2_name": {
                    "description": "Option 2 Name",
                    "type": "string"
                  },
                  "option3_name": {
                    "description": "Option 3 Name",
                    "type": "string"
                  },
                  "public_name": {
                    "description": "Product Public Name",
                    "type": "string"
                  },
                  "rich_description": {
                    "description": "Rich Description",
                    "type": "string"
                  },
                  "slug": {
                    "description": "Product Slug",
                    "type": "string"
                  },
                  "taxonomy_id": {
                    "description": "Taxonomy ID",
                    "type": "integer"
                  },
                  "variants": {
                    "description": "List of variants associated with the product",
                    "items": {
                      "properties": {
                        "cogs": {
                          "description": "Cost of Goods Sold",
                          "type": "number"
                        },
                        "description": {
                          "description": "Variant Description",
                          "type": "string"
                        },
                        "images": {
                          "description": "List of image URLs",
                          "items": {
                            "format": "uri",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "is_checked": {
                          "description": "Mark variant as sellable",
                          "type": "boolean"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Additional metadata",
                          "type": "object"
                        },
                        "option1_value": {
                          "description": "Option 1 Value",
                          "type": "string"
                        },
                        "option2_value": {
                          "description": "Option 2 Value",
                          "type": "string"
                        },
                        "option3_value": {
                          "description": "Option 3 Value",
                          "type": "string"
                        },
                        "price": {
                          "description": "Price",
                          "type": "number"
                        },
                        "reseller_price": {
                          "description": "Reseller Price",
                          "type": "number"
                        },
                        "rich_description": {
                          "description": "Variant Rich Description",
                          "type": "string"
                        },
                        "self_file_urls": {
                          "description": "List of self file URLs",
                          "items": {
                            "format": "uri",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "sku": {
                          "description": "SKU",
                          "type": "string"
                        },
                        "weight": {
                          "description": "Weight in grams",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "price",
                        "weight"
                      ],
                      "title": "RequestVariant",
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "name",
                  "item_type"
                ],
                "title": "CreateRequestProduct",
                "type": "object"
              }
            }
          },
          "description": "Product data to create",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "created_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "description": {
                          "description": "Description",
                          "type": "string"
                        },
                        "display": {
                          "description": "Product name for display",
                          "type": "string"
                        },
                        "id": {
                          "description": "Product ID",
                          "type": "integer"
                        },
                        "images": {
                          "items": {
                            "format": "uri",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "is_inventory": {
                          "description": "Is Inventory",
                          "type": "boolean"
                        },
                        "is_multiple": {
                          "description": "Is Multiple",
                          "type": "boolean"
                        },
                        "is_product_sharing": {
                          "description": "Is Product Sharing",
                          "type": "boolean"
                        },
                        "item_type": {
                          "description": "Type of the product item",
                          "enum": [
                            "physical",
                            "digital",
                            "course"
                          ],
                          "title": "ItemType",
                          "type": "string"
                        },
                        "item_type_name": {
                          "description": "Item Type Name",
                          "type": "string"
                        },
                        "labels": {
                          "items": {
                            "properties": {
                              "name": {
                                "description": "Label name",
                                "type": "string"
                              }
                            },
                            "title": "ItemLabel",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "last_updated_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "meta_thumbnail": {
                          "description": "Meta Thumbnail",
                          "format": "uri",
                          "type": "string"
                        },
                        "name": {
                          "description": "Product Name",
                          "type": "string"
                        },
                        "option1_name": {
                          "description": "Option 1 Name",
                          "type": "string"
                        },
                        "option2_name": {
                          "description": "Option 2 Name",
                          "type": "string"
                        },
                        "option3_name": {
                          "description": "Option 3 Name",
                          "type": "string"
                        },
                        "product_birdsend_sequences": {
                          "items": {
                            "properties": {
                              "birdsend_sequence": {
                                "properties": {
                                  "active": {
                                    "description": "Indicates if the Birdsend sequence is active",
                                    "type": "boolean"
                                  },
                                  "form_id": {
                                    "description": "Identifier of the associated form",
                                    "type": "integer"
                                  },
                                  "id": {
                                    "description": "Birdsend sequence primary key",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the Birdsend sequence",
                                    "type": "string"
                                  },
                                  "sequence_id": {
                                    "description": "Identifier of the associated sequence",
                                    "type": "integer"
                                  },
                                  "type": {
                                    "description": "Type of the Birdsend sequence (either 'sequence' or 'form')",
                                    "enum": [
                                      "sequence",
                                      "form"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "title": "BirdsendSequence",
                                "type": "object"
                              },
                              "order_status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "ProductBirdsendSequence",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "product_mailketing_lists": {
                          "items": {
                            "properties": {
                              "mailketing_list": {
                                "properties": {
                                  "id": {
                                    "description": "Mailketing List ID",
                                    "type": "integer"
                                  },
                                  "list": {
                                    "description": "Mailketing List Name",
                                    "type": "string"
                                  },
                                  "list_name": {
                                    "description": "Mailketing List Name",
                                    "type": "string"
                                  }
                                },
                                "title": "MailketingList",
                                "type": "object"
                              },
                              "order_status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "ProductMailketingList",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "public_name": {
                          "description": "Product Public Name",
                          "type": "string"
                        },
                        "rich_description": {
                          "description": "Rich Description",
                          "type": "string"
                        },
                        "slug": {
                          "description": "Product Slug",
                          "type": "string"
                        },
                        "stores": {
                          "items": {
                            "properties": {
                              "custom_domain": {
                                "properties": {
                                  "full_url": {
                                    "description": "Full URL",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Custom Domain ID",
                                    "type": "integer"
                                  },
                                  "is_verified": {
                                    "description": "Is Verified",
                                    "type": "boolean"
                                  }
                                },
                                "title": "SimpleCustomDomain",
                                "type": "object"
                              },
                              "id": {
                                "description": "Store ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Store name",
                                "type": "string"
                              }
                            },
                            "title": "DomainStore",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "taxonomy": {
                          "properties": {
                            "full_path": {
                              "description": "Full Path",
                              "type": "string"
                            },
                            "id": {
                              "description": "Taxonomy ID",
                              "type": "integer"
                            },
                            "level_1": {
                              "description": "Level 1",
                              "type": "string"
                            },
                            "level_2": {
                              "description": "Level 2",
                              "type": "string"
                            },
                            "level_3": {
                              "description": "Level 3",
                              "type": "string"
                            },
                            "level_4": {
                              "description": "Level 4",
                              "type": "string"
                            },
                            "level_5": {
                              "description": "Level 5",
                              "type": "string"
                            },
                            "level_6": {
                              "description": "Level 6",
                              "type": "string"
                            },
                            "level_7": {
                              "description": "Level 7",
                              "type": "string"
                            }
                          },
                          "title": "ProductTaxonomy",
                          "type": "object"
                        },
                        "uuid": {
                          "description": "Product UUID",
                          "type": "string"
                        },
                        "variants": {
                          "items": {
                            "properties": {
                              "cogs": {
                                "description": "Cost of Goods Sold",
                                "type": "number"
                              },
                              "price_bt": {
                                "description": "Price Before Tax",
                                "type": "number"
                              },
                              "option1_value": {
                                "description": "Option 1 Value",
                                "type": "string"
                              },
                              "option3_icon_url": {
                                "description": "Icon URL for the third product option",
                                "format": "uri",
                                "type": "string"
                              },
                              "option1_icon_url": {
                                "description": "Icon URL for the first product option",
                                "format": "uri",
                                "type": "string"
                              },
                              "reseller_price_bt": {
                                "description": "Reseller Price Before Tax",
                                "type": "number"
                              },
                              "option2_value": {
                                "description": "Option 2 Value",
                                "type": "string"
                              },
                              "reseller_price": {
                                "description": "Reseller Price",
                                "type": "number"
                              },
                              "fullname": {
                                "description": "Variant Fullname",
                                "type": "string"
                              },
                              "uuid": {
                                "description": "Variant UUID",
                                "type": "string"
                              },
                              "rich_description": {
                                "description": "Variant Rich Description",
                                "type": "string"
                              },
                              "option2_icon_url": {
                                "description": "Icon URL for the second product option",
                                "format": "uri",
                                "type": "string"
                              },
                              "sku": {
                                "description": "SKU",
                                "type": "string"
                              },
                              "digital_product_files": {
                                "items": {
                                  "properties": {
                                    "content_type": {
                                      "description": "MIME type of the digital product file",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Digital product file primary key",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "description": "File name of the digital product file",
                                      "type": "string"
                                    },
                                    "size_in_bytes": {
                                      "description": "Size of the digital product file in bytes",
                                      "type": "integer"
                                    },
                                    "url": {
                                      "description": "URL to access the digital product file",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "title": "DigitalProductFile",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "product_name": {
                                "description": "Product Name",
                                "type": "string"
                              },
                              "item_type": {
                                "description": "Type of the product item",
                                "enum": [
                                  "physical",
                                  "digital",
                                  "course"
                                ],
                                "title": "ItemType",
                                "type": "string"
                              },
                              "upsell_form_displays": {
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Form Display ID",
                                      "type": "integer"
                                    },
                                    "page_display": {
                                      "properties": {
                                        "id": {
                                          "description": "Page Display ID",
                                          "type": "integer"
                                        },
                                        "page": {
                                          "properties": {
                                            "id": {
                                              "description": "Page ID",
                                              "type": "integer"
                                            },
                                            "is_published": {
                                              "description": "Is the page published?",
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "description": "Name of the page",
                                              "type": "string"
                                            },
                                            "published_at": {
                                              "description": "Publication date of the page",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "slug": {
                                              "description": "Slug for the page URL",
                                              "type": "string"
                                            },
                                            "store_id": {
                                              "description": "ID of the store the page belongs to",
                                              "type": "integer"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the page",
                                              "type": "string"
                                            }
                                          },
                                          "title": "PageSimple",
                                          "type": "object"
                                        }
                                      },
                                      "title": "ForProductPageDisplay",
                                      "type": "object"
                                    }
                                  },
                                  "title": "ForProductFormDisplay",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "description": {
                                "description": "Variant Description",
                                "type": "string"
                              },
                              "self_file_urls": {
                                "items": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "name": {
                                "description": "Variant Name",
                                "type": "string"
                              },
                              "id": {
                                "description": "Variant ID",
                                "type": "integer"
                              },
                              "option3_color": {
                                "description": "Color associated with the third product option",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Variant Unique ID",
                                "type": "string"
                              },
                              "cogs_bt": {
                                "description": "Cost of Goods Sold Before Tax",
                                "type": "number"
                              },
                              "option2_color": {
                                "description": "Color associated with the second product option",
                                "type": "string"
                              },
                              "price": {
                                "description": "Price",
                                "type": "number"
                              },
                              "images": {
                                "items": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "weight": {
                                "description": "Weight",
                                "type": "integer"
                              },
                              "form_displays": {
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Form Display ID",
                                      "type": "integer"
                                    },
                                    "page_display": {
                                      "properties": {
                                        "id": {
                                          "description": "Page Display ID",
                                          "type": "integer"
                                        },
                                        "page": {
                                          "properties": {
                                            "id": {
                                              "description": "Page ID",
                                              "type": "integer"
                                            },
                                            "is_published": {
                                              "description": "Is the page published?",
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "description": "Name of the page",
                                              "type": "string"
                                            },
                                            "published_at": {
                                              "description": "Publication date of the page",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "slug": {
                                              "description": "Slug for the page URL",
                                              "type": "string"
                                            },
                                            "store_id": {
                                              "description": "ID of the store the page belongs to",
                                              "type": "integer"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the page",
                                              "type": "string"
                                            }
                                          },
                                          "title": "PageSimple",
                                          "type": "object"
                                        }
                                      },
                                      "title": "ForProductPageDisplay",
                                      "type": "object"
                                    }
                                  },
                                  "title": "ForProductFormDisplay",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "is_checked": {
                                "description": "Mark variant as sellable",
                                "type": "boolean"
                              },
                              "option1_color": {
                                "description": "Color associated with the first product option",
                                "type": "string"
                              },
                              "last_updated_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "Product ID",
                                "type": "integer"
                              },
                              "option3_value": {
                                "description": "Option 3 Value",
                                "type": "string"
                              },
                              "metadata": {
                                "additionalProperties": true,
                                "type": "object"
                              },
                              "created_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "is_editable": {
                                "description": "Is Editable",
                                "type": "boolean"
                              }
                            },
                            "title": "ProductVariant",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "variants_count": {
                          "description": "Variants Count",
                          "type": "integer"
                        },
                        "warehouses": {
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Warehouse ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the warehouse",
                                "type": "string"
                              }
                            },
                            "title": "NameOnlyWarehouse",
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "title": "Product",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Product created successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "add_product"
            ]
          }
        ],
        "summary": "Create a new product",
        "tags": [
          "Products"
        ]
      },
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of products with optional filtering. The data is sorted by id in descending order and cannot be changed. Uses cursor-based pagination with default page size of 25 and maximum of 25.",
        "operationId": "ScalevApiWeb.ProductController.index",
        "parameters": [
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          },
          {
            "description": "Last order ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term to filter products by name (case-insensitive, partial match)",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter products by inventory tracking status (true or false)",
            "in": "query",
            "name": "is_inventory",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter products by product sharing status (true or false)",
            "in": "query",
            "name": "is_product_sharing",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter products associated with a specific warehouse ID",
            "in": "query",
            "name": "warehouse_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Type of quantity to filter by. Options are 'available_qty' (only products with variants that have available quantity > 0)",
            "in": "query",
            "name": "qty_type",
            "required": false,
            "schema": {
              "enum": [
                "available_qty"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter products associated with a specific store ID",
            "in": "query",
            "name": "store_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Show variants in products where is_checked is true or false",
            "in": "query",
            "name": "is_checked",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter products by ownership. 'true' returns products owned by the business, 'false' returns shared products",
            "in": "query",
            "name": "is_owned",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter products by item type (physical, digital, course)",
            "in": "query",
            "name": "item_type",
            "required": false,
            "schema": {
              "enum": [
                "physical",
                "digital",
                "course"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter products associated with a specific label name",
            "in": "query",
            "name": "label",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "business": {
                                "properties": {
                                  "account_holder": {
                                    "description": "Name of the account holder",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "Email address of the business",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Business ID",
                                    "type": "integer"
                                  },
                                  "is_banned": {
                                    "description": "Is the business banned?",
                                    "type": "boolean"
                                  },
                                  "logo": {
                                    "description": "URL to the business logo",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the business",
                                    "type": "string"
                                  },
                                  "username": {
                                    "description": "Username of the business",
                                    "type": "string"
                                  }
                                },
                                "title": "BusinessSimple",
                                "type": "object"
                              },
                              "created_at": {
                                "description": "Timestamp when the product was created",
                                "format": "date-time",
                                "type": "string"
                              },
                              "created_by": {
                                "properties": {
                                  "aff_code": {
                                    "description": "Affiliate code of the user",
                                    "type": "string"
                                  },
                                  "avatar": {
                                    "description": "URL to user avatar",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "User email",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "fullname": {
                                    "description": "User full name",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "User ID",
                                    "type": "integer"
                                  },
                                  "phone": {
                                    "description": "User phone number",
                                    "type": "string"
                                  }
                                },
                                "title": "UserSimple",
                                "type": "object"
                              },
                              "description": {
                                "description": "Detailed description of the product",
                                "type": "string"
                              },
                              "display": {
                                "description": "Display name of the product",
                                "type": "string"
                              },
                              "id": {
                                "description": "Product primary key",
                                "type": "integer"
                              },
                              "images": {
                                "description": "List of image URLs associated with the product",
                                "items": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "is_inventory": {
                                "description": "Indicates if the product is tracked in inventory",
                                "type": "boolean"
                              },
                              "is_multiple": {
                                "description": "Indicates if the product has multiple variants",
                                "type": "boolean"
                              },
                              "is_product_sharing": {
                                "description": "Indicates if the product is shared across businesses",
                                "type": "boolean"
                              },
                              "item_type": {
                                "description": "Type of the product item",
                                "enum": [
                                  "physical",
                                  "digital",
                                  "course"
                                ],
                                "title": "ItemType",
                                "type": "string"
                              },
                              "item_type_name": {
                                "description": "Human-readable name of the product item type",
                                "type": "string"
                              },
                              "labels": {
                                "description": "List of labels associated with the product",
                                "items": {
                                  "properties": {
                                    "name": {
                                      "description": "Label name",
                                      "type": "string"
                                    }
                                  },
                                  "title": "ItemLabel",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "last_updated_at": {
                                "description": "Timestamp when the product was last updated",
                                "format": "date-time",
                                "type": "string"
                              },
                              "last_updated_by": {
                                "properties": {
                                  "aff_code": {
                                    "description": "Affiliate code of the user",
                                    "type": "string"
                                  },
                                  "avatar": {
                                    "description": "URL to user avatar",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "User email",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "fullname": {
                                    "description": "User full name",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "User ID",
                                    "type": "integer"
                                  },
                                  "phone": {
                                    "description": "User phone number",
                                    "type": "string"
                                  }
                                },
                                "title": "UserSimple",
                                "type": "object"
                              },
                              "name": {
                                "description": "Product name",
                                "type": "string"
                              },
                              "option1_name": {
                                "description": "Name of the first product option",
                                "type": "string"
                              },
                              "option2_name": {
                                "description": "Name of the second product option",
                                "type": "string"
                              },
                              "option3_name": {
                                "description": "Name of the third product option",
                                "type": "string"
                              },
                              "uuid": {
                                "description": "Product UUID",
                                "type": "string"
                              },
                              "variants": {
                                "description": "List of variants associated with the product",
                                "items": {
                                  "properties": {
                                    "digital_product_files": {
                                      "description": "List of digital product files associated with the variant",
                                      "items": {
                                        "properties": {
                                          "content_type": {
                                            "description": "MIME type of the digital product file",
                                            "type": "string"
                                          },
                                          "id": {
                                            "description": "Digital product file primary key",
                                            "type": "integer"
                                          },
                                          "name": {
                                            "description": "File name of the digital product file",
                                            "type": "string"
                                          },
                                          "size_in_bytes": {
                                            "description": "Size of the digital product file in bytes",
                                            "type": "integer"
                                          },
                                          "url": {
                                            "description": "URL to access the digital product file",
                                            "format": "uri",
                                            "type": "string"
                                          }
                                        },
                                        "title": "DigitalProductFile",
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "id": {
                                      "description": "Variant primary key",
                                      "type": "integer"
                                    },
                                    "images": {
                                      "description": "List of image URLs associated with the variant",
                                      "items": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "is_checked": {
                                      "description": "Mark variant as sellable",
                                      "type": "boolean"
                                    },
                                    "is_editable": {
                                      "description": "Indicates if the variant is editable",
                                      "type": "boolean"
                                    },
                                    "item_type": {
                                      "description": "Type of the product item",
                                      "enum": [
                                        "physical",
                                        "digital",
                                        "course"
                                      ],
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "additionalProperties": true,
                                      "description": "Additional metadata associated with the variant",
                                      "type": "object"
                                    },
                                    "name": {
                                      "description": "Full name of the variant",
                                      "type": "string"
                                    },
                                    "product_name": {
                                      "description": "Name of the associated product",
                                      "type": "string"
                                    },
                                    "self_file_urls": {
                                      "description": "List of self file URLs associated with the variant",
                                      "items": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "unique_id": {
                                      "description": "Variant unique identifier",
                                      "type": "string"
                                    },
                                    "uuid": {
                                      "description": "Variant UUID",
                                      "type": "string"
                                    },
                                    "weight": {
                                      "description": "Weight of the variant in grams",
                                      "type": "integer"
                                    }
                                  },
                                  "title": "VariantList",
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "title": "ProductList",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Products list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_product"
            ]
          }
        ],
        "summary": "List products",
        "tags": [
          "Products"
        ]
      }
    },
    "/v2/products/count": {
      "get": {
        "callbacks": {},
        "description": "Returns the total count of products.",
        "operationId": "ScalevApiWeb.ProductController.show_count",
        "parameters": [
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          },
          {
            "description": "Last order ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term to filter products by name (case-insensitive, partial match)",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter products by inventory tracking status (true or false)",
            "in": "query",
            "name": "is_inventory",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter products by product sharing status (true or false)",
            "in": "query",
            "name": "is_product_sharing",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter products associated with a specific warehouse ID",
            "in": "query",
            "name": "warehouse_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Type of quantity to filter by. Options are 'available_qty' (only products with variants that have available quantity > 0)",
            "in": "query",
            "name": "qty_type",
            "required": false,
            "schema": {
              "enum": [
                "available_qty"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter products associated with a specific store ID",
            "in": "query",
            "name": "store_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Show variants in products where is_checked is true or false",
            "in": "query",
            "name": "is_checked",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter products by ownership. 'true' returns products owned by the business, 'false' returns shared products",
            "in": "query",
            "name": "is_owned",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter products by item type (physical, digital, course)",
            "in": "query",
            "name": "item_type",
            "required": false,
            "schema": {
              "enum": [
                "physical",
                "digital",
                "course"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter products associated with a specific label name",
            "in": "query",
            "name": "label",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "count": {
                          "description": "Total number of products",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Products count"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_product"
            ]
          }
        ],
        "summary": "Get total count of products",
        "tags": [
          "Products"
        ]
      }
    },
    "/v2/products/simplified": {
      "get": {
        "callbacks": {},
        "description": "Retrieves a simplified paginated list of products with optional filtering. The data is sorted by id in descending order and cannot be changed. Uses cursor-based pagination with default page size of 25 and maximum of 25.",
        "operationId": "ScalevApiWeb.ProductController.index_simplified",
        "parameters": [
          {
            "description": "If provided, includes `is_owned_by_store` field in the bundle price options to indicate if the option is already included in the specified store.",
            "in": "query",
            "name": "for_store_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          },
          {
            "description": "Last order ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term to filter products by name (case-insensitive, partial match)",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter products by inventory tracking status (true or false)",
            "in": "query",
            "name": "is_inventory",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter products by product sharing status (true or false)",
            "in": "query",
            "name": "is_product_sharing",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter products associated with a specific warehouse ID",
            "in": "query",
            "name": "warehouse_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Type of quantity to filter by. Options are 'available_qty' (only products with variants that have available quantity > 0)",
            "in": "query",
            "name": "qty_type",
            "required": false,
            "schema": {
              "enum": [
                "available_qty"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter products associated with a specific store ID",
            "in": "query",
            "name": "store_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Show variants in products where is_checked is true or false",
            "in": "query",
            "name": "is_checked",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter products by ownership. 'true' returns products owned by the business, 'false' returns shared products",
            "in": "query",
            "name": "is_owned",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter products by item type (physical, digital, course)",
            "in": "query",
            "name": "item_type",
            "required": false,
            "schema": {
              "enum": [
                "physical",
                "digital",
                "course"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter products associated with a specific label name",
            "in": "query",
            "name": "label",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "display": {
                                "description": "Display name of the product",
                                "type": "string"
                              },
                              "id": {
                                "description": "Product primary key",
                                "type": "integer"
                              },
                              "images": {
                                "description": "List of image URLs associated with the product",
                                "items": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "is_owned_by_store": {
                                "description": "If the request is made including `for_store_id` param, it shows `is_owned_by_store` field in the response, indicating if the product is included in the store.",
                                "type": "boolean"
                              },
                              "item_type": {
                                "description": "Type of the product item",
                                "enum": [
                                  "physical",
                                  "digital",
                                  "course"
                                ],
                                "title": "ItemType",
                                "type": "string"
                              },
                              "item_type_name": {
                                "description": "Human-readable name of the product item type",
                                "type": "string"
                              },
                              "labels": {
                                "description": "List of labels associated with the product",
                                "items": {
                                  "properties": {
                                    "name": {
                                      "description": "Label name",
                                      "type": "string"
                                    }
                                  },
                                  "title": "ItemLabel",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "name": {
                                "description": "Product name",
                                "type": "string"
                              },
                              "uuid": {
                                "description": "Product UUID",
                                "type": "string"
                              },
                              "variants": {
                                "description": "List of variants associated with the product",
                                "items": {
                                  "properties": {
                                    "digital_product_files": {
                                      "description": "List of digital product files associated with the variant",
                                      "items": {
                                        "properties": {
                                          "content_type": {
                                            "description": "MIME type of the digital product file",
                                            "type": "string"
                                          },
                                          "id": {
                                            "description": "Digital product file primary key",
                                            "type": "integer"
                                          },
                                          "name": {
                                            "description": "File name of the digital product file",
                                            "type": "string"
                                          },
                                          "size_in_bytes": {
                                            "description": "Size of the digital product file in bytes",
                                            "type": "integer"
                                          },
                                          "url": {
                                            "description": "URL to access the digital product file",
                                            "format": "uri",
                                            "type": "string"
                                          }
                                        },
                                        "title": "DigitalProductFile",
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "id": {
                                      "description": "Variant primary key",
                                      "type": "integer"
                                    },
                                    "images": {
                                      "description": "List of image URLs associated with the variant",
                                      "items": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "is_checked": {
                                      "description": "Mark variant as sellable",
                                      "type": "boolean"
                                    },
                                    "is_editable": {
                                      "description": "Indicates if the variant is editable",
                                      "type": "boolean"
                                    },
                                    "item_type": {
                                      "description": "Type of the product item",
                                      "enum": [
                                        "physical",
                                        "digital",
                                        "course"
                                      ],
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "additionalProperties": true,
                                      "description": "Additional metadata associated with the variant",
                                      "type": "object"
                                    },
                                    "name": {
                                      "description": "Full name of the variant",
                                      "type": "string"
                                    },
                                    "product_name": {
                                      "description": "Name of the associated product",
                                      "type": "string"
                                    },
                                    "self_file_urls": {
                                      "description": "List of self file URLs associated with the variant",
                                      "items": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "unique_id": {
                                      "description": "Variant unique identifier",
                                      "type": "string"
                                    },
                                    "uuid": {
                                      "description": "Variant UUID",
                                      "type": "string"
                                    },
                                    "weight": {
                                      "description": "Weight of the variant in grams",
                                      "type": "integer"
                                    }
                                  },
                                  "title": "VariantList",
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "title": "SimplifiedProductList",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Simplified products list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_product"
            ]
          }
        ],
        "summary": "Simplified list of products",
        "tags": [
          "Products"
        ]
      }
    },
    "/v2/products/{id}": {
      "get": {
        "callbacks": {},
        "description": "Retrieves the details of a single product, including its variants and other associated data.",
        "operationId": "ScalevApiWeb.ProductController.show",
        "parameters": [
          {
            "description": "Product ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "created_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "description": {
                          "description": "Description",
                          "type": "string"
                        },
                        "display": {
                          "description": "Product name for display",
                          "type": "string"
                        },
                        "id": {
                          "description": "Product ID",
                          "type": "integer"
                        },
                        "images": {
                          "items": {
                            "format": "uri",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "is_inventory": {
                          "description": "Is Inventory",
                          "type": "boolean"
                        },
                        "is_multiple": {
                          "description": "Is Multiple",
                          "type": "boolean"
                        },
                        "is_product_sharing": {
                          "description": "Is Product Sharing",
                          "type": "boolean"
                        },
                        "item_type": {
                          "description": "Type of the product item",
                          "enum": [
                            "physical",
                            "digital",
                            "course"
                          ],
                          "title": "ItemType",
                          "type": "string"
                        },
                        "item_type_name": {
                          "description": "Item Type Name",
                          "type": "string"
                        },
                        "labels": {
                          "items": {
                            "properties": {
                              "name": {
                                "description": "Label name",
                                "type": "string"
                              }
                            },
                            "title": "ItemLabel",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "last_updated_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "meta_thumbnail": {
                          "description": "Meta Thumbnail",
                          "format": "uri",
                          "type": "string"
                        },
                        "name": {
                          "description": "Product Name",
                          "type": "string"
                        },
                        "option1_name": {
                          "description": "Option 1 Name",
                          "type": "string"
                        },
                        "option2_name": {
                          "description": "Option 2 Name",
                          "type": "string"
                        },
                        "option3_name": {
                          "description": "Option 3 Name",
                          "type": "string"
                        },
                        "product_birdsend_sequences": {
                          "items": {
                            "properties": {
                              "birdsend_sequence": {
                                "properties": {
                                  "active": {
                                    "description": "Indicates if the Birdsend sequence is active",
                                    "type": "boolean"
                                  },
                                  "form_id": {
                                    "description": "Identifier of the associated form",
                                    "type": "integer"
                                  },
                                  "id": {
                                    "description": "Birdsend sequence primary key",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the Birdsend sequence",
                                    "type": "string"
                                  },
                                  "sequence_id": {
                                    "description": "Identifier of the associated sequence",
                                    "type": "integer"
                                  },
                                  "type": {
                                    "description": "Type of the Birdsend sequence (either 'sequence' or 'form')",
                                    "enum": [
                                      "sequence",
                                      "form"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "title": "BirdsendSequence",
                                "type": "object"
                              },
                              "order_status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "ProductBirdsendSequence",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "product_mailketing_lists": {
                          "items": {
                            "properties": {
                              "mailketing_list": {
                                "properties": {
                                  "id": {
                                    "description": "Mailketing List ID",
                                    "type": "integer"
                                  },
                                  "list": {
                                    "description": "Mailketing List Name",
                                    "type": "string"
                                  },
                                  "list_name": {
                                    "description": "Mailketing List Name",
                                    "type": "string"
                                  }
                                },
                                "title": "MailketingList",
                                "type": "object"
                              },
                              "order_status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "ProductMailketingList",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "public_name": {
                          "description": "Product Public Name",
                          "type": "string"
                        },
                        "rich_description": {
                          "description": "Rich Description",
                          "type": "string"
                        },
                        "slug": {
                          "description": "Product Slug",
                          "type": "string"
                        },
                        "stores": {
                          "items": {
                            "properties": {
                              "custom_domain": {
                                "properties": {
                                  "full_url": {
                                    "description": "Full URL",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Custom Domain ID",
                                    "type": "integer"
                                  },
                                  "is_verified": {
                                    "description": "Is Verified",
                                    "type": "boolean"
                                  }
                                },
                                "title": "SimpleCustomDomain",
                                "type": "object"
                              },
                              "id": {
                                "description": "Store ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Store name",
                                "type": "string"
                              }
                            },
                            "title": "DomainStore",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "taxonomy": {
                          "properties": {
                            "full_path": {
                              "description": "Full Path",
                              "type": "string"
                            },
                            "id": {
                              "description": "Taxonomy ID",
                              "type": "integer"
                            },
                            "level_1": {
                              "description": "Level 1",
                              "type": "string"
                            },
                            "level_2": {
                              "description": "Level 2",
                              "type": "string"
                            },
                            "level_3": {
                              "description": "Level 3",
                              "type": "string"
                            },
                            "level_4": {
                              "description": "Level 4",
                              "type": "string"
                            },
                            "level_5": {
                              "description": "Level 5",
                              "type": "string"
                            },
                            "level_6": {
                              "description": "Level 6",
                              "type": "string"
                            },
                            "level_7": {
                              "description": "Level 7",
                              "type": "string"
                            }
                          },
                          "title": "ProductTaxonomy",
                          "type": "object"
                        },
                        "uuid": {
                          "description": "Product UUID",
                          "type": "string"
                        },
                        "variants": {
                          "items": {
                            "properties": {
                              "cogs": {
                                "description": "Cost of Goods Sold",
                                "type": "number"
                              },
                              "price_bt": {
                                "description": "Price Before Tax",
                                "type": "number"
                              },
                              "option1_value": {
                                "description": "Option 1 Value",
                                "type": "string"
                              },
                              "option3_icon_url": {
                                "description": "Icon URL for the third product option",
                                "format": "uri",
                                "type": "string"
                              },
                              "option1_icon_url": {
                                "description": "Icon URL for the first product option",
                                "format": "uri",
                                "type": "string"
                              },
                              "reseller_price_bt": {
                                "description": "Reseller Price Before Tax",
                                "type": "number"
                              },
                              "option2_value": {
                                "description": "Option 2 Value",
                                "type": "string"
                              },
                              "reseller_price": {
                                "description": "Reseller Price",
                                "type": "number"
                              },
                              "fullname": {
                                "description": "Variant Fullname",
                                "type": "string"
                              },
                              "uuid": {
                                "description": "Variant UUID",
                                "type": "string"
                              },
                              "rich_description": {
                                "description": "Variant Rich Description",
                                "type": "string"
                              },
                              "option2_icon_url": {
                                "description": "Icon URL for the second product option",
                                "format": "uri",
                                "type": "string"
                              },
                              "sku": {
                                "description": "SKU",
                                "type": "string"
                              },
                              "digital_product_files": {
                                "items": {
                                  "properties": {
                                    "content_type": {
                                      "description": "MIME type of the digital product file",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Digital product file primary key",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "description": "File name of the digital product file",
                                      "type": "string"
                                    },
                                    "size_in_bytes": {
                                      "description": "Size of the digital product file in bytes",
                                      "type": "integer"
                                    },
                                    "url": {
                                      "description": "URL to access the digital product file",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "title": "DigitalProductFile",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "product_name": {
                                "description": "Product Name",
                                "type": "string"
                              },
                              "item_type": {
                                "description": "Type of the product item",
                                "enum": [
                                  "physical",
                                  "digital",
                                  "course"
                                ],
                                "title": "ItemType",
                                "type": "string"
                              },
                              "upsell_form_displays": {
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Form Display ID",
                                      "type": "integer"
                                    },
                                    "page_display": {
                                      "properties": {
                                        "id": {
                                          "description": "Page Display ID",
                                          "type": "integer"
                                        },
                                        "page": {
                                          "properties": {
                                            "id": {
                                              "description": "Page ID",
                                              "type": "integer"
                                            },
                                            "is_published": {
                                              "description": "Is the page published?",
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "description": "Name of the page",
                                              "type": "string"
                                            },
                                            "published_at": {
                                              "description": "Publication date of the page",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "slug": {
                                              "description": "Slug for the page URL",
                                              "type": "string"
                                            },
                                            "store_id": {
                                              "description": "ID of the store the page belongs to",
                                              "type": "integer"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the page",
                                              "type": "string"
                                            }
                                          },
                                          "title": "PageSimple",
                                          "type": "object"
                                        }
                                      },
                                      "title": "ForProductPageDisplay",
                                      "type": "object"
                                    }
                                  },
                                  "title": "ForProductFormDisplay",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "description": {
                                "description": "Variant Description",
                                "type": "string"
                              },
                              "self_file_urls": {
                                "items": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "name": {
                                "description": "Variant Name",
                                "type": "string"
                              },
                              "id": {
                                "description": "Variant ID",
                                "type": "integer"
                              },
                              "option3_color": {
                                "description": "Color associated with the third product option",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Variant Unique ID",
                                "type": "string"
                              },
                              "cogs_bt": {
                                "description": "Cost of Goods Sold Before Tax",
                                "type": "number"
                              },
                              "option2_color": {
                                "description": "Color associated with the second product option",
                                "type": "string"
                              },
                              "price": {
                                "description": "Price",
                                "type": "number"
                              },
                              "images": {
                                "items": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "weight": {
                                "description": "Weight",
                                "type": "integer"
                              },
                              "form_displays": {
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Form Display ID",
                                      "type": "integer"
                                    },
                                    "page_display": {
                                      "properties": {
                                        "id": {
                                          "description": "Page Display ID",
                                          "type": "integer"
                                        },
                                        "page": {
                                          "properties": {
                                            "id": {
                                              "description": "Page ID",
                                              "type": "integer"
                                            },
                                            "is_published": {
                                              "description": "Is the page published?",
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "description": "Name of the page",
                                              "type": "string"
                                            },
                                            "published_at": {
                                              "description": "Publication date of the page",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "slug": {
                                              "description": "Slug for the page URL",
                                              "type": "string"
                                            },
                                            "store_id": {
                                              "description": "ID of the store the page belongs to",
                                              "type": "integer"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the page",
                                              "type": "string"
                                            }
                                          },
                                          "title": "PageSimple",
                                          "type": "object"
                                        }
                                      },
                                      "title": "ForProductPageDisplay",
                                      "type": "object"
                                    }
                                  },
                                  "title": "ForProductFormDisplay",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "is_checked": {
                                "description": "Mark variant as sellable",
                                "type": "boolean"
                              },
                              "option1_color": {
                                "description": "Color associated with the first product option",
                                "type": "string"
                              },
                              "last_updated_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "Product ID",
                                "type": "integer"
                              },
                              "option3_value": {
                                "description": "Option 3 Value",
                                "type": "string"
                              },
                              "metadata": {
                                "additionalProperties": true,
                                "type": "object"
                              },
                              "created_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "is_editable": {
                                "description": "Is Editable",
                                "type": "boolean"
                              }
                            },
                            "title": "ProductVariant",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "variants_count": {
                          "description": "Variants Count",
                          "type": "integer"
                        },
                        "warehouses": {
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Warehouse ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the warehouse",
                                "type": "string"
                              }
                            },
                            "title": "NameOnlyWarehouse",
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "title": "Product",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Product details"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_product"
            ]
          }
        ],
        "summary": "Get a single product by ID",
        "tags": [
          "Products"
        ]
      },
      "patch": {
        "callbacks": {},
        "description": "Updates the details of a product, including its variants.",
        "operationId": "ScalevApiWeb.ProductController.update",
        "parameters": [
          {
            "description": "Product ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "description": "Description",
                    "type": "string"
                  },
                  "is_inventory": {
                    "description": "Is Inventory",
                    "type": "boolean"
                  },
                  "is_multiple": {
                    "description": "Is Multiple",
                    "type": "boolean"
                  },
                  "is_product_sharing": {
                    "description": "Is Product Sharing",
                    "type": "boolean"
                  },
                  "item_type": {
                    "description": "Type of the product item",
                    "enum": [
                      "physical",
                      "digital",
                      "course"
                    ],
                    "title": "ItemType",
                    "type": "string"
                  },
                  "meta_thumbnail": {
                    "description": "Meta Thumbnail",
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "description": "Product Name",
                    "type": "string"
                  },
                  "option1_name": {
                    "description": "Option 1 Name",
                    "type": "string"
                  },
                  "option2_name": {
                    "description": "Option 2 Name",
                    "type": "string"
                  },
                  "option3_name": {
                    "description": "Option 3 Name",
                    "type": "string"
                  },
                  "public_name": {
                    "description": "Product Public Name",
                    "type": "string"
                  },
                  "rich_description": {
                    "description": "Rich Description",
                    "type": "string"
                  },
                  "slug": {
                    "description": "Product Slug",
                    "type": "string"
                  },
                  "taxonomy_id": {
                    "description": "Taxonomy ID",
                    "type": "integer"
                  },
                  "variants": {
                    "description": "List of variants associated with the product",
                    "items": {
                      "properties": {
                        "cogs": {
                          "description": "Cost of Goods Sold",
                          "type": "number"
                        },
                        "description": {
                          "description": "Variant Description",
                          "type": "string"
                        },
                        "images": {
                          "description": "List of image URLs",
                          "items": {
                            "format": "uri",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "is_checked": {
                          "description": "Mark variant as sellable",
                          "type": "boolean"
                        },
                        "is_deleted": {
                          "description": "Mark variant as deleted",
                          "type": "boolean"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Additional metadata",
                          "type": "object"
                        },
                        "option1_value": {
                          "description": "Option 1 Value",
                          "type": "string"
                        },
                        "option2_value": {
                          "description": "Option 2 Value",
                          "type": "string"
                        },
                        "option3_value": {
                          "description": "Option 3 Value",
                          "type": "string"
                        },
                        "price": {
                          "description": "Price",
                          "type": "number"
                        },
                        "reseller_price": {
                          "description": "Reseller Price",
                          "type": "number"
                        },
                        "rich_description": {
                          "description": "Variant Rich Description",
                          "type": "string"
                        },
                        "self_file_urls": {
                          "description": "List of self file URLs",
                          "items": {
                            "format": "uri",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "sku": {
                          "description": "SKU",
                          "type": "string"
                        },
                        "variant_id": {
                          "description": "Variant ID for update; leave empty for create",
                          "type": "integer"
                        },
                        "weight": {
                          "description": "Weight in grams",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "price",
                        "weight"
                      ],
                      "title": "RequestVariant",
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "name",
                  "item_type"
                ],
                "title": "UpdateRequestProduct",
                "type": "object"
              }
            }
          },
          "description": "Product data to update",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "created_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "description": {
                          "description": "Description",
                          "type": "string"
                        },
                        "display": {
                          "description": "Product name for display",
                          "type": "string"
                        },
                        "id": {
                          "description": "Product ID",
                          "type": "integer"
                        },
                        "images": {
                          "items": {
                            "format": "uri",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "is_inventory": {
                          "description": "Is Inventory",
                          "type": "boolean"
                        },
                        "is_multiple": {
                          "description": "Is Multiple",
                          "type": "boolean"
                        },
                        "is_product_sharing": {
                          "description": "Is Product Sharing",
                          "type": "boolean"
                        },
                        "item_type": {
                          "description": "Type of the product item",
                          "enum": [
                            "physical",
                            "digital",
                            "course"
                          ],
                          "title": "ItemType",
                          "type": "string"
                        },
                        "item_type_name": {
                          "description": "Item Type Name",
                          "type": "string"
                        },
                        "labels": {
                          "items": {
                            "properties": {
                              "name": {
                                "description": "Label name",
                                "type": "string"
                              }
                            },
                            "title": "ItemLabel",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "last_updated_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "meta_thumbnail": {
                          "description": "Meta Thumbnail",
                          "format": "uri",
                          "type": "string"
                        },
                        "name": {
                          "description": "Product Name",
                          "type": "string"
                        },
                        "option1_name": {
                          "description": "Option 1 Name",
                          "type": "string"
                        },
                        "option2_name": {
                          "description": "Option 2 Name",
                          "type": "string"
                        },
                        "option3_name": {
                          "description": "Option 3 Name",
                          "type": "string"
                        },
                        "product_birdsend_sequences": {
                          "items": {
                            "properties": {
                              "birdsend_sequence": {
                                "properties": {
                                  "active": {
                                    "description": "Indicates if the Birdsend sequence is active",
                                    "type": "boolean"
                                  },
                                  "form_id": {
                                    "description": "Identifier of the associated form",
                                    "type": "integer"
                                  },
                                  "id": {
                                    "description": "Birdsend sequence primary key",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the Birdsend sequence",
                                    "type": "string"
                                  },
                                  "sequence_id": {
                                    "description": "Identifier of the associated sequence",
                                    "type": "integer"
                                  },
                                  "type": {
                                    "description": "Type of the Birdsend sequence (either 'sequence' or 'form')",
                                    "enum": [
                                      "sequence",
                                      "form"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "title": "BirdsendSequence",
                                "type": "object"
                              },
                              "order_status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "ProductBirdsendSequence",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "product_mailketing_lists": {
                          "items": {
                            "properties": {
                              "mailketing_list": {
                                "properties": {
                                  "id": {
                                    "description": "Mailketing List ID",
                                    "type": "integer"
                                  },
                                  "list": {
                                    "description": "Mailketing List Name",
                                    "type": "string"
                                  },
                                  "list_name": {
                                    "description": "Mailketing List Name",
                                    "type": "string"
                                  }
                                },
                                "title": "MailketingList",
                                "type": "object"
                              },
                              "order_status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "ProductMailketingList",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "public_name": {
                          "description": "Product Public Name",
                          "type": "string"
                        },
                        "rich_description": {
                          "description": "Rich Description",
                          "type": "string"
                        },
                        "slug": {
                          "description": "Product Slug",
                          "type": "string"
                        },
                        "stores": {
                          "items": {
                            "properties": {
                              "custom_domain": {
                                "properties": {
                                  "full_url": {
                                    "description": "Full URL",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Custom Domain ID",
                                    "type": "integer"
                                  },
                                  "is_verified": {
                                    "description": "Is Verified",
                                    "type": "boolean"
                                  }
                                },
                                "title": "SimpleCustomDomain",
                                "type": "object"
                              },
                              "id": {
                                "description": "Store ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Store name",
                                "type": "string"
                              }
                            },
                            "title": "DomainStore",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "taxonomy": {
                          "properties": {
                            "full_path": {
                              "description": "Full Path",
                              "type": "string"
                            },
                            "id": {
                              "description": "Taxonomy ID",
                              "type": "integer"
                            },
                            "level_1": {
                              "description": "Level 1",
                              "type": "string"
                            },
                            "level_2": {
                              "description": "Level 2",
                              "type": "string"
                            },
                            "level_3": {
                              "description": "Level 3",
                              "type": "string"
                            },
                            "level_4": {
                              "description": "Level 4",
                              "type": "string"
                            },
                            "level_5": {
                              "description": "Level 5",
                              "type": "string"
                            },
                            "level_6": {
                              "description": "Level 6",
                              "type": "string"
                            },
                            "level_7": {
                              "description": "Level 7",
                              "type": "string"
                            }
                          },
                          "title": "ProductTaxonomy",
                          "type": "object"
                        },
                        "uuid": {
                          "description": "Product UUID",
                          "type": "string"
                        },
                        "variants": {
                          "items": {
                            "properties": {
                              "cogs": {
                                "description": "Cost of Goods Sold",
                                "type": "number"
                              },
                              "price_bt": {
                                "description": "Price Before Tax",
                                "type": "number"
                              },
                              "option1_value": {
                                "description": "Option 1 Value",
                                "type": "string"
                              },
                              "option3_icon_url": {
                                "description": "Icon URL for the third product option",
                                "format": "uri",
                                "type": "string"
                              },
                              "option1_icon_url": {
                                "description": "Icon URL for the first product option",
                                "format": "uri",
                                "type": "string"
                              },
                              "reseller_price_bt": {
                                "description": "Reseller Price Before Tax",
                                "type": "number"
                              },
                              "option2_value": {
                                "description": "Option 2 Value",
                                "type": "string"
                              },
                              "reseller_price": {
                                "description": "Reseller Price",
                                "type": "number"
                              },
                              "fullname": {
                                "description": "Variant Fullname",
                                "type": "string"
                              },
                              "uuid": {
                                "description": "Variant UUID",
                                "type": "string"
                              },
                              "rich_description": {
                                "description": "Variant Rich Description",
                                "type": "string"
                              },
                              "option2_icon_url": {
                                "description": "Icon URL for the second product option",
                                "format": "uri",
                                "type": "string"
                              },
                              "sku": {
                                "description": "SKU",
                                "type": "string"
                              },
                              "digital_product_files": {
                                "items": {
                                  "properties": {
                                    "content_type": {
                                      "description": "MIME type of the digital product file",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Digital product file primary key",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "description": "File name of the digital product file",
                                      "type": "string"
                                    },
                                    "size_in_bytes": {
                                      "description": "Size of the digital product file in bytes",
                                      "type": "integer"
                                    },
                                    "url": {
                                      "description": "URL to access the digital product file",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "title": "DigitalProductFile",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "product_name": {
                                "description": "Product Name",
                                "type": "string"
                              },
                              "item_type": {
                                "description": "Type of the product item",
                                "enum": [
                                  "physical",
                                  "digital",
                                  "course"
                                ],
                                "title": "ItemType",
                                "type": "string"
                              },
                              "upsell_form_displays": {
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Form Display ID",
                                      "type": "integer"
                                    },
                                    "page_display": {
                                      "properties": {
                                        "id": {
                                          "description": "Page Display ID",
                                          "type": "integer"
                                        },
                                        "page": {
                                          "properties": {
                                            "id": {
                                              "description": "Page ID",
                                              "type": "integer"
                                            },
                                            "is_published": {
                                              "description": "Is the page published?",
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "description": "Name of the page",
                                              "type": "string"
                                            },
                                            "published_at": {
                                              "description": "Publication date of the page",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "slug": {
                                              "description": "Slug for the page URL",
                                              "type": "string"
                                            },
                                            "store_id": {
                                              "description": "ID of the store the page belongs to",
                                              "type": "integer"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the page",
                                              "type": "string"
                                            }
                                          },
                                          "title": "PageSimple",
                                          "type": "object"
                                        }
                                      },
                                      "title": "ForProductPageDisplay",
                                      "type": "object"
                                    }
                                  },
                                  "title": "ForProductFormDisplay",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "description": {
                                "description": "Variant Description",
                                "type": "string"
                              },
                              "self_file_urls": {
                                "items": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "name": {
                                "description": "Variant Name",
                                "type": "string"
                              },
                              "id": {
                                "description": "Variant ID",
                                "type": "integer"
                              },
                              "option3_color": {
                                "description": "Color associated with the third product option",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Variant Unique ID",
                                "type": "string"
                              },
                              "cogs_bt": {
                                "description": "Cost of Goods Sold Before Tax",
                                "type": "number"
                              },
                              "option2_color": {
                                "description": "Color associated with the second product option",
                                "type": "string"
                              },
                              "price": {
                                "description": "Price",
                                "type": "number"
                              },
                              "images": {
                                "items": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "weight": {
                                "description": "Weight",
                                "type": "integer"
                              },
                              "form_displays": {
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Form Display ID",
                                      "type": "integer"
                                    },
                                    "page_display": {
                                      "properties": {
                                        "id": {
                                          "description": "Page Display ID",
                                          "type": "integer"
                                        },
                                        "page": {
                                          "properties": {
                                            "id": {
                                              "description": "Page ID",
                                              "type": "integer"
                                            },
                                            "is_published": {
                                              "description": "Is the page published?",
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "description": "Name of the page",
                                              "type": "string"
                                            },
                                            "published_at": {
                                              "description": "Publication date of the page",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "slug": {
                                              "description": "Slug for the page URL",
                                              "type": "string"
                                            },
                                            "store_id": {
                                              "description": "ID of the store the page belongs to",
                                              "type": "integer"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the page",
                                              "type": "string"
                                            }
                                          },
                                          "title": "PageSimple",
                                          "type": "object"
                                        }
                                      },
                                      "title": "ForProductPageDisplay",
                                      "type": "object"
                                    }
                                  },
                                  "title": "ForProductFormDisplay",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "is_checked": {
                                "description": "Mark variant as sellable",
                                "type": "boolean"
                              },
                              "option1_color": {
                                "description": "Color associated with the first product option",
                                "type": "string"
                              },
                              "last_updated_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "Product ID",
                                "type": "integer"
                              },
                              "option3_value": {
                                "description": "Option 3 Value",
                                "type": "string"
                              },
                              "metadata": {
                                "additionalProperties": true,
                                "type": "object"
                              },
                              "created_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "is_editable": {
                                "description": "Is Editable",
                                "type": "boolean"
                              }
                            },
                            "title": "ProductVariant",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "variants_count": {
                          "description": "Variants Count",
                          "type": "integer"
                        },
                        "warehouses": {
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Warehouse ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the warehouse",
                                "type": "string"
                              }
                            },
                            "title": "NameOnlyWarehouse",
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "title": "Product",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Product updated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_product"
            ]
          }
        ],
        "summary": "Update a product",
        "tags": [
          "Products"
        ]
      },
      "delete": {
        "callbacks": {},
        "description": "Deletes a product and all its associated data.",
        "operationId": "ScalevApiWeb.ProductController.delete",
        "parameters": [
          {
            "description": "Product ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Product deleted successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "delete_product"
            ]
          }
        ],
        "summary": "Delete a product",
        "tags": [
          "Products"
        ]
      }
    },
    "/v2/products/{product_id}/follow-up-chats": {
      "post": {
        "callbacks": {},
        "description": "Create a follow up chat template for a product.",
        "operationId": "ScalevApiWeb.ProductController.create_fuc",
        "parameters": [
          {
            "description": "Product ID",
            "in": "path",
            "name": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "change_status": {
                    "description": "Triggered after order status change to this status",
                    "type": "boolean"
                  },
                  "hours_after": {
                    "description": "Hours after which the follow up chat is triggered",
                    "type": "integer"
                  },
                  "image": {
                    "description": "Image URL for the follow up chat",
                    "format": "uri",
                    "type": "string"
                  },
                  "is_default": {
                    "description": "Is this a default follow up chat?",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Name of the follow up chat",
                    "type": "string"
                  },
                  "provider": {
                    "description": "Provider of the follow up chat",
                    "type": "string"
                  },
                  "text_for_bank_transfer": {
                    "description": "Text for bank transfer",
                    "type": "string"
                  },
                  "text_for_cod": {
                    "description": "Text for cash on delivery",
                    "type": "string"
                  },
                  "text_for_epayment": {
                    "description": "Text for e-payments",
                    "type": "string"
                  },
                  "trigger": {
                    "description": "Trigger condition for the follow up chat",
                    "type": "string"
                  },
                  "wa_gateway_assignation_type": {
                    "description": "WhatsApp gateway assignation type",
                    "type": "string"
                  },
                  "wa_integration_id": {
                    "description": "WhatsApp integration ID",
                    "type": "integer"
                  }
                },
                "required": [
                  "name",
                  "provider"
                ],
                "title": "CreateUpdateFollowUpChatRequest",
                "type": "object"
              }
            }
          },
          "description": "Follow up chat data",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundle_id": {
                          "description": "Bundle ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "change_status": {
                          "description": "Triggered after order status change to this status",
                          "type": "boolean"
                        },
                        "hours_after": {
                          "description": "Hours after which the follow-up chat is sent",
                          "type": "integer"
                        },
                        "id": {
                          "description": "Follow-up chat ID",
                          "type": "integer"
                        },
                        "image": {
                          "description": "Image URL for the follow-up chat",
                          "format": "uri",
                          "type": "string"
                        },
                        "is_default": {
                          "description": "Is this a default follow-up chat",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Name of the follow-up chat",
                          "type": "string"
                        },
                        "product_id": {
                          "description": "Product ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "provider": {
                          "description": "Provider of the follow-up chat",
                          "type": "string"
                        },
                        "store_id": {
                          "description": "Store ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "text_for_bank_transfer": {
                          "description": "Text for bank transfer payments",
                          "type": "string"
                        },
                        "text_for_cod": {
                          "description": "Text for cash on delivery payments",
                          "type": "string"
                        },
                        "text_for_epayment": {
                          "description": "Text for electronic payments",
                          "type": "string"
                        },
                        "trigger": {
                          "description": "Trigger for the follow-up chat",
                          "type": "string"
                        },
                        "wa_gateway_assignation_type": {
                          "description": "WhatsApp gateway assignation type",
                          "type": "string"
                        },
                        "wa_integration": {
                          "properties": {
                            "id": {
                              "description": "Whatsapp Integration ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "phone_number": {
                              "description": "Phone Number",
                              "type": "string"
                            },
                            "provider": {
                              "description": "Provider",
                              "type": "string"
                            }
                          },
                          "title": "WhatsappIntegration",
                          "type": "object"
                        }
                      },
                      "title": "ManagingFollowUpChat",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Follow up chat template created successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_product"
            ]
          }
        ],
        "summary": "Create a follow up chat template",
        "tags": [
          "Products"
        ]
      },
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of follow up chats for a product.",
        "operationId": "ScalevApiWeb.ProductController.index_fucs",
        "parameters": [
          {
            "description": "Product ID",
            "in": "path",
            "name": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "bundle_id": {
                                "description": "Bundle ID associated with the follow-up chat",
                                "type": "integer"
                              },
                              "change_status": {
                                "description": "Triggered after order status change to this status",
                                "type": "boolean"
                              },
                              "hours_after": {
                                "description": "Hours after which the follow-up chat is sent",
                                "type": "integer"
                              },
                              "id": {
                                "description": "Follow-up chat ID",
                                "type": "integer"
                              },
                              "image": {
                                "description": "Image URL for the follow-up chat",
                                "format": "uri",
                                "type": "string"
                              },
                              "is_default": {
                                "description": "Is this a default follow-up chat",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name of the follow-up chat",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "Product ID associated with the follow-up chat",
                                "type": "integer"
                              },
                              "provider": {
                                "description": "Provider of the follow-up chat",
                                "type": "string"
                              },
                              "store_id": {
                                "description": "Store ID associated with the follow-up chat",
                                "type": "integer"
                              },
                              "text_for_bank_transfer": {
                                "description": "Text for bank transfer payments",
                                "type": "string"
                              },
                              "text_for_cod": {
                                "description": "Text for cash on delivery payments",
                                "type": "string"
                              },
                              "text_for_epayment": {
                                "description": "Text for electronic payments",
                                "type": "string"
                              },
                              "trigger": {
                                "description": "Trigger for the follow-up chat",
                                "type": "string"
                              },
                              "wa_gateway_assignation_type": {
                                "description": "WhatsApp gateway assignation type",
                                "type": "string"
                              },
                              "wa_integration": {
                                "properties": {
                                  "id": {
                                    "description": "Whatsapp Integration ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name",
                                    "type": "string"
                                  },
                                  "phone_number": {
                                    "description": "Phone Number",
                                    "type": "string"
                                  },
                                  "provider": {
                                    "description": "Provider",
                                    "type": "string"
                                  }
                                },
                                "title": "WhatsappIntegration",
                                "type": "object"
                              }
                            },
                            "title": "ManagingFollowUpChat",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Paginated list of follow up chats"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_product"
            ]
          }
        ],
        "summary": "List follow up chats",
        "tags": [
          "Products"
        ]
      }
    },
    "/v2/products/{product_id}/follow-up-chats/generate": {
      "post": {
        "callbacks": {},
        "description": "Generates a new follow up chat for a product.",
        "operationId": "ScalevApiWeb.ProductController.generate_fuc",
        "parameters": [
          {
            "description": "Product ID",
            "in": "path",
            "name": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Follow up chat generated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_product"
            ]
          }
        ],
        "summary": "Generate a follow up chat",
        "tags": [
          "Products"
        ]
      }
    },
    "/v2/products/{product_id}/follow-up-chats/{id}": {
      "get": {
        "callbacks": {},
        "description": "Shows a single follow up chat template by ID.",
        "operationId": "ScalevApiWeb.ProductController.show_fuc",
        "parameters": [
          {
            "description": "Product ID",
            "in": "path",
            "name": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Follow up chat ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundle_id": {
                          "description": "Bundle ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "change_status": {
                          "description": "Triggered after order status change to this status",
                          "type": "boolean"
                        },
                        "hours_after": {
                          "description": "Hours after which the follow-up chat is sent",
                          "type": "integer"
                        },
                        "id": {
                          "description": "Follow-up chat ID",
                          "type": "integer"
                        },
                        "image": {
                          "description": "Image URL for the follow-up chat",
                          "format": "uri",
                          "type": "string"
                        },
                        "is_default": {
                          "description": "Is this a default follow-up chat",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Name of the follow-up chat",
                          "type": "string"
                        },
                        "product_id": {
                          "description": "Product ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "provider": {
                          "description": "Provider of the follow-up chat",
                          "type": "string"
                        },
                        "store_id": {
                          "description": "Store ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "text_for_bank_transfer": {
                          "description": "Text for bank transfer payments",
                          "type": "string"
                        },
                        "text_for_cod": {
                          "description": "Text for cash on delivery payments",
                          "type": "string"
                        },
                        "text_for_epayment": {
                          "description": "Text for electronic payments",
                          "type": "string"
                        },
                        "trigger": {
                          "description": "Trigger for the follow-up chat",
                          "type": "string"
                        },
                        "wa_gateway_assignation_type": {
                          "description": "WhatsApp gateway assignation type",
                          "type": "string"
                        },
                        "wa_integration": {
                          "properties": {
                            "id": {
                              "description": "Whatsapp Integration ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "phone_number": {
                              "description": "Phone Number",
                              "type": "string"
                            },
                            "provider": {
                              "description": "Provider",
                              "type": "string"
                            }
                          },
                          "title": "WhatsappIntegration",
                          "type": "object"
                        }
                      },
                      "title": "ManagingFollowUpChat",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Follow up chat template"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_product"
            ]
          }
        ],
        "summary": "Show a follow up chat template",
        "tags": [
          "Products"
        ]
      },
      "patch": {
        "callbacks": {},
        "description": "Updates a follow up chat template.",
        "operationId": "ScalevApiWeb.ProductController.update_fuc",
        "parameters": [
          {
            "description": "Product ID",
            "in": "path",
            "name": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Follow up chat ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "change_status": {
                    "description": "Triggered after order status change to this status",
                    "type": "boolean"
                  },
                  "hours_after": {
                    "description": "Hours after which the follow up chat is triggered",
                    "type": "integer"
                  },
                  "image": {
                    "description": "Image URL for the follow up chat",
                    "format": "uri",
                    "type": "string"
                  },
                  "is_default": {
                    "description": "Is this a default follow up chat?",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Name of the follow up chat",
                    "type": "string"
                  },
                  "provider": {
                    "description": "Provider of the follow up chat",
                    "type": "string"
                  },
                  "text_for_bank_transfer": {
                    "description": "Text for bank transfer",
                    "type": "string"
                  },
                  "text_for_cod": {
                    "description": "Text for cash on delivery",
                    "type": "string"
                  },
                  "text_for_epayment": {
                    "description": "Text for e-payments",
                    "type": "string"
                  },
                  "trigger": {
                    "description": "Trigger condition for the follow up chat",
                    "type": "string"
                  },
                  "wa_gateway_assignation_type": {
                    "description": "WhatsApp gateway assignation type",
                    "type": "string"
                  },
                  "wa_integration_id": {
                    "description": "WhatsApp integration ID",
                    "type": "integer"
                  }
                },
                "required": [
                  "name",
                  "provider"
                ],
                "title": "CreateUpdateFollowUpChatRequest",
                "type": "object"
              }
            }
          },
          "description": "Follow up chat data to update",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundle_id": {
                          "description": "Bundle ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "change_status": {
                          "description": "Triggered after order status change to this status",
                          "type": "boolean"
                        },
                        "hours_after": {
                          "description": "Hours after which the follow-up chat is sent",
                          "type": "integer"
                        },
                        "id": {
                          "description": "Follow-up chat ID",
                          "type": "integer"
                        },
                        "image": {
                          "description": "Image URL for the follow-up chat",
                          "format": "uri",
                          "type": "string"
                        },
                        "is_default": {
                          "description": "Is this a default follow-up chat",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Name of the follow-up chat",
                          "type": "string"
                        },
                        "product_id": {
                          "description": "Product ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "provider": {
                          "description": "Provider of the follow-up chat",
                          "type": "string"
                        },
                        "store_id": {
                          "description": "Store ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "text_for_bank_transfer": {
                          "description": "Text for bank transfer payments",
                          "type": "string"
                        },
                        "text_for_cod": {
                          "description": "Text for cash on delivery payments",
                          "type": "string"
                        },
                        "text_for_epayment": {
                          "description": "Text for electronic payments",
                          "type": "string"
                        },
                        "trigger": {
                          "description": "Trigger for the follow-up chat",
                          "type": "string"
                        },
                        "wa_gateway_assignation_type": {
                          "description": "WhatsApp gateway assignation type",
                          "type": "string"
                        },
                        "wa_integration": {
                          "properties": {
                            "id": {
                              "description": "Whatsapp Integration ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "phone_number": {
                              "description": "Phone Number",
                              "type": "string"
                            },
                            "provider": {
                              "description": "Provider",
                              "type": "string"
                            }
                          },
                          "title": "WhatsappIntegration",
                          "type": "object"
                        }
                      },
                      "title": "ManagingFollowUpChat",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Follow up chat template updated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_product"
            ]
          }
        ],
        "summary": "Update a follow up chat template",
        "tags": [
          "Products"
        ]
      },
      "delete": {
        "callbacks": {},
        "description": "Deletes a follow up chat template.",
        "operationId": "ScalevApiWeb.ProductController.delete_fuc",
        "parameters": [
          {
            "description": "Product ID",
            "in": "path",
            "name": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Follow up chat ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Follow up chat template deleted successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_product"
            ]
          }
        ],
        "summary": "Delete a follow up chat template",
        "tags": [
          "Products"
        ]
      }
    },
    "/v2/products/{product_id}/partners": {
      "post": {
        "callbacks": {},
        "description": "Creates a new product partner.",
        "operationId": "ScalevApiWeb.ProductController.create_partner",
        "parameters": [
          {
            "description": "Product ID",
            "in": "path",
            "name": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "partner_unique_id": {
                    "description": "Partner Unique ID",
                    "type": "string"
                  }
                },
                "required": [
                  "partner_unique_id"
                ],
                "title": "CreatePartnerRequest",
                "type": "object"
              }
            }
          },
          "description": "Partner data",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "description": "A partner associated with a product",
                      "properties": {
                        "created_at": {
                          "description": "Timestamp when the product partner was created",
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": {
                          "description": "Unique identifier of the product partner",
                          "type": "integer"
                        },
                        "partner": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        }
                      },
                      "title": "ProductPartner",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Product partner created successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_product"
            ]
          }
        ],
        "summary": "Create a product partner",
        "tags": [
          "Products"
        ]
      },
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of product partners.",
        "operationId": "ScalevApiWeb.ProductController.index_partners",
        "parameters": [
          {
            "description": "Product ID",
            "in": "path",
            "name": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "description": "A partner associated with a product",
                            "properties": {
                              "created_at": {
                                "description": "Timestamp when the product partner was created",
                                "format": "date-time",
                                "type": "string"
                              },
                              "id": {
                                "description": "Unique identifier of the product partner",
                                "type": "integer"
                              },
                              "partner": {
                                "properties": {
                                  "account_holder": {
                                    "description": "Name of the account holder",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "Email address of the business",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Business ID",
                                    "type": "integer"
                                  },
                                  "is_banned": {
                                    "description": "Is the business banned?",
                                    "type": "boolean"
                                  },
                                  "logo": {
                                    "description": "URL to the business logo",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the business",
                                    "type": "string"
                                  },
                                  "username": {
                                    "description": "Username of the business",
                                    "type": "string"
                                  }
                                },
                                "title": "BusinessSimple",
                                "type": "object"
                              }
                            },
                            "title": "ProductPartner",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Paginated list of product partners"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_product"
            ]
          }
        ],
        "summary": "List product partners",
        "tags": [
          "Products"
        ]
      }
    },
    "/v2/products/{product_id}/partners/{id}": {
      "delete": {
        "callbacks": {},
        "description": "Deletes a product partner.",
        "operationId": "ScalevApiWeb.ProductController.delete_partner",
        "parameters": [
          {
            "description": "Product ID",
            "in": "path",
            "name": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Product Partner ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Product partner deleted successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_product"
            ]
          }
        ],
        "summary": "Delete a product partner",
        "tags": [
          "Products"
        ]
      }
    },
    "/v2/products/{product_id}/relations": {
      "get": {
        "callbacks": {},
        "description": "Shows the relations of a product, including variants, stores, bundles, and pages.",
        "operationId": "ScalevApiWeb.ProductController.show_relations",
        "parameters": [
          {
            "description": "Product ID",
            "in": "path",
            "name": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundles": {
                          "items": {
                            "properties": {
                              "bundle_price_options": {
                                "description": "List of bundle price options",
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Bundle Price Option ID",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "description": "Name",
                                      "type": "string"
                                    },
                                    "unique_id": {
                                      "description": "Bundle Price Option Unique ID",
                                      "type": "string"
                                    }
                                  },
                                  "title": "BundlePriceOptionRelation",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "business": {
                                "properties": {
                                  "account_holder": {
                                    "description": "Name of the account holder",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "Email address of the business",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Business ID",
                                    "type": "integer"
                                  },
                                  "is_banned": {
                                    "description": "Is the business banned?",
                                    "type": "boolean"
                                  },
                                  "logo": {
                                    "description": "URL to the business logo",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the business",
                                    "type": "string"
                                  },
                                  "username": {
                                    "description": "Username of the business",
                                    "type": "string"
                                  }
                                },
                                "title": "BusinessSimple",
                                "type": "object"
                              },
                              "id": {
                                "description": "Bundle ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "pages": {
                                "description": "Pages associated with the bundle",
                                "properties": {
                                  "all": {
                                    "description": "All pages associated with the bundle",
                                    "items": {
                                      "properties": {
                                        "business": {
                                          "properties": {
                                            "account_holder": {
                                              "description": "Name of the account holder",
                                              "type": "string"
                                            },
                                            "email": {
                                              "description": "Email address of the business",
                                              "format": "email",
                                              "type": "string"
                                            },
                                            "id": {
                                              "description": "Business ID",
                                              "type": "integer"
                                            },
                                            "is_banned": {
                                              "description": "Is the business banned?",
                                              "type": "boolean"
                                            },
                                            "logo": {
                                              "description": "URL to the business logo",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the business",
                                              "type": "string"
                                            },
                                            "username": {
                                              "description": "Username of the business",
                                              "type": "string"
                                            }
                                          },
                                          "title": "BusinessSimple",
                                          "type": "object"
                                        },
                                        "id": {
                                          "description": "Page ID",
                                          "type": "integer"
                                        },
                                        "name": {
                                          "description": "Name of the page",
                                          "type": "string"
                                        },
                                        "slug": {
                                          "description": "Slug for the page URL",
                                          "type": "string"
                                        },
                                        "unique_id": {
                                          "description": "Unique identifier for the page",
                                          "type": "string"
                                        }
                                      },
                                      "title": "PageRelation",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "will_unpublish": {
                                    "description": "Pages that will be unpublished",
                                    "items": {
                                      "properties": {
                                        "business": {
                                          "properties": {
                                            "account_holder": {
                                              "description": "Name of the account holder",
                                              "type": "string"
                                            },
                                            "email": {
                                              "description": "Email address of the business",
                                              "format": "email",
                                              "type": "string"
                                            },
                                            "id": {
                                              "description": "Business ID",
                                              "type": "integer"
                                            },
                                            "is_banned": {
                                              "description": "Is the business banned?",
                                              "type": "boolean"
                                            },
                                            "logo": {
                                              "description": "URL to the business logo",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the business",
                                              "type": "string"
                                            },
                                            "username": {
                                              "description": "Username of the business",
                                              "type": "string"
                                            }
                                          },
                                          "title": "BusinessSimple",
                                          "type": "object"
                                        },
                                        "id": {
                                          "description": "Page ID",
                                          "type": "integer"
                                        },
                                        "name": {
                                          "description": "Name of the page",
                                          "type": "string"
                                        },
                                        "slug": {
                                          "description": "Slug for the page URL",
                                          "type": "string"
                                        },
                                        "unique_id": {
                                          "description": "Unique identifier for the page",
                                          "type": "string"
                                        }
                                      },
                                      "title": "PageRelation",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "stores": {
                                "description": "List of stores associated with the bundle",
                                "items": {
                                  "properties": {
                                    "business": {
                                      "properties": {
                                        "account_holder": {
                                          "description": "Name of the account holder",
                                          "type": "string"
                                        },
                                        "email": {
                                          "description": "Email address of the business",
                                          "format": "email",
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "Business ID",
                                          "type": "integer"
                                        },
                                        "is_banned": {
                                          "description": "Is the business banned?",
                                          "type": "boolean"
                                        },
                                        "logo": {
                                          "description": "URL to the business logo",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "unique_id": {
                                          "description": "Unique identifier for the business",
                                          "type": "string"
                                        },
                                        "username": {
                                          "description": "Username of the business",
                                          "type": "string"
                                        }
                                      },
                                      "title": "BusinessSimple",
                                      "type": "object"
                                    },
                                    "id": {
                                      "description": "Store ID",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "description": "Store name",
                                      "type": "string"
                                    },
                                    "unique_id": {
                                      "description": "Unique identifier for the store",
                                      "type": "string"
                                    }
                                  },
                                  "title": "StoreRelation",
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "title": "BundleRelation",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Product ID",
                          "type": "integer"
                        },
                        "name": {
                          "description": "Product Name",
                          "type": "string"
                        },
                        "pages": {
                          "properties": {
                            "all": {
                              "items": {
                                "properties": {
                                  "business": {
                                    "properties": {
                                      "account_holder": {
                                        "description": "Name of the account holder",
                                        "type": "string"
                                      },
                                      "email": {
                                        "description": "Email address of the business",
                                        "format": "email",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Business ID",
                                        "type": "integer"
                                      },
                                      "is_banned": {
                                        "description": "Is the business banned?",
                                        "type": "boolean"
                                      },
                                      "logo": {
                                        "description": "URL to the business logo",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "unique_id": {
                                        "description": "Unique identifier for the business",
                                        "type": "string"
                                      },
                                      "username": {
                                        "description": "Username of the business",
                                        "type": "string"
                                      }
                                    },
                                    "title": "BusinessSimple",
                                    "type": "object"
                                  },
                                  "id": {
                                    "description": "Page ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the page",
                                    "type": "string"
                                  },
                                  "slug": {
                                    "description": "Slug for the page URL",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the page",
                                    "type": "string"
                                  }
                                },
                                "title": "PageRelation",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "will_unpublish": {
                              "items": {
                                "properties": {
                                  "business": {
                                    "properties": {
                                      "account_holder": {
                                        "description": "Name of the account holder",
                                        "type": "string"
                                      },
                                      "email": {
                                        "description": "Email address of the business",
                                        "format": "email",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Business ID",
                                        "type": "integer"
                                      },
                                      "is_banned": {
                                        "description": "Is the business banned?",
                                        "type": "boolean"
                                      },
                                      "logo": {
                                        "description": "URL to the business logo",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "unique_id": {
                                        "description": "Unique identifier for the business",
                                        "type": "string"
                                      },
                                      "username": {
                                        "description": "Username of the business",
                                        "type": "string"
                                      }
                                    },
                                    "title": "BusinessSimple",
                                    "type": "object"
                                  },
                                  "id": {
                                    "description": "Page ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the page",
                                    "type": "string"
                                  },
                                  "slug": {
                                    "description": "Slug for the page URL",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the page",
                                    "type": "string"
                                  }
                                },
                                "title": "PageRelation",
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "stores": {
                          "items": {
                            "properties": {
                              "business": {
                                "properties": {
                                  "account_holder": {
                                    "description": "Name of the account holder",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "Email address of the business",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Business ID",
                                    "type": "integer"
                                  },
                                  "is_banned": {
                                    "description": "Is the business banned?",
                                    "type": "boolean"
                                  },
                                  "logo": {
                                    "description": "URL to the business logo",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the business",
                                    "type": "string"
                                  },
                                  "username": {
                                    "description": "Username of the business",
                                    "type": "string"
                                  }
                                },
                                "title": "BusinessSimple",
                                "type": "object"
                              },
                              "id": {
                                "description": "Store ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Store name",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Unique identifier for the store",
                                "type": "string"
                              }
                            },
                            "title": "StoreRelation",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "variants": {
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Variant ID",
                                "type": "integer"
                              },
                              "item_type": {
                                "description": "Type of the product item",
                                "enum": [
                                  "physical",
                                  "digital",
                                  "course"
                                ],
                                "title": "ItemType",
                                "type": "string"
                              },
                              "name": {
                                "description": "Variant Name",
                                "type": "string"
                              },
                              "product_name": {
                                "description": "Product Name",
                                "type": "string"
                              }
                            },
                            "title": "VariantRelation",
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "title": "ProductRelations",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Product relations"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_product"
            ]
          }
        ],
        "summary": "Show product relations",
        "tags": [
          "Products"
        ]
      }
    },
    "/v2/products/{product_id}/sharing": {
      "patch": {
        "callbacks": {},
        "description": "Updates the product sharing settings for a given product.",
        "operationId": "ScalevApiWeb.ProductController.update_sharing",
        "parameters": [
          {
            "description": "Product ID",
            "in": "path",
            "name": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "is_product_sharing": {
                    "description": "Is Product Sharing",
                    "type": "boolean"
                  }
                },
                "required": [
                  "is_product_sharing"
                ],
                "title": "UpdateSharingRequestProduct",
                "type": "object"
              }
            }
          },
          "description": "Product sharing settings",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "created_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "description": {
                          "description": "Description",
                          "type": "string"
                        },
                        "display": {
                          "description": "Product name for display",
                          "type": "string"
                        },
                        "id": {
                          "description": "Product ID",
                          "type": "integer"
                        },
                        "images": {
                          "items": {
                            "format": "uri",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "is_inventory": {
                          "description": "Is Inventory",
                          "type": "boolean"
                        },
                        "is_multiple": {
                          "description": "Is Multiple",
                          "type": "boolean"
                        },
                        "is_product_sharing": {
                          "description": "Is Product Sharing",
                          "type": "boolean"
                        },
                        "item_type": {
                          "description": "Type of the product item",
                          "enum": [
                            "physical",
                            "digital",
                            "course"
                          ],
                          "title": "ItemType",
                          "type": "string"
                        },
                        "item_type_name": {
                          "description": "Item Type Name",
                          "type": "string"
                        },
                        "labels": {
                          "items": {
                            "properties": {
                              "name": {
                                "description": "Label name",
                                "type": "string"
                              }
                            },
                            "title": "ItemLabel",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "last_updated_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "last_updated_by": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        },
                        "meta_thumbnail": {
                          "description": "Meta Thumbnail",
                          "format": "uri",
                          "type": "string"
                        },
                        "name": {
                          "description": "Product Name",
                          "type": "string"
                        },
                        "option1_name": {
                          "description": "Option 1 Name",
                          "type": "string"
                        },
                        "option2_name": {
                          "description": "Option 2 Name",
                          "type": "string"
                        },
                        "option3_name": {
                          "description": "Option 3 Name",
                          "type": "string"
                        },
                        "product_birdsend_sequences": {
                          "items": {
                            "properties": {
                              "birdsend_sequence": {
                                "properties": {
                                  "active": {
                                    "description": "Indicates if the Birdsend sequence is active",
                                    "type": "boolean"
                                  },
                                  "form_id": {
                                    "description": "Identifier of the associated form",
                                    "type": "integer"
                                  },
                                  "id": {
                                    "description": "Birdsend sequence primary key",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the Birdsend sequence",
                                    "type": "string"
                                  },
                                  "sequence_id": {
                                    "description": "Identifier of the associated sequence",
                                    "type": "integer"
                                  },
                                  "type": {
                                    "description": "Type of the Birdsend sequence (either 'sequence' or 'form')",
                                    "enum": [
                                      "sequence",
                                      "form"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "title": "BirdsendSequence",
                                "type": "object"
                              },
                              "order_status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "ProductBirdsendSequence",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "product_mailketing_lists": {
                          "items": {
                            "properties": {
                              "mailketing_list": {
                                "properties": {
                                  "id": {
                                    "description": "Mailketing List ID",
                                    "type": "integer"
                                  },
                                  "list": {
                                    "description": "Mailketing List Name",
                                    "type": "string"
                                  },
                                  "list_name": {
                                    "description": "Mailketing List Name",
                                    "type": "string"
                                  }
                                },
                                "title": "MailketingList",
                                "type": "object"
                              },
                              "order_status": {
                                "description": "Order status",
                                "enum": [
                                  "draft",
                                  "pending",
                                  "confirmed",
                                  "in_process",
                                  "ready",
                                  "shipped",
                                  "completed",
                                  "canceled",
                                  "rts",
                                  "closed"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "ProductMailketingList",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "public_name": {
                          "description": "Product Public Name",
                          "type": "string"
                        },
                        "rich_description": {
                          "description": "Rich Description",
                          "type": "string"
                        },
                        "slug": {
                          "description": "Product Slug",
                          "type": "string"
                        },
                        "stores": {
                          "items": {
                            "properties": {
                              "custom_domain": {
                                "properties": {
                                  "full_url": {
                                    "description": "Full URL",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Custom Domain ID",
                                    "type": "integer"
                                  },
                                  "is_verified": {
                                    "description": "Is Verified",
                                    "type": "boolean"
                                  }
                                },
                                "title": "SimpleCustomDomain",
                                "type": "object"
                              },
                              "id": {
                                "description": "Store ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Store name",
                                "type": "string"
                              }
                            },
                            "title": "DomainStore",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "taxonomy": {
                          "properties": {
                            "full_path": {
                              "description": "Full Path",
                              "type": "string"
                            },
                            "id": {
                              "description": "Taxonomy ID",
                              "type": "integer"
                            },
                            "level_1": {
                              "description": "Level 1",
                              "type": "string"
                            },
                            "level_2": {
                              "description": "Level 2",
                              "type": "string"
                            },
                            "level_3": {
                              "description": "Level 3",
                              "type": "string"
                            },
                            "level_4": {
                              "description": "Level 4",
                              "type": "string"
                            },
                            "level_5": {
                              "description": "Level 5",
                              "type": "string"
                            },
                            "level_6": {
                              "description": "Level 6",
                              "type": "string"
                            },
                            "level_7": {
                              "description": "Level 7",
                              "type": "string"
                            }
                          },
                          "title": "ProductTaxonomy",
                          "type": "object"
                        },
                        "uuid": {
                          "description": "Product UUID",
                          "type": "string"
                        },
                        "variants": {
                          "items": {
                            "properties": {
                              "cogs": {
                                "description": "Cost of Goods Sold",
                                "type": "number"
                              },
                              "price_bt": {
                                "description": "Price Before Tax",
                                "type": "number"
                              },
                              "option1_value": {
                                "description": "Option 1 Value",
                                "type": "string"
                              },
                              "option3_icon_url": {
                                "description": "Icon URL for the third product option",
                                "format": "uri",
                                "type": "string"
                              },
                              "option1_icon_url": {
                                "description": "Icon URL for the first product option",
                                "format": "uri",
                                "type": "string"
                              },
                              "reseller_price_bt": {
                                "description": "Reseller Price Before Tax",
                                "type": "number"
                              },
                              "option2_value": {
                                "description": "Option 2 Value",
                                "type": "string"
                              },
                              "reseller_price": {
                                "description": "Reseller Price",
                                "type": "number"
                              },
                              "fullname": {
                                "description": "Variant Fullname",
                                "type": "string"
                              },
                              "uuid": {
                                "description": "Variant UUID",
                                "type": "string"
                              },
                              "rich_description": {
                                "description": "Variant Rich Description",
                                "type": "string"
                              },
                              "option2_icon_url": {
                                "description": "Icon URL for the second product option",
                                "format": "uri",
                                "type": "string"
                              },
                              "sku": {
                                "description": "SKU",
                                "type": "string"
                              },
                              "digital_product_files": {
                                "items": {
                                  "properties": {
                                    "content_type": {
                                      "description": "MIME type of the digital product file",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Digital product file primary key",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "description": "File name of the digital product file",
                                      "type": "string"
                                    },
                                    "size_in_bytes": {
                                      "description": "Size of the digital product file in bytes",
                                      "type": "integer"
                                    },
                                    "url": {
                                      "description": "URL to access the digital product file",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "title": "DigitalProductFile",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "product_name": {
                                "description": "Product Name",
                                "type": "string"
                              },
                              "item_type": {
                                "description": "Type of the product item",
                                "enum": [
                                  "physical",
                                  "digital",
                                  "course"
                                ],
                                "title": "ItemType",
                                "type": "string"
                              },
                              "upsell_form_displays": {
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Form Display ID",
                                      "type": "integer"
                                    },
                                    "page_display": {
                                      "properties": {
                                        "id": {
                                          "description": "Page Display ID",
                                          "type": "integer"
                                        },
                                        "page": {
                                          "properties": {
                                            "id": {
                                              "description": "Page ID",
                                              "type": "integer"
                                            },
                                            "is_published": {
                                              "description": "Is the page published?",
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "description": "Name of the page",
                                              "type": "string"
                                            },
                                            "published_at": {
                                              "description": "Publication date of the page",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "slug": {
                                              "description": "Slug for the page URL",
                                              "type": "string"
                                            },
                                            "store_id": {
                                              "description": "ID of the store the page belongs to",
                                              "type": "integer"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the page",
                                              "type": "string"
                                            }
                                          },
                                          "title": "PageSimple",
                                          "type": "object"
                                        }
                                      },
                                      "title": "ForProductPageDisplay",
                                      "type": "object"
                                    }
                                  },
                                  "title": "ForProductFormDisplay",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "description": {
                                "description": "Variant Description",
                                "type": "string"
                              },
                              "self_file_urls": {
                                "items": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "name": {
                                "description": "Variant Name",
                                "type": "string"
                              },
                              "id": {
                                "description": "Variant ID",
                                "type": "integer"
                              },
                              "option3_color": {
                                "description": "Color associated with the third product option",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Variant Unique ID",
                                "type": "string"
                              },
                              "cogs_bt": {
                                "description": "Cost of Goods Sold Before Tax",
                                "type": "number"
                              },
                              "option2_color": {
                                "description": "Color associated with the second product option",
                                "type": "string"
                              },
                              "price": {
                                "description": "Price",
                                "type": "number"
                              },
                              "images": {
                                "items": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "weight": {
                                "description": "Weight",
                                "type": "integer"
                              },
                              "form_displays": {
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Form Display ID",
                                      "type": "integer"
                                    },
                                    "page_display": {
                                      "properties": {
                                        "id": {
                                          "description": "Page Display ID",
                                          "type": "integer"
                                        },
                                        "page": {
                                          "properties": {
                                            "id": {
                                              "description": "Page ID",
                                              "type": "integer"
                                            },
                                            "is_published": {
                                              "description": "Is the page published?",
                                              "type": "boolean"
                                            },
                                            "name": {
                                              "description": "Name of the page",
                                              "type": "string"
                                            },
                                            "published_at": {
                                              "description": "Publication date of the page",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "slug": {
                                              "description": "Slug for the page URL",
                                              "type": "string"
                                            },
                                            "store_id": {
                                              "description": "ID of the store the page belongs to",
                                              "type": "integer"
                                            },
                                            "unique_id": {
                                              "description": "Unique identifier for the page",
                                              "type": "string"
                                            }
                                          },
                                          "title": "PageSimple",
                                          "type": "object"
                                        }
                                      },
                                      "title": "ForProductPageDisplay",
                                      "type": "object"
                                    }
                                  },
                                  "title": "ForProductFormDisplay",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "is_checked": {
                                "description": "Mark variant as sellable",
                                "type": "boolean"
                              },
                              "option1_color": {
                                "description": "Color associated with the first product option",
                                "type": "string"
                              },
                              "last_updated_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "Product ID",
                                "type": "integer"
                              },
                              "option3_value": {
                                "description": "Option 3 Value",
                                "type": "string"
                              },
                              "metadata": {
                                "additionalProperties": true,
                                "type": "object"
                              },
                              "created_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "is_editable": {
                                "description": "Is Editable",
                                "type": "boolean"
                              }
                            },
                            "title": "ProductVariant",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "variants_count": {
                          "description": "Variants Count",
                          "type": "integer"
                        },
                        "warehouses": {
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Warehouse ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the warehouse",
                                "type": "string"
                              }
                            },
                            "title": "NameOnlyWarehouse",
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "title": "Product",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Product sharing settings updated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_product"
            ]
          }
        ],
        "summary": "Update product sharing settings",
        "tags": [
          "Products"
        ]
      }
    },
    "/v2/shipping-costs": {
      "post": {
        "callbacks": {},
        "description": "Retrieve shipping cost estimates based on origin, destination, courier services, and package weight.",
        "operationId": "ScalevApiWeb.ShippingCostController.search_shipping_costs",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Schema for requesting shipping cost",
                "properties": {
                  "courier_codes": {
                    "description": "List of courier codes",
                    "items": {
                      "description": "Schema for a courier code",
                      "enum": [
                        "ninja",
                        "ide",
                        "sicepat",
                        "sap",
                        "ncs",
                        "anteraja",
                        "sentral",
                        "jne",
                        "jnt",
                        "pos",
                        "lion",
                        "rex",
                        "jtl",
                        "tiki",
                        "rpx",
                        "pandu",
                        "wahana",
                        "pahala",
                        "jet",
                        "slis",
                        "dse",
                        "first",
                        "star",
                        "idl"
                      ],
                      "example": "jne",
                      "title": "CourierCode",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "location_id": {
                    "description": "ID of the destination location",
                    "type": "integer"
                  },
                  "postal_code": {
                    "description": "Postal code of the destination",
                    "type": "string"
                  },
                  "warehouse_id": {
                    "description": "ID of the warehouse",
                    "type": "integer"
                  },
                  "weight": {
                    "description": "Weight of the shipment in grams",
                    "type": "integer"
                  }
                },
                "required": [
                  "courier_codes",
                  "weight",
                  "warehouse_id",
                  "location_id"
                ],
                "title": "ShippingCostRequest",
                "type": "object"
              }
            }
          },
          "description": "Estimate shipping cost request",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "description": "List of shipping cost results",
                      "items": {
                        "description": "Schema for a single shipping cost result",
                        "properties": {
                          "cost": {
                            "description": "Cost of the shipment",
                            "format": "float",
                            "type": "number"
                          },
                          "cost_source": {
                            "description": "Source of the cost",
                            "type": "string"
                          },
                          "courier_service": {
                            "properties": {
                              "code": {
                                "description": "Code for the courier service",
                                "type": "string"
                              },
                              "courier": {
                                "properties": {
                                  "code": {
                                    "description": "Courier code",
                                    "type": "string"
                                  },
                                  "courier_type": {
                                    "description": "Type of the courier",
                                    "enum": [
                                      "instant",
                                      "cashless",
                                      "standard"
                                    ],
                                    "example": "standard",
                                    "title": "CourierType",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Courier ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Courier name",
                                    "type": "string"
                                  }
                                },
                                "title": "CourierLocationData",
                                "type": "object"
                              },
                              "id": {
                                "description": "Courier Service ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the courier service",
                                "type": "string"
                              }
                            },
                            "title": "CourierServiceLocationData",
                            "type": "object"
                          },
                          "etd": {
                            "description": "Estimated time of delivery",
                            "type": "string"
                          },
                          "weight": {
                            "description": "Weight of the shipment in grams",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "cost_source",
                          "courier_service",
                          "weight",
                          "etd",
                          "cost"
                        ],
                        "title": "ShippingCostResult",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Products list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "add_order"
            ]
          }
        ],
        "summary": "Get Shipping Costs",
        "tags": [
          "Shipping Costs"
        ]
      }
    },
    "/v2/shipping-costs/search-courier-service": {
      "post": {
        "callbacks": {},
        "description": "Retrieve available courier services based on warehouse, destination, payment method, and package weight.",
        "operationId": "ScalevApiWeb.ShippingCostController.search_courier_services",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Schema for requesting courier services",
                "properties": {
                  "is_show_all": {
                    "description": "Whether to show all courier services or only those available",
                    "type": "boolean"
                  },
                  "location_id": {
                    "description": "ID of the destination location",
                    "type": "integer"
                  },
                  "payment_method": {
                    "description": "Order payment method",
                    "enum": [
                      "gopay",
                      "va",
                      "qris",
                      "card",
                      "invoice",
                      "alfamart",
                      "ovo",
                      "dana",
                      "shopeepay",
                      "linkaja",
                      "no_payment",
                      "bank_transfer",
                      "marketplace",
                      "cod"
                    ],
                    "type": "string"
                  },
                  "postal_code": {
                    "description": "Postal code of the destination",
                    "type": "string"
                  },
                  "store_id": {
                    "description": "ID of the store",
                    "type": "integer"
                  },
                  "warehouse_id": {
                    "description": "ID of the warehouse",
                    "type": "integer"
                  },
                  "weight": {
                    "description": "Weight of the shipment in grams",
                    "type": "integer"
                  }
                },
                "required": [
                  "store_id",
                  "location_id",
                  "warehouse_id",
                  "payment_method",
                  "weight"
                ],
                "title": "GetCourierServiceRequest",
                "type": "object"
              }
            }
          },
          "description": "Search courier services request",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "description": "List of courier services",
                      "items": {
                        "properties": {
                          "cost": {
                            "description": "Cost of the shipment",
                            "format": "float",
                            "type": "number"
                          },
                          "cost_source": {
                            "description": "Source of the cost",
                            "type": "string"
                          },
                          "courier_service": {
                            "properties": {
                              "code": {
                                "description": "Code for the courier service",
                                "type": "string"
                              },
                              "courier": {
                                "properties": {
                                  "code": {
                                    "description": "Courier code",
                                    "type": "string"
                                  },
                                  "courier_type": {
                                    "description": "Type of the courier",
                                    "enum": [
                                      "instant",
                                      "cashless",
                                      "standard"
                                    ],
                                    "example": "standard",
                                    "title": "CourierType",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Courier ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Courier name",
                                    "type": "string"
                                  }
                                },
                                "title": "CourierLocationData",
                                "type": "object"
                              },
                              "id": {
                                "description": "Courier Service ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the courier service",
                                "type": "string"
                              }
                            },
                            "title": "CourierServiceLocationData",
                            "type": "object"
                          },
                          "etd": {
                            "description": "Estimated time of delivery",
                            "type": "string"
                          },
                          "is_cod": {
                            "description": "Is Cash on Delivery available",
                            "type": "boolean"
                          },
                          "is_pickup": {
                            "description": "Is Pickup available",
                            "type": "boolean"
                          },
                          "shipment_provider_code": {
                            "description": "Code of the shipment provider",
                            "type": "string"
                          },
                          "warehouse": {
                            "properties": {
                              "address": {
                                "description": "Address of the warehouse",
                                "type": "string"
                              },
                              "city_name": {
                                "description": "City name of the warehouse location",
                                "type": "string"
                              },
                              "id": {
                                "description": "Warehouse ID",
                                "type": "integer"
                              },
                              "lincah_origin_id": {
                                "description": "Lincah origin ID for the warehouse",
                                "type": "string"
                              },
                              "mengantar_origin_id": {
                                "description": "Mengantar origin ID for the warehouse",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the warehouse",
                                "type": "string"
                              },
                              "province_name": {
                                "description": "Province name of the warehouse location",
                                "type": "string"
                              },
                              "subdistrict_name": {
                                "description": "Subdistrict name of the warehouse location",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Unique identifier of the warehouse",
                                "type": "string"
                              }
                            },
                            "title": "ForLocationWarehouse",
                            "type": "object"
                          },
                          "weight": {
                            "description": "Weight of the shipment in grams",
                            "type": "integer"
                          }
                        },
                        "title": "CourierServiceResult",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Courier Services list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "add_order"
            ]
          }
        ],
        "summary": "Get Courier Services",
        "tags": [
          "Shipping Costs"
        ]
      }
    },
    "/v2/shipping-costs/search-warehouse": {
      "post": {
        "callbacks": {},
        "description": "Search for warehouses based on order details, store, destination, and product variants.",
        "operationId": "ScalevApiWeb.ShippingCostController.search_warehouses",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Schema for searching warehouses",
                "properties": {
                  "destination_id": {
                    "description": "ID of the destination location",
                    "type": "integer"
                  },
                  "order_id": {
                    "description": "ID of the order (for update order)",
                    "type": "integer"
                  },
                  "store_id": {
                    "description": "ID of the store",
                    "type": "integer"
                  },
                  "variants": {
                    "description": "List of product variant ids and their quantities",
                    "items": {
                      "properties": {
                        "qty": {
                          "description": "Quantity of the product variant",
                          "type": "integer"
                        },
                        "variant_id": {
                          "description": "ID of the product variant",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "variant_id",
                        "qty"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "store_id",
                  "destination_id",
                  "variants"
                ],
                "title": "SearchWarehouseRequest",
                "type": "object"
              }
            }
          },
          "description": "Search warehouse request",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "items": {
                        "properties": {
                          "destination": {
                            "properties": {
                              "city_name": {
                                "description": "City Name",
                                "type": "string"
                              },
                              "display": {
                                "description": "Display Name",
                                "type": "string"
                              },
                              "id": {
                                "description": "Location ID",
                                "type": "integer"
                              },
                              "jne_destination_id": {
                                "description": "JNE Destination ID",
                                "type": "integer"
                              },
                              "jne_origin_id": {
                                "description": "JNE Origin ID",
                                "type": "integer"
                              },
                              "ka_district_id": {
                                "description": "Kargo Aman District ID",
                                "type": "integer"
                              },
                              "lincah_code": {
                                "description": "Lincah Code",
                                "type": "string"
                              },
                              "lion_code": {
                                "description": "Lion Code",
                                "type": "string"
                              },
                              "mengantar_code": {
                                "description": "Mengantar Code",
                                "type": "string"
                              },
                              "ninja_l1": {
                                "description": "Ninja L1 Code",
                                "type": "string"
                              },
                              "ninja_l2": {
                                "description": "Ninja L2 Code",
                                "type": "string"
                              },
                              "province_name": {
                                "description": "Province Name",
                                "type": "string"
                              },
                              "ro_city_id": {
                                "description": "RajaOngkir City ID",
                                "type": "integer"
                              },
                              "ro_province_id": {
                                "description": "RajaOngkir Province ID",
                                "type": "integer"
                              },
                              "ro_subdistrict_id": {
                                "description": "RajaOngkir Subdistrict ID",
                                "type": "integer"
                              },
                              "subdistrict_name": {
                                "description": "Subdistrict Name",
                                "type": "string"
                              }
                            },
                            "title": "Location",
                            "type": "object"
                          },
                          "distance_km": {
                            "description": "Distance in kilometers",
                            "format": "float",
                            "type": "number"
                          },
                          "warehouse": {
                            "properties": {
                              "business": {
                                "properties": {
                                  "id": {
                                    "description": "Business ID",
                                    "type": "integer"
                                  },
                                  "username": {
                                    "description": "Username of the business",
                                    "type": "string"
                                  }
                                },
                                "title": "BusinessUsernameOnly",
                                "type": "object"
                              },
                              "id": {
                                "description": "Warehouse ID",
                                "type": "integer"
                              },
                              "lincah_origin_id": {
                                "description": "Lincah origin ID for the warehouse",
                                "type": "string"
                              },
                              "mengantar_origin_id": {
                                "description": "Mengantar origin ID for the warehouse",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the warehouse",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Unique identifier of the warehouse",
                                "type": "string"
                              },
                              "warehouse_address": {
                                "properties": {
                                  "address": {
                                    "description": "Full address of the warehouse",
                                    "type": "string"
                                  },
                                  "city": {
                                    "description": "City of the warehouse address",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Warehouse Address ID",
                                    "type": "integer"
                                  },
                                  "location": {
                                    "description": "Location ID for the address",
                                    "type": "integer"
                                  },
                                  "postal_code": {
                                    "description": "Postal code of the warehouse address",
                                    "type": "string"
                                  },
                                  "province": {
                                    "description": "Province of the warehouse address",
                                    "type": "string"
                                  },
                                  "subdistrict": {
                                    "description": "Subdistrict of the warehouse address",
                                    "type": "string"
                                  }
                                },
                                "title": "WarehouseAddressLocationData",
                                "type": "object"
                              }
                            },
                            "title": "ForLocationSearchWarehouse",
                            "type": "object"
                          },
                          "warehouse_partner": {
                            "properties": {
                              "id": {
                                "description": "Warehouse Partner ID",
                                "type": "integer"
                              },
                              "ka_origin_id": {
                                "description": "KA Origin ID",
                                "type": "string"
                              },
                              "lincah_origin_id": {
                                "description": "Lincah Origin ID",
                                "type": "string"
                              },
                              "mengantar_origin_id": {
                                "description": "Mengantar Origin ID",
                                "type": "string"
                              },
                              "partner_id": {
                                "description": "Partner Business ID",
                                "type": "integer"
                              }
                            },
                            "title": "WarehousePartnerSearchData",
                            "type": "object"
                          }
                        },
                        "title": "SearchWarehouseResult",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Warehouses list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "add_order"
            ]
          }
        ],
        "summary": "Search Warehouses",
        "tags": [
          "Shipping Costs"
        ]
      }
    },
    "/v2/stores": {
      "post": {
        "callbacks": {},
        "description": "Creates a new store with the provided details.",
        "operationId": "ScalevApiWeb.StoreController.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Store name",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "title": "CreateStore",
                "type": "object"
              }
            }
          },
          "description": "Store data to create",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "is_unique_code": {
                      "description": "Is unique code required for orders?",
                      "type": "boolean"
                    },
                    "days_of_payment_processing": {
                      "description": "Days of payment processing",
                      "type": "integer"
                    },
                    "min_name_length": {
                      "description": "Minimum name length for validation",
                      "type": "integer"
                    },
                    "warehouse": {
                      "properties": {
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "contact_name": {
                          "description": "Contact name at the warehouse",
                          "type": "string"
                        },
                        "contact_phone": {
                          "description": "Contact phone number at the warehouse",
                          "type": "string"
                        },
                        "id": {
                          "description": "Warehouse ID",
                          "type": "integer"
                        },
                        "name": {
                          "description": "Name of the warehouse",
                          "type": "string"
                        },
                        "warehouse_address": {
                          "properties": {
                            "address": {
                              "description": "Full address of the warehouse",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the warehouse address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse Address ID",
                              "type": "integer"
                            },
                            "location_id": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "postal_code": {
                              "description": "Postal code of the warehouse address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the warehouse address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the warehouse address",
                              "type": "string"
                            }
                          },
                          "title": "WarehouseAddressSimple",
                          "type": "object"
                        }
                      },
                      "title": "Warehouse",
                      "type": "object"
                    },
                    "store_sales_person": {
                      "description": "List of store sales persons",
                      "items": {
                        "description": "Store Sales Person Simple Schema",
                        "properties": {
                          "business_user": {
                            "properties": {
                              "business_phone": {
                                "description": "The business phone number",
                                "type": "string"
                              },
                              "id": {
                                "description": "The business user ID",
                                "type": "integer"
                              },
                              "role": {
                                "properties": {
                                  "id": {
                                    "description": "The role ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "The name of the role",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ],
                                "title": "SimpleRole",
                                "type": "object"
                              },
                              "user": {
                                "properties": {
                                  "aff_code": {
                                    "description": "Affiliate code of the user",
                                    "type": "string"
                                  },
                                  "avatar": {
                                    "description": "URL to user avatar",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "User email",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "fullname": {
                                    "description": "User full name",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "User ID",
                                    "type": "integer"
                                  },
                                  "phone": {
                                    "description": "User phone number",
                                    "type": "string"
                                  }
                                },
                                "title": "UserSimple",
                                "type": "object"
                              }
                            },
                            "required": [
                              "id",
                              "user",
                              "role",
                              "business_phone"
                            ],
                            "title": "BusinessUser",
                            "type": "object"
                          },
                          "id": {
                            "description": "Store Sales Person ID",
                            "type": "integer"
                          },
                          "percentage": {
                            "description": "Percentage of sales person",
                            "type": "integer"
                          },
                          "weekly_schedule": {
                            "description": "Weekly Schedule Schema",
                            "properties": {
                              "friday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "monday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "saturday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "sunday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "thursday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "tuesday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "wednesday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              }
                            },
                            "title": "WeeklySchedule",
                            "type": "object"
                          }
                        },
                        "title": "StoreSalesPersonSimple",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "is_postal_code": {
                      "description": "Is postal code required for orders?",
                      "type": "boolean"
                    },
                    "is_email_notifications": {
                      "description": "Is email notifications enabled?",
                      "type": "boolean"
                    },
                    "is_discount_editable": {
                      "description": "Is discount editable?",
                      "type": "boolean"
                    },
                    "store_method_other_incomes": {
                      "description": "Other incomes for store methods",
                      "items": {
                        "description": "Store Payment Method Other Income Schema",
                        "properties": {
                          "amount": {
                            "description": "Amount of other income",
                            "format": "float",
                            "type": "number"
                          },
                          "payment_method": {
                            "description": "Payment Method",
                            "type": "string"
                          },
                          "percentage": {
                            "description": "Percentage of other income",
                            "format": "float",
                            "type": "number"
                          },
                          "sub_payment_method": {
                            "description": "Sub Payment Method",
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of amount (fixed or percentage)",
                            "enum": [
                              "fixed",
                              "percentage"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "payment_method",
                          "type"
                        ],
                        "title": "StorePaymentMethodOtherIncome",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "store_courier_other_incomes": {
                      "description": "Other incomes for store couriers",
                      "items": {
                        "description": "Store Courier Other Income Schema",
                        "properties": {
                          "amount": {
                            "description": "Amount of other income",
                            "format": "float",
                            "type": "number"
                          },
                          "courier_id": {
                            "description": "Courier ID",
                            "type": "integer"
                          },
                          "percentage": {
                            "description": "Percentage of other income",
                            "format": "float",
                            "type": "number"
                          },
                          "type": {
                            "description": "Type of other income",
                            "enum": [
                              "fixed",
                              "percentage"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "courier_id",
                          "type"
                        ],
                        "title": "StoreCourierOtherIncome",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "dynamic_other_income_cod_default_percentage": {
                      "description": "Default percentage for dynamic COD income",
                      "format": "float",
                      "type": "number"
                    },
                    "dynamic_other_income_epayment_type": {
                      "description": "Type of amount (fixed or percentage)",
                      "enum": [
                        "fixed",
                        "percentage"
                      ],
                      "type": "string"
                    },
                    "dynamic_other_income_cod_default_amount": {
                      "description": "Default amount for dynamic COD income",
                      "format": "float",
                      "type": "number"
                    },
                    "is_advanced_validation": {
                      "description": "Is advanced validation enabled?",
                      "type": "boolean"
                    },
                    "is_fuc_product_enabled": {
                      "description": "Is follow-up chat for products enabled?",
                      "type": "boolean"
                    },
                    "is_manual_shipping_cost": {
                      "description": "Is manual shipping cost enabled?",
                      "type": "boolean"
                    },
                    "business": {
                      "properties": {
                        "account_holder": {
                          "description": "Name of the account holder",
                          "type": "string"
                        },
                        "email": {
                          "description": "Email address of the business",
                          "format": "email",
                          "type": "string"
                        },
                        "id": {
                          "description": "Business ID",
                          "type": "integer"
                        },
                        "is_banned": {
                          "description": "Is the business banned?",
                          "type": "boolean"
                        },
                        "logo": {
                          "description": "URL to the business logo",
                          "format": "uri",
                          "type": "string"
                        },
                        "unique_id": {
                          "description": "Unique identifier for the business",
                          "type": "string"
                        },
                        "username": {
                          "description": "Username of the business",
                          "type": "string"
                        }
                      },
                      "title": "BusinessSimple",
                      "type": "object"
                    },
                    "uuid": {
                      "description": "UUID of the store",
                      "type": "string"
                    },
                    "last_updated_by": {
                      "properties": {
                        "aff_code": {
                          "description": "Affiliate code of the user",
                          "type": "string"
                        },
                        "avatar": {
                          "description": "URL to user avatar",
                          "format": "uri",
                          "type": "string"
                        },
                        "email": {
                          "description": "User email",
                          "format": "email",
                          "type": "string"
                        },
                        "fullname": {
                          "description": "User full name",
                          "type": "string"
                        },
                        "id": {
                          "description": "User ID",
                          "type": "integer"
                        },
                        "phone": {
                          "description": "User phone number",
                          "type": "string"
                        }
                      },
                      "title": "UserSimple",
                      "type": "object"
                    },
                    "is_email_new_order": {
                      "description": "Is email notification for new orders enabled?",
                      "type": "boolean"
                    },
                    "non_cod_purchase_triggers": {
                      "description": "Non-COD purchase triggers",
                      "items": {
                        "enum": [
                          "public_upload",
                          "internal_upload",
                          "confirmed",
                          "shipped",
                          "completed"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "email_reply_to": {
                      "properties": {
                        "business_phone": {
                          "description": "The business phone number",
                          "type": "string"
                        },
                        "id": {
                          "description": "The business user ID",
                          "type": "integer"
                        },
                        "role": {
                          "properties": {
                            "id": {
                              "description": "The role ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "The name of the role",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ],
                          "title": "SimpleRole",
                          "type": "object"
                        },
                        "user": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        }
                      },
                      "required": [
                        "id",
                        "user",
                        "role",
                        "business_phone"
                      ],
                      "title": "BusinessUser",
                      "type": "object"
                    },
                    "is_dropshipping_allowed": {
                      "description": "Is dropshipping allowed in this store?",
                      "type": "boolean"
                    },
                    "blocked_message": {
                      "description": "Blocked message for spam filter",
                      "type": "string"
                    },
                    "payment_methods": {
                      "description": "Payment methods available in the store",
                      "items": {
                        "description": "Order payment method",
                        "enum": [
                          "gopay",
                          "va",
                          "qris",
                          "card",
                          "invoice",
                          "alfamart",
                          "ovo",
                          "dana",
                          "shopeepay",
                          "linkaja",
                          "no_payment",
                          "bank_transfer",
                          "marketplace",
                          "cod"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "advertisers": {
                      "description": "List of advertisers associated with the store",
                      "items": {
                        "properties": {
                          "business_phone": {
                            "description": "The business phone number",
                            "type": "string"
                          },
                          "id": {
                            "description": "The business user ID",
                            "type": "integer"
                          },
                          "role": {
                            "properties": {
                              "id": {
                                "description": "The role ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the role",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ],
                            "title": "SimpleRole",
                            "type": "object"
                          },
                          "user": {
                            "properties": {
                              "aff_code": {
                                "description": "Affiliate code of the user",
                                "type": "string"
                              },
                              "avatar": {
                                "description": "URL to user avatar",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "description": "User email",
                                "format": "email",
                                "type": "string"
                              },
                              "fullname": {
                                "description": "User full name",
                                "type": "string"
                              },
                              "id": {
                                "description": "User ID",
                                "type": "integer"
                              },
                              "phone": {
                                "description": "User phone number",
                                "type": "string"
                              }
                            },
                            "title": "UserSimple",
                            "type": "object"
                          }
                        },
                        "required": [
                          "id",
                          "user",
                          "role",
                          "business_phone"
                        ],
                        "title": "BusinessUser",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "store_admins": {
                      "description": "List of store admins",
                      "items": {
                        "properties": {
                          "business_phone": {
                            "description": "The business phone number",
                            "type": "string"
                          },
                          "id": {
                            "description": "The business user ID",
                            "type": "integer"
                          },
                          "role": {
                            "properties": {
                              "id": {
                                "description": "The role ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the role",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ],
                            "title": "SimpleRole",
                            "type": "object"
                          },
                          "user": {
                            "properties": {
                              "aff_code": {
                                "description": "Affiliate code of the user",
                                "type": "string"
                              },
                              "avatar": {
                                "description": "URL to user avatar",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "description": "User email",
                                "format": "email",
                                "type": "string"
                              },
                              "fullname": {
                                "description": "User full name",
                                "type": "string"
                              },
                              "id": {
                                "description": "User ID",
                                "type": "integer"
                              },
                              "phone": {
                                "description": "User phone number",
                                "type": "string"
                              }
                            },
                            "title": "UserSimple",
                            "type": "object"
                          }
                        },
                        "required": [
                          "id",
                          "user",
                          "role",
                          "business_phone"
                        ],
                        "title": "BusinessUser",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "created_by": {
                      "properties": {
                        "aff_code": {
                          "description": "Affiliate code of the user",
                          "type": "string"
                        },
                        "avatar": {
                          "description": "URL to user avatar",
                          "format": "uri",
                          "type": "string"
                        },
                        "email": {
                          "description": "User email",
                          "format": "email",
                          "type": "string"
                        },
                        "fullname": {
                          "description": "User full name",
                          "type": "string"
                        },
                        "id": {
                          "description": "User ID",
                          "type": "integer"
                        },
                        "phone": {
                          "description": "User phone number",
                          "type": "string"
                        }
                      },
                      "title": "UserSimple",
                      "type": "object"
                    },
                    "max_per_ip": {
                      "description": "Maximum orders per IP address",
                      "type": "integer"
                    },
                    "email_notification_statuses": {
                      "description": "Email notification statuses",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "bundles": {
                      "description": "List of bundles associated with the store",
                      "items": {
                        "properties": {
                          "bundle_price_options": {
                            "description": "List of Bundle Price Options",
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Bundle Price Option ID",
                                  "type": "integer"
                                },
                                "is_owned_by_store": {
                                  "description": "Is owned by store",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "Name",
                                  "type": "string"
                                },
                                "price": {
                                  "description": "Price (including tax)",
                                  "format": "float",
                                  "type": "number"
                                },
                                "price_bt": {
                                  "description": "Price before tax",
                                  "format": "float",
                                  "type": "number"
                                },
                                "slug": {
                                  "description": "Slug",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Bundle Price Option Unique ID",
                                  "type": "string"
                                }
                              },
                              "title": "BundlePriceOptionSimple",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "custom_id": {
                            "description": "Custom Identifier",
                            "type": "string"
                          },
                          "display": {
                            "description": "Display Name",
                            "type": "string"
                          },
                          "id": {
                            "description": "Bundle ID",
                            "type": "integer"
                          },
                          "images": {
                            "description": "List of Image URLs",
                            "items": {
                              "format": "uri",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "is_bundle_sharing": {
                            "description": "Is Bundle Sharing Enabled",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "Name",
                            "type": "string"
                          },
                          "public_name": {
                            "description": "Public Name",
                            "type": "string"
                          },
                          "weight_bump": {
                            "description": "Weight Bump",
                            "type": "integer"
                          }
                        },
                        "title": "BundleListSimplified",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "greeting_message": {
                      "description": "Greeting message for WhatsApp",
                      "type": "string"
                    },
                    "logo": {
                      "description": "URL of the store logo",
                      "format": "uri",
                      "type": "string"
                    },
                    "is_spam_filter": {
                      "description": "Is spam filter with AI enabled?",
                      "type": "boolean"
                    },
                    "cod_purchase_triggers": {
                      "description": "COD purchase triggers",
                      "items": {
                        "enum": [
                          "public_upload",
                          "internal_upload",
                          "confirmed",
                          "shipped",
                          "completed"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "is_use_waba": {
                      "description": "Is WABA integration enabled?",
                      "type": "boolean"
                    },
                    "email_reply_to_assignment": {
                      "description": "Email reply-to assignment type",
                      "enum": [
                        "fixed",
                        "rotator"
                      ],
                      "type": "string"
                    },
                    "postal_code_requirement": {
                      "description": "Postal code requirement options",
                      "enum": [
                        "autofill",
                        "manual"
                      ],
                      "type": "string"
                    },
                    "waba_account": {
                      "properties": {
                        "display_phone_number": {
                          "description": "Display Phone Number",
                          "type": "string"
                        },
                        "id": {
                          "description": "WABA Account ID",
                          "type": "integer"
                        },
                        "inserted_at": {
                          "description": "Inserted At",
                          "format": "date-time",
                          "type": "string"
                        },
                        "is_pin_enabled": {
                          "description": "Is PIN Enabled",
                          "type": "boolean"
                        },
                        "is_webhooks_subscribed": {
                          "description": "Is Webhooks Subscribed",
                          "type": "boolean"
                        },
                        "phone_number_id": {
                          "description": "Phone Number ID",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status",
                          "type": "string"
                        },
                        "unique_id": {
                          "description": "Unique Identifier",
                          "type": "string"
                        },
                        "updated_at": {
                          "description": "Updated At",
                          "format": "date-time",
                          "type": "string"
                        },
                        "verified_name": {
                          "description": "Verified Name",
                          "type": "string"
                        },
                        "waba_id": {
                          "description": "WABA ID",
                          "type": "string"
                        }
                      },
                      "title": "WabaAccount",
                      "type": "object"
                    },
                    "name": {
                      "description": "Name of the store",
                      "type": "string"
                    },
                    "id": {
                      "description": "Store ID",
                      "type": "integer"
                    },
                    "is_moota_enabled": {
                      "description": "Is Moota integration enabled for this store?",
                      "type": "boolean"
                    },
                    "sub_payment_methods": {
                      "description": "Xendit VA bank codes",
                      "items": {
                        "description": "Xendit VA bank code",
                        "enum": [
                          "BCA",
                          "BNI",
                          "BRI",
                          "MANDIRI",
                          "PERMATA",
                          "BSI",
                          "BJB",
                          "CIMB",
                          "SAHABAT_SAMPOERNA",
                          "ARTAJASA"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "is_ip_spam_filter": {
                      "description": "Is IP spam filter enabled?",
                      "type": "boolean"
                    },
                    "products": {
                      "description": "List of products associated with the store",
                      "items": {
                        "properties": {
                          "display": {
                            "description": "Display name of the product",
                            "type": "string"
                          },
                          "id": {
                            "description": "Product primary key",
                            "type": "integer"
                          },
                          "images": {
                            "description": "List of image URLs associated with the product",
                            "items": {
                              "format": "uri",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "item_type": {
                            "description": "Type of the product item",
                            "enum": [
                              "physical",
                              "digital",
                              "course"
                            ],
                            "title": "ItemType",
                            "type": "string"
                          },
                          "item_type_name": {
                            "description": "Human-readable name of the product item type",
                            "type": "string"
                          },
                          "labels": {
                            "description": "List of labels associated with the product",
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "Label name",
                                  "type": "string"
                                }
                              },
                              "title": "ItemLabel",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "name": {
                            "description": "Product name",
                            "type": "string"
                          },
                          "option1_name": {
                            "description": "Name of first option value",
                            "type": "string"
                          },
                          "option2_name": {
                            "description": "Name of 2nd option value",
                            "type": "string"
                          },
                          "option3_name": {
                            "description": "Name of 3rd option value",
                            "type": "string"
                          },
                          "public_name": {
                            "description": "Product Public name",
                            "type": "string"
                          },
                          "uuid": {
                            "description": "Product UUID",
                            "type": "string"
                          },
                          "variant_count": {
                            "description": "Count of variants associated with the product",
                            "type": "integer"
                          },
                          "variants": {
                            "description": "List of variants associated with the product",
                            "items": {
                              "properties": {
                                "available_qty": {
                                  "description": "Available quantity of the variant in inventory",
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "Variant primary key",
                                  "type": "integer"
                                },
                                "images": {
                                  "description": "List of image URLs associated with the variant",
                                  "items": {
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "is_checked": {
                                  "description": "Mark variant as sellable",
                                  "type": "boolean"
                                },
                                "is_editable": {
                                  "description": "Indicates if the variant is editable",
                                  "type": "boolean"
                                },
                                "item_type": {
                                  "description": "Type of the product item",
                                  "enum": [
                                    "physical",
                                    "digital",
                                    "course"
                                  ],
                                  "type": "string"
                                },
                                "metadata": {
                                  "additionalProperties": true,
                                  "description": "Additional metadata associated with the variant",
                                  "type": "object"
                                },
                                "name": {
                                  "description": "Full name of the variant",
                                  "type": "string"
                                },
                                "option1_color": {
                                  "description": "Color associated with the first product option",
                                  "type": "string"
                                },
                                "option1_icon_url": {
                                  "description": "Icon URL for the first product option",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "option1_value": {
                                  "description": "Value of the first product option",
                                  "type": "string"
                                },
                                "option2_color": {
                                  "description": "Color associated with the second product option",
                                  "type": "string"
                                },
                                "option2_icon_url": {
                                  "description": "Icon URL for the second product option",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "option2_value": {
                                  "description": "Value of the second product option",
                                  "type": "string"
                                },
                                "option3_color": {
                                  "description": "Color associated with the third product option",
                                  "type": "string"
                                },
                                "option3_icon_url": {
                                  "description": "Icon URL for the third product option",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "option3_value": {
                                  "description": "Value of the third product option",
                                  "type": "string"
                                },
                                "price": {
                                  "description": "Price of the variant",
                                  "type": "number"
                                },
                                "product_name": {
                                  "description": "Name of the associated product",
                                  "type": "string"
                                },
                                "reseller_price": {
                                  "description": "Reseller price of the variant",
                                  "type": "number"
                                },
                                "unique_id": {
                                  "description": "Variant unique identifier",
                                  "type": "string"
                                },
                                "uuid": {
                                  "description": "Variant UUID",
                                  "type": "string"
                                },
                                "weight": {
                                  "description": "Weight of the variant in grams",
                                  "type": "integer"
                                }
                              },
                              "title": "ForStoreListVariant",
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "title": "ForStoreProductList",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "courier_services": {
                      "description": "List of courier services associated with the store",
                      "items": {
                        "properties": {
                          "category": {
                            "description": "Category of the courier service",
                            "type": "string"
                          },
                          "code": {
                            "description": "Code for the courier service",
                            "type": "string"
                          },
                          "courier": {
                            "properties": {
                              "code": {
                                "description": "Courier code",
                                "type": "string"
                              },
                              "code_ka": {
                                "description": "Courier code in Georgian",
                                "type": "string"
                              },
                              "code_lincah": {
                                "description": "Courier code in Lincah",
                                "type": "string"
                              },
                              "code_mengantar": {
                                "description": "Courier code for Mengantar",
                                "type": "string"
                              },
                              "code_ro": {
                                "description": "Courier code in Romanian",
                                "type": "string"
                              },
                              "courier_type": {
                                "description": "Type of the courier",
                                "enum": [
                                  "delivery",
                                  "pickup"
                                ],
                                "type": "string"
                              },
                              "id": {
                                "description": "Courier ID",
                                "type": "integer"
                              },
                              "is_pickup": {
                                "description": "Is this a pickup courier?",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Courier name",
                                "type": "string"
                              }
                            },
                            "title": "Courier",
                            "type": "object"
                          },
                          "description": {
                            "description": "Description of the courier service",
                            "type": "string"
                          },
                          "id": {
                            "description": "Courier Service ID",
                            "type": "integer"
                          },
                          "is_cod": {
                            "description": "Is Cash on Delivery available for this courier service",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "Name of the courier service",
                            "type": "string"
                          }
                        },
                        "title": "ForStoreCourierService",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "unique_id": {
                      "description": "Unique identifier for the store",
                      "type": "string"
                    },
                    "inactivity_period": {
                      "description": "Inactivity period for WhatsApp",
                      "type": "integer"
                    },
                    "payment_accounts": {
                      "description": "List of payment accounts associated with the store",
                      "items": {
                        "properties": {
                          "account_holder": {
                            "description": "Account Holder Name",
                            "type": "string"
                          },
                          "account_number": {
                            "description": "Account Number",
                            "type": "string"
                          },
                          "financial_entity": {
                            "properties": {
                              "code": {
                                "description": "Code of the financial entity",
                                "type": "string"
                              },
                              "duitku_code": {
                                "description": "Duitku code for the financial entity",
                                "type": "string"
                              },
                              "entity_type": {
                                "description": "Type of the financial entity",
                                "type": "string"
                              },
                              "id": {
                                "description": "Financial Entity ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the financial entity",
                                "type": "string"
                              },
                              "platform": {
                                "description": "Platform associated with the financial entity",
                                "type": "string"
                              },
                              "xendit_code": {
                                "description": "Xendit code for the financial entity",
                                "type": "string"
                              }
                            },
                            "title": "FinancialEntity",
                            "type": "object"
                          },
                          "id": {
                            "description": "Payment Account ID",
                            "type": "integer"
                          },
                          "method": {
                            "description": "Payment Method",
                            "type": "string"
                          },
                          "unique_id": {
                            "description": "Unique Identifier",
                            "type": "string"
                          }
                        },
                        "title": "PaymentAccount",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "is_customer_otp_required": {
                      "description": "Is customer OTP required?",
                      "type": "boolean"
                    },
                    "other_income_name": {
                      "description": "Name of the other income",
                      "type": "string"
                    },
                    "auto_expire_days": {
                      "description": "Days until auto-expire",
                      "type": "integer"
                    },
                    "max_unique_code_amount": {
                      "description": "Maximum amount for unique code orders",
                      "format": "float",
                      "type": "number"
                    },
                    "is_greeting_message_enabled": {
                      "description": "Is greeting message enabled?",
                      "type": "boolean"
                    },
                    "is_customer_spam_filter": {
                      "description": "Is customer spam filter enabled?",
                      "type": "boolean"
                    },
                    "is_show_download_invoice": {
                      "description": "Is show download invoice option enabled?",
                      "type": "boolean"
                    },
                    "is_auto_expire": {
                      "description": "Is auto-expire enabled?",
                      "type": "boolean"
                    },
                    "is_show_scalev_branding": {
                      "description": "Is Scalev branding shown?",
                      "type": "boolean"
                    },
                    "dynamic_other_income_epayment_default_amount": {
                      "description": "Default amount for dynamic e-payment income",
                      "format": "float",
                      "type": "number"
                    },
                    "is_fuc_bundle_enabled": {
                      "description": "Is follow-up chat for bundles enabled?",
                      "type": "boolean"
                    },
                    "min_address_length": {
                      "description": "Minimum address length for validation",
                      "type": "integer"
                    },
                    "is_transferproof_required": {
                      "description": "Is transfer proof required for orders in this store?",
                      "type": "boolean"
                    },
                    "fixed_auto_other_income": {
                      "description": "Fixed auto other income amount",
                      "format": "float",
                      "type": "number"
                    },
                    "auto_other_income": {
                      "description": "Type of auto other income",
                      "type": "string"
                    },
                    "max_per_phone": {
                      "description": "Maximum orders per phone number",
                      "type": "integer"
                    },
                    "capi_purchase_value_type": {
                      "description": "Type of CAPI purchase value",
                      "enum": [
                        "gross_revenue",
                        "net_revenue",
                        "adj_gross_revenue"
                      ],
                      "type": "string"
                    },
                    "last_updated_at": {
                      "description": "Last update timestamp",
                      "format": "date-time",
                      "type": "string"
                    },
                    "is_show_whatsapp": {
                      "description": "Is show WhatsApp option enabled?",
                      "type": "boolean"
                    },
                    "digital_only_complete_type": {
                      "description": "Digital only complete type",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Is the store active?",
                      "type": "boolean"
                    },
                    "dynamic_other_income_epayment_default_percentage": {
                      "description": "Default percentage for dynamic e-payment income",
                      "format": "float",
                      "type": "number"
                    },
                    "dynamic_other_income_cod_type": {
                      "description": "Type of amount (fixed or percentage)",
                      "enum": [
                        "fixed",
                        "percentage"
                      ],
                      "type": "string"
                    },
                    "created_at": {
                      "description": "Creation timestamp",
                      "format": "date-time",
                      "type": "string"
                    },
                    "custom_domain": {
                      "properties": {
                        "full_url": {
                          "description": "Full URL",
                          "format": "uri",
                          "type": "string"
                        },
                        "id": {
                          "description": "Custom Domain ID",
                          "type": "integer"
                        },
                        "is_verified": {
                          "description": "Is Verified",
                          "type": "boolean"
                        }
                      },
                      "title": "SimpleCustomDomain",
                      "type": "object"
                    }
                  },
                  "title": "Store",
                  "type": "object"
                }
              }
            },
            "description": "Created store details"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "add_store"
            ]
          }
        ],
        "summary": "Create a store",
        "tags": [
          "Stores"
        ]
      },
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of stores with optional filtering. The data is sorted by id in descending order and cannot be changed. Uses cursor-based pagination with default page size of 25 and maximum of 25.",
        "operationId": "ScalevApiWeb.StoreController.index",
        "parameters": [
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "example": 25,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          },
          {
            "description": "Last order ID for cursor-based pagination",
            "example": 100,
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term to filter stores by name (case-insensitive, partial match)",
            "example": "My Store",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter stores that have a custom domain (true/false)",
            "example": true,
            "in": "query",
            "name": "has_domain",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "description": "Filter stores by custom domain (case-insensitive, exact match)",
            "example": "store.example.com",
            "in": "query",
            "name": "domain",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "business_id": {
                                "description": "Business ID",
                                "type": "integer"
                              },
                              "cod_purchase_triggers": {
                                "description": "COD purchase triggers",
                                "items": {
                                  "enum": [
                                    "public_upload",
                                    "internal_upload",
                                    "confirmed",
                                    "shipped",
                                    "completed"
                                  ],
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "created_at": {
                                "description": "Creation timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "created_by": {
                                "properties": {
                                  "aff_code": {
                                    "description": "Affiliate code of the user",
                                    "type": "string"
                                  },
                                  "avatar": {
                                    "description": "URL to user avatar",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "User email",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "fullname": {
                                    "description": "User full name",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "User ID",
                                    "type": "integer"
                                  },
                                  "phone": {
                                    "description": "User phone number",
                                    "type": "string"
                                  }
                                },
                                "title": "UserSimple",
                                "type": "object"
                              },
                              "custom_domain": {
                                "properties": {
                                  "full_url": {
                                    "description": "Full URL",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Custom Domain ID",
                                    "type": "integer"
                                  },
                                  "is_verified": {
                                    "description": "Is Verified",
                                    "type": "boolean"
                                  }
                                },
                                "title": "SimpleCustomDomain",
                                "type": "object"
                              },
                              "id": {
                                "description": "Store ID",
                                "type": "integer"
                              },
                              "is_dropshipping_allowed": {
                                "description": "Is dropshipping allowed in this store?",
                                "type": "boolean"
                              },
                              "is_manual_shipping_cost": {
                                "description": "Is manual shipping cost enabled?",
                                "type": "boolean"
                              },
                              "is_moota_enabled": {
                                "description": "Is Moota integration enabled for this store?",
                                "type": "boolean"
                              },
                              "is_show_scalev_branding": {
                                "description": "Is Scalev branding shown?",
                                "type": "boolean"
                              },
                              "is_transferproof_required": {
                                "description": "Is transfer proof required for orders in this store?",
                                "type": "boolean"
                              },
                              "is_unique_code": {
                                "description": "Is unique code required for orders?",
                                "type": "boolean"
                              },
                              "last_updated_at": {
                                "description": "Last update timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "last_updated_by": {
                                "properties": {
                                  "aff_code": {
                                    "description": "Affiliate code of the user",
                                    "type": "string"
                                  },
                                  "avatar": {
                                    "description": "URL to user avatar",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "User email",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "fullname": {
                                    "description": "User full name",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "User ID",
                                    "type": "integer"
                                  },
                                  "phone": {
                                    "description": "User phone number",
                                    "type": "string"
                                  }
                                },
                                "title": "UserSimple",
                                "type": "object"
                              },
                              "logo": {
                                "description": "URL of the store logo",
                                "format": "uri",
                                "type": "string"
                              },
                              "max_unique_code_amount": {
                                "description": "Maximum amount for unique code orders",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the store",
                                "type": "string"
                              },
                              "non_cod_purchase_triggers": {
                                "description": "Non-COD purchase triggers",
                                "items": {
                                  "enum": [
                                    "public_upload",
                                    "internal_upload",
                                    "confirmed",
                                    "shipped",
                                    "completed"
                                  ],
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "unique_id": {
                                "description": "Unique identifier for the store",
                                "type": "string"
                              },
                              "uuid": {
                                "description": "UUID of the store",
                                "type": "string"
                              },
                              "warehouse_id": {
                                "description": "Warehouse ID",
                                "type": "integer"
                              }
                            },
                            "title": "ListStore",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Stores list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_store"
            ]
          }
        ],
        "summary": "List stores",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/simplified": {
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of stores with simplified fields and optional filtering. The data is sorted by id in descending order and cannot be changed. Uses cursor-based pagination with default page size of 25 and maximum of 25.",
        "operationId": "ScalevApiWeb.StoreController.index_simplified",
        "parameters": [
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "example": 25,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          },
          {
            "description": "Last order ID for cursor-based pagination",
            "example": 100,
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term to filter stores by name (case-insensitive, partial match)",
            "example": "My Store",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter stores that have a custom domain (true/false)",
            "example": true,
            "in": "query",
            "name": "has_domain",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "description": "Filter stores by custom domain (case-insensitive, exact match)",
            "example": "store.example.com",
            "in": "query",
            "name": "domain",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "business_id": {
                                "description": "Business ID",
                                "type": "integer"
                              },
                              "custom_domain": {
                                "properties": {
                                  "full_url": {
                                    "description": "Full URL",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Custom Domain ID",
                                    "type": "integer"
                                  },
                                  "is_verified": {
                                    "description": "Is Verified",
                                    "type": "boolean"
                                  }
                                },
                                "title": "SimpleCustomDomain",
                                "type": "object"
                              },
                              "id": {
                                "description": "Store ID",
                                "type": "integer"
                              },
                              "logo": {
                                "description": "URL of the store logo",
                                "format": "uri",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the store",
                                "type": "string"
                              },
                              "payment_methods": {
                                "description": "Payment methods available in the store",
                                "items": {
                                  "description": "Order payment method",
                                  "enum": [
                                    "gopay",
                                    "va",
                                    "qris",
                                    "card",
                                    "invoice",
                                    "alfamart",
                                    "ovo",
                                    "dana",
                                    "shopeepay",
                                    "linkaja",
                                    "no_payment",
                                    "bank_transfer",
                                    "marketplace",
                                    "cod"
                                  ],
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "sub_payment_methods": {
                                "description": "Xendit VA bank codes",
                                "items": {
                                  "description": "Xendit VA bank code",
                                  "enum": [
                                    "BCA",
                                    "BNI",
                                    "BRI",
                                    "MANDIRI",
                                    "PERMATA",
                                    "BSI",
                                    "BJB",
                                    "CIMB",
                                    "SAHABAT_SAMPOERNA",
                                    "ARTAJASA"
                                  ],
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "unique_id": {
                                "description": "Unique identifier for the store",
                                "type": "string"
                              },
                              "uuid": {
                                "description": "UUID of the store",
                                "type": "string"
                              }
                            },
                            "title": "ListSimplifiedStore",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Simplified stores list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_store"
            ]
          }
        ],
        "summary": "List stores with simplified fields",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{id}": {
      "get": {
        "callbacks": {},
        "description": "Retrieves detailed information about a specific store identified by its ID.",
        "operationId": "ScalevApiWeb.StoreController.show",
        "parameters": [
          {
            "description": "ID of the store to view",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "is_unique_code": {
                      "description": "Is unique code required for orders?",
                      "type": "boolean"
                    },
                    "days_of_payment_processing": {
                      "description": "Days of payment processing",
                      "type": "integer"
                    },
                    "min_name_length": {
                      "description": "Minimum name length for validation",
                      "type": "integer"
                    },
                    "warehouse": {
                      "properties": {
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "contact_name": {
                          "description": "Contact name at the warehouse",
                          "type": "string"
                        },
                        "contact_phone": {
                          "description": "Contact phone number at the warehouse",
                          "type": "string"
                        },
                        "id": {
                          "description": "Warehouse ID",
                          "type": "integer"
                        },
                        "name": {
                          "description": "Name of the warehouse",
                          "type": "string"
                        },
                        "warehouse_address": {
                          "properties": {
                            "address": {
                              "description": "Full address of the warehouse",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the warehouse address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse Address ID",
                              "type": "integer"
                            },
                            "location_id": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "postal_code": {
                              "description": "Postal code of the warehouse address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the warehouse address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the warehouse address",
                              "type": "string"
                            }
                          },
                          "title": "WarehouseAddressSimple",
                          "type": "object"
                        }
                      },
                      "title": "Warehouse",
                      "type": "object"
                    },
                    "store_sales_person": {
                      "description": "List of store sales persons",
                      "items": {
                        "description": "Store Sales Person Simple Schema",
                        "properties": {
                          "business_user": {
                            "properties": {
                              "business_phone": {
                                "description": "The business phone number",
                                "type": "string"
                              },
                              "id": {
                                "description": "The business user ID",
                                "type": "integer"
                              },
                              "role": {
                                "properties": {
                                  "id": {
                                    "description": "The role ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "The name of the role",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ],
                                "title": "SimpleRole",
                                "type": "object"
                              },
                              "user": {
                                "properties": {
                                  "aff_code": {
                                    "description": "Affiliate code of the user",
                                    "type": "string"
                                  },
                                  "avatar": {
                                    "description": "URL to user avatar",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "User email",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "fullname": {
                                    "description": "User full name",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "User ID",
                                    "type": "integer"
                                  },
                                  "phone": {
                                    "description": "User phone number",
                                    "type": "string"
                                  }
                                },
                                "title": "UserSimple",
                                "type": "object"
                              }
                            },
                            "required": [
                              "id",
                              "user",
                              "role",
                              "business_phone"
                            ],
                            "title": "BusinessUser",
                            "type": "object"
                          },
                          "id": {
                            "description": "Store Sales Person ID",
                            "type": "integer"
                          },
                          "percentage": {
                            "description": "Percentage of sales person",
                            "type": "integer"
                          },
                          "weekly_schedule": {
                            "description": "Weekly Schedule Schema",
                            "properties": {
                              "friday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "monday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "saturday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "sunday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "thursday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "tuesday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "wednesday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              }
                            },
                            "title": "WeeklySchedule",
                            "type": "object"
                          }
                        },
                        "title": "StoreSalesPersonSimple",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "is_postal_code": {
                      "description": "Is postal code required for orders?",
                      "type": "boolean"
                    },
                    "is_email_notifications": {
                      "description": "Is email notifications enabled?",
                      "type": "boolean"
                    },
                    "is_discount_editable": {
                      "description": "Is discount editable?",
                      "type": "boolean"
                    },
                    "store_method_other_incomes": {
                      "description": "Other incomes for store methods",
                      "items": {
                        "description": "Store Payment Method Other Income Schema",
                        "properties": {
                          "amount": {
                            "description": "Amount of other income",
                            "format": "float",
                            "type": "number"
                          },
                          "payment_method": {
                            "description": "Payment Method",
                            "type": "string"
                          },
                          "percentage": {
                            "description": "Percentage of other income",
                            "format": "float",
                            "type": "number"
                          },
                          "sub_payment_method": {
                            "description": "Sub Payment Method",
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of amount (fixed or percentage)",
                            "enum": [
                              "fixed",
                              "percentage"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "payment_method",
                          "type"
                        ],
                        "title": "StorePaymentMethodOtherIncome",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "store_courier_other_incomes": {
                      "description": "Other incomes for store couriers",
                      "items": {
                        "description": "Store Courier Other Income Schema",
                        "properties": {
                          "amount": {
                            "description": "Amount of other income",
                            "format": "float",
                            "type": "number"
                          },
                          "courier_id": {
                            "description": "Courier ID",
                            "type": "integer"
                          },
                          "percentage": {
                            "description": "Percentage of other income",
                            "format": "float",
                            "type": "number"
                          },
                          "type": {
                            "description": "Type of other income",
                            "enum": [
                              "fixed",
                              "percentage"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "courier_id",
                          "type"
                        ],
                        "title": "StoreCourierOtherIncome",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "dynamic_other_income_cod_default_percentage": {
                      "description": "Default percentage for dynamic COD income",
                      "format": "float",
                      "type": "number"
                    },
                    "dynamic_other_income_epayment_type": {
                      "description": "Type of amount (fixed or percentage)",
                      "enum": [
                        "fixed",
                        "percentage"
                      ],
                      "type": "string"
                    },
                    "dynamic_other_income_cod_default_amount": {
                      "description": "Default amount for dynamic COD income",
                      "format": "float",
                      "type": "number"
                    },
                    "is_advanced_validation": {
                      "description": "Is advanced validation enabled?",
                      "type": "boolean"
                    },
                    "is_fuc_product_enabled": {
                      "description": "Is follow-up chat for products enabled?",
                      "type": "boolean"
                    },
                    "is_manual_shipping_cost": {
                      "description": "Is manual shipping cost enabled?",
                      "type": "boolean"
                    },
                    "business": {
                      "properties": {
                        "account_holder": {
                          "description": "Name of the account holder",
                          "type": "string"
                        },
                        "email": {
                          "description": "Email address of the business",
                          "format": "email",
                          "type": "string"
                        },
                        "id": {
                          "description": "Business ID",
                          "type": "integer"
                        },
                        "is_banned": {
                          "description": "Is the business banned?",
                          "type": "boolean"
                        },
                        "logo": {
                          "description": "URL to the business logo",
                          "format": "uri",
                          "type": "string"
                        },
                        "unique_id": {
                          "description": "Unique identifier for the business",
                          "type": "string"
                        },
                        "username": {
                          "description": "Username of the business",
                          "type": "string"
                        }
                      },
                      "title": "BusinessSimple",
                      "type": "object"
                    },
                    "uuid": {
                      "description": "UUID of the store",
                      "type": "string"
                    },
                    "last_updated_by": {
                      "properties": {
                        "aff_code": {
                          "description": "Affiliate code of the user",
                          "type": "string"
                        },
                        "avatar": {
                          "description": "URL to user avatar",
                          "format": "uri",
                          "type": "string"
                        },
                        "email": {
                          "description": "User email",
                          "format": "email",
                          "type": "string"
                        },
                        "fullname": {
                          "description": "User full name",
                          "type": "string"
                        },
                        "id": {
                          "description": "User ID",
                          "type": "integer"
                        },
                        "phone": {
                          "description": "User phone number",
                          "type": "string"
                        }
                      },
                      "title": "UserSimple",
                      "type": "object"
                    },
                    "is_email_new_order": {
                      "description": "Is email notification for new orders enabled?",
                      "type": "boolean"
                    },
                    "non_cod_purchase_triggers": {
                      "description": "Non-COD purchase triggers",
                      "items": {
                        "enum": [
                          "public_upload",
                          "internal_upload",
                          "confirmed",
                          "shipped",
                          "completed"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "email_reply_to": {
                      "properties": {
                        "business_phone": {
                          "description": "The business phone number",
                          "type": "string"
                        },
                        "id": {
                          "description": "The business user ID",
                          "type": "integer"
                        },
                        "role": {
                          "properties": {
                            "id": {
                              "description": "The role ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "The name of the role",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ],
                          "title": "SimpleRole",
                          "type": "object"
                        },
                        "user": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        }
                      },
                      "required": [
                        "id",
                        "user",
                        "role",
                        "business_phone"
                      ],
                      "title": "BusinessUser",
                      "type": "object"
                    },
                    "is_dropshipping_allowed": {
                      "description": "Is dropshipping allowed in this store?",
                      "type": "boolean"
                    },
                    "blocked_message": {
                      "description": "Blocked message for spam filter",
                      "type": "string"
                    },
                    "payment_methods": {
                      "description": "Payment methods available in the store",
                      "items": {
                        "description": "Order payment method",
                        "enum": [
                          "gopay",
                          "va",
                          "qris",
                          "card",
                          "invoice",
                          "alfamart",
                          "ovo",
                          "dana",
                          "shopeepay",
                          "linkaja",
                          "no_payment",
                          "bank_transfer",
                          "marketplace",
                          "cod"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "advertisers": {
                      "description": "List of advertisers associated with the store",
                      "items": {
                        "properties": {
                          "business_phone": {
                            "description": "The business phone number",
                            "type": "string"
                          },
                          "id": {
                            "description": "The business user ID",
                            "type": "integer"
                          },
                          "role": {
                            "properties": {
                              "id": {
                                "description": "The role ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the role",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ],
                            "title": "SimpleRole",
                            "type": "object"
                          },
                          "user": {
                            "properties": {
                              "aff_code": {
                                "description": "Affiliate code of the user",
                                "type": "string"
                              },
                              "avatar": {
                                "description": "URL to user avatar",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "description": "User email",
                                "format": "email",
                                "type": "string"
                              },
                              "fullname": {
                                "description": "User full name",
                                "type": "string"
                              },
                              "id": {
                                "description": "User ID",
                                "type": "integer"
                              },
                              "phone": {
                                "description": "User phone number",
                                "type": "string"
                              }
                            },
                            "title": "UserSimple",
                            "type": "object"
                          }
                        },
                        "required": [
                          "id",
                          "user",
                          "role",
                          "business_phone"
                        ],
                        "title": "BusinessUser",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "store_admins": {
                      "description": "List of store admins",
                      "items": {
                        "properties": {
                          "business_phone": {
                            "description": "The business phone number",
                            "type": "string"
                          },
                          "id": {
                            "description": "The business user ID",
                            "type": "integer"
                          },
                          "role": {
                            "properties": {
                              "id": {
                                "description": "The role ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the role",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ],
                            "title": "SimpleRole",
                            "type": "object"
                          },
                          "user": {
                            "properties": {
                              "aff_code": {
                                "description": "Affiliate code of the user",
                                "type": "string"
                              },
                              "avatar": {
                                "description": "URL to user avatar",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "description": "User email",
                                "format": "email",
                                "type": "string"
                              },
                              "fullname": {
                                "description": "User full name",
                                "type": "string"
                              },
                              "id": {
                                "description": "User ID",
                                "type": "integer"
                              },
                              "phone": {
                                "description": "User phone number",
                                "type": "string"
                              }
                            },
                            "title": "UserSimple",
                            "type": "object"
                          }
                        },
                        "required": [
                          "id",
                          "user",
                          "role",
                          "business_phone"
                        ],
                        "title": "BusinessUser",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "created_by": {
                      "properties": {
                        "aff_code": {
                          "description": "Affiliate code of the user",
                          "type": "string"
                        },
                        "avatar": {
                          "description": "URL to user avatar",
                          "format": "uri",
                          "type": "string"
                        },
                        "email": {
                          "description": "User email",
                          "format": "email",
                          "type": "string"
                        },
                        "fullname": {
                          "description": "User full name",
                          "type": "string"
                        },
                        "id": {
                          "description": "User ID",
                          "type": "integer"
                        },
                        "phone": {
                          "description": "User phone number",
                          "type": "string"
                        }
                      },
                      "title": "UserSimple",
                      "type": "object"
                    },
                    "max_per_ip": {
                      "description": "Maximum orders per IP address",
                      "type": "integer"
                    },
                    "email_notification_statuses": {
                      "description": "Email notification statuses",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "bundles": {
                      "description": "List of bundles associated with the store",
                      "items": {
                        "properties": {
                          "bundle_price_options": {
                            "description": "List of Bundle Price Options",
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Bundle Price Option ID",
                                  "type": "integer"
                                },
                                "is_owned_by_store": {
                                  "description": "Is owned by store",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "Name",
                                  "type": "string"
                                },
                                "price": {
                                  "description": "Price (including tax)",
                                  "format": "float",
                                  "type": "number"
                                },
                                "price_bt": {
                                  "description": "Price before tax",
                                  "format": "float",
                                  "type": "number"
                                },
                                "slug": {
                                  "description": "Slug",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Bundle Price Option Unique ID",
                                  "type": "string"
                                }
                              },
                              "title": "BundlePriceOptionSimple",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "custom_id": {
                            "description": "Custom Identifier",
                            "type": "string"
                          },
                          "display": {
                            "description": "Display Name",
                            "type": "string"
                          },
                          "id": {
                            "description": "Bundle ID",
                            "type": "integer"
                          },
                          "images": {
                            "description": "List of Image URLs",
                            "items": {
                              "format": "uri",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "is_bundle_sharing": {
                            "description": "Is Bundle Sharing Enabled",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "Name",
                            "type": "string"
                          },
                          "public_name": {
                            "description": "Public Name",
                            "type": "string"
                          },
                          "weight_bump": {
                            "description": "Weight Bump",
                            "type": "integer"
                          }
                        },
                        "title": "BundleListSimplified",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "greeting_message": {
                      "description": "Greeting message for WhatsApp",
                      "type": "string"
                    },
                    "logo": {
                      "description": "URL of the store logo",
                      "format": "uri",
                      "type": "string"
                    },
                    "is_spam_filter": {
                      "description": "Is spam filter with AI enabled?",
                      "type": "boolean"
                    },
                    "cod_purchase_triggers": {
                      "description": "COD purchase triggers",
                      "items": {
                        "enum": [
                          "public_upload",
                          "internal_upload",
                          "confirmed",
                          "shipped",
                          "completed"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "is_use_waba": {
                      "description": "Is WABA integration enabled?",
                      "type": "boolean"
                    },
                    "email_reply_to_assignment": {
                      "description": "Email reply-to assignment type",
                      "enum": [
                        "fixed",
                        "rotator"
                      ],
                      "type": "string"
                    },
                    "postal_code_requirement": {
                      "description": "Postal code requirement options",
                      "enum": [
                        "autofill",
                        "manual"
                      ],
                      "type": "string"
                    },
                    "waba_account": {
                      "properties": {
                        "display_phone_number": {
                          "description": "Display Phone Number",
                          "type": "string"
                        },
                        "id": {
                          "description": "WABA Account ID",
                          "type": "integer"
                        },
                        "inserted_at": {
                          "description": "Inserted At",
                          "format": "date-time",
                          "type": "string"
                        },
                        "is_pin_enabled": {
                          "description": "Is PIN Enabled",
                          "type": "boolean"
                        },
                        "is_webhooks_subscribed": {
                          "description": "Is Webhooks Subscribed",
                          "type": "boolean"
                        },
                        "phone_number_id": {
                          "description": "Phone Number ID",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status",
                          "type": "string"
                        },
                        "unique_id": {
                          "description": "Unique Identifier",
                          "type": "string"
                        },
                        "updated_at": {
                          "description": "Updated At",
                          "format": "date-time",
                          "type": "string"
                        },
                        "verified_name": {
                          "description": "Verified Name",
                          "type": "string"
                        },
                        "waba_id": {
                          "description": "WABA ID",
                          "type": "string"
                        }
                      },
                      "title": "WabaAccount",
                      "type": "object"
                    },
                    "name": {
                      "description": "Name of the store",
                      "type": "string"
                    },
                    "id": {
                      "description": "Store ID",
                      "type": "integer"
                    },
                    "is_moota_enabled": {
                      "description": "Is Moota integration enabled for this store?",
                      "type": "boolean"
                    },
                    "sub_payment_methods": {
                      "description": "Xendit VA bank codes",
                      "items": {
                        "description": "Xendit VA bank code",
                        "enum": [
                          "BCA",
                          "BNI",
                          "BRI",
                          "MANDIRI",
                          "PERMATA",
                          "BSI",
                          "BJB",
                          "CIMB",
                          "SAHABAT_SAMPOERNA",
                          "ARTAJASA"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "is_ip_spam_filter": {
                      "description": "Is IP spam filter enabled?",
                      "type": "boolean"
                    },
                    "products": {
                      "description": "List of products associated with the store",
                      "items": {
                        "properties": {
                          "display": {
                            "description": "Display name of the product",
                            "type": "string"
                          },
                          "id": {
                            "description": "Product primary key",
                            "type": "integer"
                          },
                          "images": {
                            "description": "List of image URLs associated with the product",
                            "items": {
                              "format": "uri",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "item_type": {
                            "description": "Type of the product item",
                            "enum": [
                              "physical",
                              "digital",
                              "course"
                            ],
                            "title": "ItemType",
                            "type": "string"
                          },
                          "item_type_name": {
                            "description": "Human-readable name of the product item type",
                            "type": "string"
                          },
                          "labels": {
                            "description": "List of labels associated with the product",
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "Label name",
                                  "type": "string"
                                }
                              },
                              "title": "ItemLabel",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "name": {
                            "description": "Product name",
                            "type": "string"
                          },
                          "option1_name": {
                            "description": "Name of first option value",
                            "type": "string"
                          },
                          "option2_name": {
                            "description": "Name of 2nd option value",
                            "type": "string"
                          },
                          "option3_name": {
                            "description": "Name of 3rd option value",
                            "type": "string"
                          },
                          "public_name": {
                            "description": "Product Public name",
                            "type": "string"
                          },
                          "uuid": {
                            "description": "Product UUID",
                            "type": "string"
                          },
                          "variant_count": {
                            "description": "Count of variants associated with the product",
                            "type": "integer"
                          },
                          "variants": {
                            "description": "List of variants associated with the product",
                            "items": {
                              "properties": {
                                "available_qty": {
                                  "description": "Available quantity of the variant in inventory",
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "Variant primary key",
                                  "type": "integer"
                                },
                                "images": {
                                  "description": "List of image URLs associated with the variant",
                                  "items": {
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "is_checked": {
                                  "description": "Mark variant as sellable",
                                  "type": "boolean"
                                },
                                "is_editable": {
                                  "description": "Indicates if the variant is editable",
                                  "type": "boolean"
                                },
                                "item_type": {
                                  "description": "Type of the product item",
                                  "enum": [
                                    "physical",
                                    "digital",
                                    "course"
                                  ],
                                  "type": "string"
                                },
                                "metadata": {
                                  "additionalProperties": true,
                                  "description": "Additional metadata associated with the variant",
                                  "type": "object"
                                },
                                "name": {
                                  "description": "Full name of the variant",
                                  "type": "string"
                                },
                                "option1_color": {
                                  "description": "Color associated with the first product option",
                                  "type": "string"
                                },
                                "option1_icon_url": {
                                  "description": "Icon URL for the first product option",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "option1_value": {
                                  "description": "Value of the first product option",
                                  "type": "string"
                                },
                                "option2_color": {
                                  "description": "Color associated with the second product option",
                                  "type": "string"
                                },
                                "option2_icon_url": {
                                  "description": "Icon URL for the second product option",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "option2_value": {
                                  "description": "Value of the second product option",
                                  "type": "string"
                                },
                                "option3_color": {
                                  "description": "Color associated with the third product option",
                                  "type": "string"
                                },
                                "option3_icon_url": {
                                  "description": "Icon URL for the third product option",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "option3_value": {
                                  "description": "Value of the third product option",
                                  "type": "string"
                                },
                                "price": {
                                  "description": "Price of the variant",
                                  "type": "number"
                                },
                                "product_name": {
                                  "description": "Name of the associated product",
                                  "type": "string"
                                },
                                "reseller_price": {
                                  "description": "Reseller price of the variant",
                                  "type": "number"
                                },
                                "unique_id": {
                                  "description": "Variant unique identifier",
                                  "type": "string"
                                },
                                "uuid": {
                                  "description": "Variant UUID",
                                  "type": "string"
                                },
                                "weight": {
                                  "description": "Weight of the variant in grams",
                                  "type": "integer"
                                }
                              },
                              "title": "ForStoreListVariant",
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "title": "ForStoreProductList",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "courier_services": {
                      "description": "List of courier services associated with the store",
                      "items": {
                        "properties": {
                          "category": {
                            "description": "Category of the courier service",
                            "type": "string"
                          },
                          "code": {
                            "description": "Code for the courier service",
                            "type": "string"
                          },
                          "courier": {
                            "properties": {
                              "code": {
                                "description": "Courier code",
                                "type": "string"
                              },
                              "code_ka": {
                                "description": "Courier code in Georgian",
                                "type": "string"
                              },
                              "code_lincah": {
                                "description": "Courier code in Lincah",
                                "type": "string"
                              },
                              "code_mengantar": {
                                "description": "Courier code for Mengantar",
                                "type": "string"
                              },
                              "code_ro": {
                                "description": "Courier code in Romanian",
                                "type": "string"
                              },
                              "courier_type": {
                                "description": "Type of the courier",
                                "enum": [
                                  "delivery",
                                  "pickup"
                                ],
                                "type": "string"
                              },
                              "id": {
                                "description": "Courier ID",
                                "type": "integer"
                              },
                              "is_pickup": {
                                "description": "Is this a pickup courier?",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Courier name",
                                "type": "string"
                              }
                            },
                            "title": "Courier",
                            "type": "object"
                          },
                          "description": {
                            "description": "Description of the courier service",
                            "type": "string"
                          },
                          "id": {
                            "description": "Courier Service ID",
                            "type": "integer"
                          },
                          "is_cod": {
                            "description": "Is Cash on Delivery available for this courier service",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "Name of the courier service",
                            "type": "string"
                          }
                        },
                        "title": "ForStoreCourierService",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "unique_id": {
                      "description": "Unique identifier for the store",
                      "type": "string"
                    },
                    "inactivity_period": {
                      "description": "Inactivity period for WhatsApp",
                      "type": "integer"
                    },
                    "payment_accounts": {
                      "description": "List of payment accounts associated with the store",
                      "items": {
                        "properties": {
                          "account_holder": {
                            "description": "Account Holder Name",
                            "type": "string"
                          },
                          "account_number": {
                            "description": "Account Number",
                            "type": "string"
                          },
                          "financial_entity": {
                            "properties": {
                              "code": {
                                "description": "Code of the financial entity",
                                "type": "string"
                              },
                              "duitku_code": {
                                "description": "Duitku code for the financial entity",
                                "type": "string"
                              },
                              "entity_type": {
                                "description": "Type of the financial entity",
                                "type": "string"
                              },
                              "id": {
                                "description": "Financial Entity ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the financial entity",
                                "type": "string"
                              },
                              "platform": {
                                "description": "Platform associated with the financial entity",
                                "type": "string"
                              },
                              "xendit_code": {
                                "description": "Xendit code for the financial entity",
                                "type": "string"
                              }
                            },
                            "title": "FinancialEntity",
                            "type": "object"
                          },
                          "id": {
                            "description": "Payment Account ID",
                            "type": "integer"
                          },
                          "method": {
                            "description": "Payment Method",
                            "type": "string"
                          },
                          "unique_id": {
                            "description": "Unique Identifier",
                            "type": "string"
                          }
                        },
                        "title": "PaymentAccount",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "is_customer_otp_required": {
                      "description": "Is customer OTP required?",
                      "type": "boolean"
                    },
                    "other_income_name": {
                      "description": "Name of the other income",
                      "type": "string"
                    },
                    "auto_expire_days": {
                      "description": "Days until auto-expire",
                      "type": "integer"
                    },
                    "max_unique_code_amount": {
                      "description": "Maximum amount for unique code orders",
                      "format": "float",
                      "type": "number"
                    },
                    "is_greeting_message_enabled": {
                      "description": "Is greeting message enabled?",
                      "type": "boolean"
                    },
                    "is_customer_spam_filter": {
                      "description": "Is customer spam filter enabled?",
                      "type": "boolean"
                    },
                    "is_show_download_invoice": {
                      "description": "Is show download invoice option enabled?",
                      "type": "boolean"
                    },
                    "is_auto_expire": {
                      "description": "Is auto-expire enabled?",
                      "type": "boolean"
                    },
                    "is_show_scalev_branding": {
                      "description": "Is Scalev branding shown?",
                      "type": "boolean"
                    },
                    "dynamic_other_income_epayment_default_amount": {
                      "description": "Default amount for dynamic e-payment income",
                      "format": "float",
                      "type": "number"
                    },
                    "is_fuc_bundle_enabled": {
                      "description": "Is follow-up chat for bundles enabled?",
                      "type": "boolean"
                    },
                    "min_address_length": {
                      "description": "Minimum address length for validation",
                      "type": "integer"
                    },
                    "is_transferproof_required": {
                      "description": "Is transfer proof required for orders in this store?",
                      "type": "boolean"
                    },
                    "fixed_auto_other_income": {
                      "description": "Fixed auto other income amount",
                      "format": "float",
                      "type": "number"
                    },
                    "auto_other_income": {
                      "description": "Type of auto other income",
                      "type": "string"
                    },
                    "max_per_phone": {
                      "description": "Maximum orders per phone number",
                      "type": "integer"
                    },
                    "capi_purchase_value_type": {
                      "description": "Type of CAPI purchase value",
                      "enum": [
                        "gross_revenue",
                        "net_revenue",
                        "adj_gross_revenue"
                      ],
                      "type": "string"
                    },
                    "last_updated_at": {
                      "description": "Last update timestamp",
                      "format": "date-time",
                      "type": "string"
                    },
                    "is_show_whatsapp": {
                      "description": "Is show WhatsApp option enabled?",
                      "type": "boolean"
                    },
                    "digital_only_complete_type": {
                      "description": "Digital only complete type",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Is the store active?",
                      "type": "boolean"
                    },
                    "dynamic_other_income_epayment_default_percentage": {
                      "description": "Default percentage for dynamic e-payment income",
                      "format": "float",
                      "type": "number"
                    },
                    "dynamic_other_income_cod_type": {
                      "description": "Type of amount (fixed or percentage)",
                      "enum": [
                        "fixed",
                        "percentage"
                      ],
                      "type": "string"
                    },
                    "created_at": {
                      "description": "Creation timestamp",
                      "format": "date-time",
                      "type": "string"
                    },
                    "custom_domain": {
                      "properties": {
                        "full_url": {
                          "description": "Full URL",
                          "format": "uri",
                          "type": "string"
                        },
                        "id": {
                          "description": "Custom Domain ID",
                          "type": "integer"
                        },
                        "is_verified": {
                          "description": "Is Verified",
                          "type": "boolean"
                        }
                      },
                      "title": "SimpleCustomDomain",
                      "type": "object"
                    }
                  },
                  "title": "Store",
                  "type": "object"
                }
              }
            },
            "description": "Store details"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_store"
            ]
          }
        ],
        "summary": "View a store",
        "tags": [
          "Stores"
        ]
      },
      "patch": {
        "callbacks": {},
        "description": "Updates the details of an existing store identified by its ID.",
        "operationId": "ScalevApiWeb.StoreController.update",
        "parameters": [
          {
            "description": "ID of the store to update",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "store_custom_audiences": {
                    "description": "Store custom audiences",
                    "items": {
                      "description": "Store Custom Audience Schema",
                      "properties": {
                        "custom_audience_id": {
                          "description": "Custom Audience ID",
                          "type": "integer"
                        },
                        "order_status": {
                          "description": "Order status",
                          "enum": [
                            "draft",
                            "pending",
                            "confirmed",
                            "in_process",
                            "ready",
                            "shipped",
                            "completed",
                            "canceled",
                            "rts",
                            "closed"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "order_status",
                        "custom_audience_id"
                      ],
                      "title": "StoreCustomAudience",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "is_unique_code": {
                    "description": "Is unique code required for orders?",
                    "type": "boolean"
                  },
                  "days_of_payment_processing": {
                    "description": "Days of payment processing",
                    "type": "integer"
                  },
                  "min_name_length": {
                    "description": "Minimum name length for validation",
                    "type": "integer"
                  },
                  "waba_account_id": {
                    "description": "WABA account ID",
                    "type": "integer"
                  },
                  "is_postal_code": {
                    "description": "Is postal code required for orders?",
                    "type": "boolean"
                  },
                  "is_email_notifications": {
                    "description": "Is email notifications enabled?",
                    "type": "boolean"
                  },
                  "is_discount_editable": {
                    "description": "Is discount editable?",
                    "type": "boolean"
                  },
                  "store_method_other_incomes": {
                    "description": "Other incomes for store methods",
                    "items": {
                      "description": "Store Payment Method Other Income Schema",
                      "properties": {
                        "amount": {
                          "description": "Amount of other income",
                          "format": "float",
                          "type": "number"
                        },
                        "payment_method": {
                          "description": "Payment Method",
                          "type": "string"
                        },
                        "percentage": {
                          "description": "Percentage of other income",
                          "format": "float",
                          "type": "number"
                        },
                        "sub_payment_method": {
                          "description": "Sub Payment Method",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of amount (fixed or percentage)",
                          "enum": [
                            "fixed",
                            "percentage"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "payment_method",
                        "type"
                      ],
                      "title": "StorePaymentMethodOtherIncome",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "store_courier_other_incomes": {
                    "description": "Other incomes for store couriers",
                    "items": {
                      "description": "Store Courier Other Income Schema",
                      "properties": {
                        "amount": {
                          "description": "Amount of other income",
                          "format": "float",
                          "type": "number"
                        },
                        "courier_id": {
                          "description": "Courier ID",
                          "type": "integer"
                        },
                        "percentage": {
                          "description": "Percentage of other income",
                          "format": "float",
                          "type": "number"
                        },
                        "type": {
                          "description": "Type of other income",
                          "enum": [
                            "fixed",
                            "percentage"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "courier_id",
                        "type"
                      ],
                      "title": "StoreCourierOtherIncome",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "dynamic_other_income_cod_default_percentage": {
                    "description": "Default percentage for dynamic COD income",
                    "format": "float",
                    "type": "number"
                  },
                  "dynamic_other_income_epayment_type": {
                    "description": "Type of amount (fixed or percentage)",
                    "enum": [
                      "fixed",
                      "percentage"
                    ],
                    "type": "string"
                  },
                  "dynamic_other_income_cod_default_amount": {
                    "description": "Default amount for dynamic COD income",
                    "format": "float",
                    "type": "number"
                  },
                  "is_advanced_validation": {
                    "description": "Is advanced validation enabled?",
                    "type": "boolean"
                  },
                  "is_fuc_product_enabled": {
                    "description": "Is follow-up chat for products enabled?",
                    "type": "boolean"
                  },
                  "is_manual_shipping_cost": {
                    "description": "Is manual shipping cost enabled?",
                    "type": "boolean"
                  },
                  "is_email_new_order": {
                    "description": "Is email notification for new orders enabled?",
                    "type": "boolean"
                  },
                  "non_cod_purchase_triggers": {
                    "description": "Non-COD purchase triggers",
                    "items": {
                      "enum": [
                        "public_upload",
                        "internal_upload",
                        "confirmed",
                        "shipped",
                        "completed"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "is_dropshipping_allowed": {
                    "description": "Is dropshipping allowed in this store?",
                    "type": "boolean"
                  },
                  "blocked_message": {
                    "description": "Blocked message for spam filter",
                    "type": "string"
                  },
                  "max_per_ip": {
                    "description": "Maximum orders per IP address",
                    "type": "integer"
                  },
                  "email_notification_statuses": {
                    "description": "Email notification statuses",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "greeting_message": {
                    "description": "Greeting message for WhatsApp",
                    "type": "string"
                  },
                  "is_spam_filter": {
                    "description": "Is spam filter enabled?",
                    "type": "boolean"
                  },
                  "cod_purchase_triggers": {
                    "description": "COD purchase triggers",
                    "items": {
                      "enum": [
                        "public_upload",
                        "internal_upload",
                        "confirmed",
                        "shipped",
                        "completed"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "is_use_waba": {
                    "description": "Is WABA integration enabled?",
                    "type": "boolean"
                  },
                  "email_reply_to_id": {
                    "description": "Email reply-to business user ID",
                    "type": "integer"
                  },
                  "email_reply_to_assignment": {
                    "description": "Email reply-to assignment type",
                    "enum": [
                      "fixed",
                      "rotator"
                    ],
                    "type": "string"
                  },
                  "postal_code_requirement": {
                    "description": "Postal code requirement options",
                    "enum": [
                      "autofill",
                      "manual"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "description": "Store name",
                    "type": "string"
                  },
                  "is_moota_enabled": {
                    "description": "Is Moota integration enabled for this store?",
                    "type": "boolean"
                  },
                  "is_ip_spam_filter": {
                    "description": "Is IP spam filter enabled?",
                    "type": "boolean"
                  },
                  "inactivity_period": {
                    "description": "Inactivity period for WhatsApp",
                    "type": "integer"
                  },
                  "is_customer_otp_required": {
                    "description": "Is customer OTP required?",
                    "type": "boolean"
                  },
                  "other_income_name": {
                    "description": "Name of the other income",
                    "type": "string"
                  },
                  "auto_expire_days": {
                    "description": "Days until auto-expire",
                    "type": "integer"
                  },
                  "max_unique_code_amount": {
                    "description": "Maximum amount for unique code orders",
                    "format": "float",
                    "type": "number"
                  },
                  "is_greeting_message_enabled": {
                    "description": "Is greeting message enabled?",
                    "type": "boolean"
                  },
                  "is_customer_spam_filter": {
                    "description": "Is customer spam filter enabled?",
                    "type": "boolean"
                  },
                  "is_show_download_invoice": {
                    "description": "Is show download invoice option enabled?",
                    "type": "boolean"
                  },
                  "is_auto_expire": {
                    "description": "Is auto-expire enabled",
                    "type": "boolean"
                  },
                  "dynamic_other_income_epayment_default_amount": {
                    "description": "Default amount for dynamic e-payment income",
                    "format": "float",
                    "type": "number"
                  },
                  "is_fuc_bundle_enabled": {
                    "description": "Is follow-up chat for bundles enabled?",
                    "type": "boolean"
                  },
                  "min_address_length": {
                    "description": "Minimum address length for validation",
                    "type": "integer"
                  },
                  "store_sales_people": {
                    "description": "Store sales people",
                    "items": {
                      "description": "Store Sales Person Request Schema",
                      "properties": {
                        "business_user_id": {
                          "description": "Business User ID",
                          "type": "integer"
                        },
                        "percentage": {
                          "description": "Percentage of sales person",
                          "type": "integer"
                        },
                        "weekly_schedule": {
                          "description": "Weekly Schedule Schema",
                          "properties": {
                            "friday": {
                              "description": "Day Schedule Schema",
                              "properties": {
                                "end_time": {
                                  "description": "End time",
                                  "format": "time",
                                  "type": "string"
                                },
                                "is_active": {
                                  "description": "Is active",
                                  "type": "boolean"
                                },
                                "start_time": {
                                  "description": "Start time",
                                  "format": "time",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "is_active",
                                "start_time",
                                "end_time"
                              ],
                              "title": "DaySchedule",
                              "type": "object"
                            },
                            "monday": {
                              "description": "Day Schedule Schema",
                              "properties": {
                                "end_time": {
                                  "description": "End time",
                                  "format": "time",
                                  "type": "string"
                                },
                                "is_active": {
                                  "description": "Is active",
                                  "type": "boolean"
                                },
                                "start_time": {
                                  "description": "Start time",
                                  "format": "time",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "is_active",
                                "start_time",
                                "end_time"
                              ],
                              "title": "DaySchedule",
                              "type": "object"
                            },
                            "saturday": {
                              "description": "Day Schedule Schema",
                              "properties": {
                                "end_time": {
                                  "description": "End time",
                                  "format": "time",
                                  "type": "string"
                                },
                                "is_active": {
                                  "description": "Is active",
                                  "type": "boolean"
                                },
                                "start_time": {
                                  "description": "Start time",
                                  "format": "time",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "is_active",
                                "start_time",
                                "end_time"
                              ],
                              "title": "DaySchedule",
                              "type": "object"
                            },
                            "sunday": {
                              "description": "Day Schedule Schema",
                              "properties": {
                                "end_time": {
                                  "description": "End time",
                                  "format": "time",
                                  "type": "string"
                                },
                                "is_active": {
                                  "description": "Is active",
                                  "type": "boolean"
                                },
                                "start_time": {
                                  "description": "Start time",
                                  "format": "time",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "is_active",
                                "start_time",
                                "end_time"
                              ],
                              "title": "DaySchedule",
                              "type": "object"
                            },
                            "thursday": {
                              "description": "Day Schedule Schema",
                              "properties": {
                                "end_time": {
                                  "description": "End time",
                                  "format": "time",
                                  "type": "string"
                                },
                                "is_active": {
                                  "description": "Is active",
                                  "type": "boolean"
                                },
                                "start_time": {
                                  "description": "Start time",
                                  "format": "time",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "is_active",
                                "start_time",
                                "end_time"
                              ],
                              "title": "DaySchedule",
                              "type": "object"
                            },
                            "tuesday": {
                              "description": "Day Schedule Schema",
                              "properties": {
                                "end_time": {
                                  "description": "End time",
                                  "format": "time",
                                  "type": "string"
                                },
                                "is_active": {
                                  "description": "Is active",
                                  "type": "boolean"
                                },
                                "start_time": {
                                  "description": "Start time",
                                  "format": "time",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "is_active",
                                "start_time",
                                "end_time"
                              ],
                              "title": "DaySchedule",
                              "type": "object"
                            },
                            "wednesday": {
                              "description": "Day Schedule Schema",
                              "properties": {
                                "end_time": {
                                  "description": "End time",
                                  "format": "time",
                                  "type": "string"
                                },
                                "is_active": {
                                  "description": "Is active",
                                  "type": "boolean"
                                },
                                "start_time": {
                                  "description": "Start time",
                                  "format": "time",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "is_active",
                                "start_time",
                                "end_time"
                              ],
                              "title": "DaySchedule",
                              "type": "object"
                            }
                          },
                          "title": "WeeklySchedule",
                          "type": "object"
                        }
                      },
                      "required": [
                        "business_user_id",
                        "percentage",
                        "weekly_schedule"
                      ],
                      "title": "RequestStoreCourierOtherIncome",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "is_transferproof_required": {
                    "description": "Is transfer proof required for orders in this store?",
                    "type": "boolean"
                  },
                  "fixed_auto_other_income": {
                    "description": "Fixed auto other income amount",
                    "format": "float",
                    "type": "number"
                  },
                  "auto_other_income": {
                    "description": "Type of auto other income",
                    "type": "string"
                  },
                  "max_per_phone": {
                    "description": "Maximum orders per phone number",
                    "type": "integer"
                  },
                  "capi_purchase_value_type": {
                    "description": "Type of CAPI purchase value",
                    "enum": [
                      "gross_revenue",
                      "net_revenue",
                      "adj_gross_revenue"
                    ],
                    "type": "string"
                  },
                  "is_show_whatsapp": {
                    "description": "Is show WhatsApp option enabled?",
                    "type": "boolean"
                  },
                  "digital_only_complete_type": {
                    "description": "Type of digital-only completion",
                    "enum": [
                      "auto",
                      "when_settled",
                      "manual"
                    ],
                    "type": "string"
                  },
                  "dynamic_other_income_epayment_default_percentage": {
                    "description": "Default percentage for dynamic e-payment income",
                    "format": "float",
                    "type": "number"
                  },
                  "dynamic_other_income_cod_type": {
                    "description": "Type of amount (fixed or percentage)",
                    "enum": [
                      "fixed",
                      "percentage"
                    ],
                    "type": "string"
                  },
                  "warehouse_id": {
                    "description": "Warehouse ID",
                    "type": "integer"
                  }
                },
                "title": "UpdateStore",
                "type": "object"
              }
            }
          },
          "description": "Store data to update",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "is_unique_code": {
                      "description": "Is unique code required for orders?",
                      "type": "boolean"
                    },
                    "days_of_payment_processing": {
                      "description": "Days of payment processing",
                      "type": "integer"
                    },
                    "min_name_length": {
                      "description": "Minimum name length for validation",
                      "type": "integer"
                    },
                    "warehouse": {
                      "properties": {
                        "business": {
                          "properties": {
                            "account_holder": {
                              "description": "Name of the account holder",
                              "type": "string"
                            },
                            "email": {
                              "description": "Email address of the business",
                              "format": "email",
                              "type": "string"
                            },
                            "id": {
                              "description": "Business ID",
                              "type": "integer"
                            },
                            "is_banned": {
                              "description": "Is the business banned?",
                              "type": "boolean"
                            },
                            "logo": {
                              "description": "URL to the business logo",
                              "format": "uri",
                              "type": "string"
                            },
                            "unique_id": {
                              "description": "Unique identifier for the business",
                              "type": "string"
                            },
                            "username": {
                              "description": "Username of the business",
                              "type": "string"
                            }
                          },
                          "title": "BusinessSimple",
                          "type": "object"
                        },
                        "contact_name": {
                          "description": "Contact name at the warehouse",
                          "type": "string"
                        },
                        "contact_phone": {
                          "description": "Contact phone number at the warehouse",
                          "type": "string"
                        },
                        "id": {
                          "description": "Warehouse ID",
                          "type": "integer"
                        },
                        "name": {
                          "description": "Name of the warehouse",
                          "type": "string"
                        },
                        "warehouse_address": {
                          "properties": {
                            "address": {
                              "description": "Full address of the warehouse",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the warehouse address",
                              "type": "string"
                            },
                            "id": {
                              "description": "Warehouse Address ID",
                              "type": "integer"
                            },
                            "location_id": {
                              "description": "Location ID for the address",
                              "type": "integer"
                            },
                            "postal_code": {
                              "description": "Postal code of the warehouse address",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the warehouse address",
                              "type": "string"
                            },
                            "subdistrict": {
                              "description": "Subdistrict of the warehouse address",
                              "type": "string"
                            }
                          },
                          "title": "WarehouseAddressSimple",
                          "type": "object"
                        }
                      },
                      "title": "Warehouse",
                      "type": "object"
                    },
                    "store_sales_person": {
                      "description": "List of store sales persons",
                      "items": {
                        "description": "Store Sales Person Simple Schema",
                        "properties": {
                          "business_user": {
                            "properties": {
                              "business_phone": {
                                "description": "The business phone number",
                                "type": "string"
                              },
                              "id": {
                                "description": "The business user ID",
                                "type": "integer"
                              },
                              "role": {
                                "properties": {
                                  "id": {
                                    "description": "The role ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "The name of the role",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ],
                                "title": "SimpleRole",
                                "type": "object"
                              },
                              "user": {
                                "properties": {
                                  "aff_code": {
                                    "description": "Affiliate code of the user",
                                    "type": "string"
                                  },
                                  "avatar": {
                                    "description": "URL to user avatar",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "User email",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "fullname": {
                                    "description": "User full name",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "User ID",
                                    "type": "integer"
                                  },
                                  "phone": {
                                    "description": "User phone number",
                                    "type": "string"
                                  }
                                },
                                "title": "UserSimple",
                                "type": "object"
                              }
                            },
                            "required": [
                              "id",
                              "user",
                              "role",
                              "business_phone"
                            ],
                            "title": "BusinessUser",
                            "type": "object"
                          },
                          "id": {
                            "description": "Store Sales Person ID",
                            "type": "integer"
                          },
                          "percentage": {
                            "description": "Percentage of sales person",
                            "type": "integer"
                          },
                          "weekly_schedule": {
                            "description": "Weekly Schedule Schema",
                            "properties": {
                              "friday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "monday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "saturday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "sunday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "thursday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "tuesday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              },
                              "wednesday": {
                                "description": "Day Schedule Schema",
                                "properties": {
                                  "end_time": {
                                    "description": "End time",
                                    "format": "time",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Is active",
                                    "type": "boolean"
                                  },
                                  "start_time": {
                                    "description": "Start time",
                                    "format": "time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "is_active",
                                  "start_time",
                                  "end_time"
                                ],
                                "title": "DaySchedule",
                                "type": "object"
                              }
                            },
                            "title": "WeeklySchedule",
                            "type": "object"
                          }
                        },
                        "title": "StoreSalesPersonSimple",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "is_postal_code": {
                      "description": "Is postal code required for orders?",
                      "type": "boolean"
                    },
                    "is_email_notifications": {
                      "description": "Is email notifications enabled?",
                      "type": "boolean"
                    },
                    "is_discount_editable": {
                      "description": "Is discount editable?",
                      "type": "boolean"
                    },
                    "store_method_other_incomes": {
                      "description": "Other incomes for store methods",
                      "items": {
                        "description": "Store Payment Method Other Income Schema",
                        "properties": {
                          "amount": {
                            "description": "Amount of other income",
                            "format": "float",
                            "type": "number"
                          },
                          "payment_method": {
                            "description": "Payment Method",
                            "type": "string"
                          },
                          "percentage": {
                            "description": "Percentage of other income",
                            "format": "float",
                            "type": "number"
                          },
                          "sub_payment_method": {
                            "description": "Sub Payment Method",
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of amount (fixed or percentage)",
                            "enum": [
                              "fixed",
                              "percentage"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "payment_method",
                          "type"
                        ],
                        "title": "StorePaymentMethodOtherIncome",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "store_courier_other_incomes": {
                      "description": "Other incomes for store couriers",
                      "items": {
                        "description": "Store Courier Other Income Schema",
                        "properties": {
                          "amount": {
                            "description": "Amount of other income",
                            "format": "float",
                            "type": "number"
                          },
                          "courier_id": {
                            "description": "Courier ID",
                            "type": "integer"
                          },
                          "percentage": {
                            "description": "Percentage of other income",
                            "format": "float",
                            "type": "number"
                          },
                          "type": {
                            "description": "Type of other income",
                            "enum": [
                              "fixed",
                              "percentage"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "courier_id",
                          "type"
                        ],
                        "title": "StoreCourierOtherIncome",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "dynamic_other_income_cod_default_percentage": {
                      "description": "Default percentage for dynamic COD income",
                      "format": "float",
                      "type": "number"
                    },
                    "dynamic_other_income_epayment_type": {
                      "description": "Type of amount (fixed or percentage)",
                      "enum": [
                        "fixed",
                        "percentage"
                      ],
                      "type": "string"
                    },
                    "dynamic_other_income_cod_default_amount": {
                      "description": "Default amount for dynamic COD income",
                      "format": "float",
                      "type": "number"
                    },
                    "is_advanced_validation": {
                      "description": "Is advanced validation enabled?",
                      "type": "boolean"
                    },
                    "is_fuc_product_enabled": {
                      "description": "Is follow-up chat for products enabled?",
                      "type": "boolean"
                    },
                    "is_manual_shipping_cost": {
                      "description": "Is manual shipping cost enabled?",
                      "type": "boolean"
                    },
                    "business": {
                      "properties": {
                        "account_holder": {
                          "description": "Name of the account holder",
                          "type": "string"
                        },
                        "email": {
                          "description": "Email address of the business",
                          "format": "email",
                          "type": "string"
                        },
                        "id": {
                          "description": "Business ID",
                          "type": "integer"
                        },
                        "is_banned": {
                          "description": "Is the business banned?",
                          "type": "boolean"
                        },
                        "logo": {
                          "description": "URL to the business logo",
                          "format": "uri",
                          "type": "string"
                        },
                        "unique_id": {
                          "description": "Unique identifier for the business",
                          "type": "string"
                        },
                        "username": {
                          "description": "Username of the business",
                          "type": "string"
                        }
                      },
                      "title": "BusinessSimple",
                      "type": "object"
                    },
                    "uuid": {
                      "description": "UUID of the store",
                      "type": "string"
                    },
                    "last_updated_by": {
                      "properties": {
                        "aff_code": {
                          "description": "Affiliate code of the user",
                          "type": "string"
                        },
                        "avatar": {
                          "description": "URL to user avatar",
                          "format": "uri",
                          "type": "string"
                        },
                        "email": {
                          "description": "User email",
                          "format": "email",
                          "type": "string"
                        },
                        "fullname": {
                          "description": "User full name",
                          "type": "string"
                        },
                        "id": {
                          "description": "User ID",
                          "type": "integer"
                        },
                        "phone": {
                          "description": "User phone number",
                          "type": "string"
                        }
                      },
                      "title": "UserSimple",
                      "type": "object"
                    },
                    "is_email_new_order": {
                      "description": "Is email notification for new orders enabled?",
                      "type": "boolean"
                    },
                    "non_cod_purchase_triggers": {
                      "description": "Non-COD purchase triggers",
                      "items": {
                        "enum": [
                          "public_upload",
                          "internal_upload",
                          "confirmed",
                          "shipped",
                          "completed"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "email_reply_to": {
                      "properties": {
                        "business_phone": {
                          "description": "The business phone number",
                          "type": "string"
                        },
                        "id": {
                          "description": "The business user ID",
                          "type": "integer"
                        },
                        "role": {
                          "properties": {
                            "id": {
                              "description": "The role ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "The name of the role",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ],
                          "title": "SimpleRole",
                          "type": "object"
                        },
                        "user": {
                          "properties": {
                            "aff_code": {
                              "description": "Affiliate code of the user",
                              "type": "string"
                            },
                            "avatar": {
                              "description": "URL to user avatar",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "description": "User email",
                              "format": "email",
                              "type": "string"
                            },
                            "fullname": {
                              "description": "User full name",
                              "type": "string"
                            },
                            "id": {
                              "description": "User ID",
                              "type": "integer"
                            },
                            "phone": {
                              "description": "User phone number",
                              "type": "string"
                            }
                          },
                          "title": "UserSimple",
                          "type": "object"
                        }
                      },
                      "required": [
                        "id",
                        "user",
                        "role",
                        "business_phone"
                      ],
                      "title": "BusinessUser",
                      "type": "object"
                    },
                    "is_dropshipping_allowed": {
                      "description": "Is dropshipping allowed in this store?",
                      "type": "boolean"
                    },
                    "blocked_message": {
                      "description": "Blocked message for spam filter",
                      "type": "string"
                    },
                    "payment_methods": {
                      "description": "Payment methods available in the store",
                      "items": {
                        "description": "Order payment method",
                        "enum": [
                          "gopay",
                          "va",
                          "qris",
                          "card",
                          "invoice",
                          "alfamart",
                          "ovo",
                          "dana",
                          "shopeepay",
                          "linkaja",
                          "no_payment",
                          "bank_transfer",
                          "marketplace",
                          "cod"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "advertisers": {
                      "description": "List of advertisers associated with the store",
                      "items": {
                        "properties": {
                          "business_phone": {
                            "description": "The business phone number",
                            "type": "string"
                          },
                          "id": {
                            "description": "The business user ID",
                            "type": "integer"
                          },
                          "role": {
                            "properties": {
                              "id": {
                                "description": "The role ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the role",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ],
                            "title": "SimpleRole",
                            "type": "object"
                          },
                          "user": {
                            "properties": {
                              "aff_code": {
                                "description": "Affiliate code of the user",
                                "type": "string"
                              },
                              "avatar": {
                                "description": "URL to user avatar",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "description": "User email",
                                "format": "email",
                                "type": "string"
                              },
                              "fullname": {
                                "description": "User full name",
                                "type": "string"
                              },
                              "id": {
                                "description": "User ID",
                                "type": "integer"
                              },
                              "phone": {
                                "description": "User phone number",
                                "type": "string"
                              }
                            },
                            "title": "UserSimple",
                            "type": "object"
                          }
                        },
                        "required": [
                          "id",
                          "user",
                          "role",
                          "business_phone"
                        ],
                        "title": "BusinessUser",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "store_admins": {
                      "description": "List of store admins",
                      "items": {
                        "properties": {
                          "business_phone": {
                            "description": "The business phone number",
                            "type": "string"
                          },
                          "id": {
                            "description": "The business user ID",
                            "type": "integer"
                          },
                          "role": {
                            "properties": {
                              "id": {
                                "description": "The role ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the role",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ],
                            "title": "SimpleRole",
                            "type": "object"
                          },
                          "user": {
                            "properties": {
                              "aff_code": {
                                "description": "Affiliate code of the user",
                                "type": "string"
                              },
                              "avatar": {
                                "description": "URL to user avatar",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "description": "User email",
                                "format": "email",
                                "type": "string"
                              },
                              "fullname": {
                                "description": "User full name",
                                "type": "string"
                              },
                              "id": {
                                "description": "User ID",
                                "type": "integer"
                              },
                              "phone": {
                                "description": "User phone number",
                                "type": "string"
                              }
                            },
                            "title": "UserSimple",
                            "type": "object"
                          }
                        },
                        "required": [
                          "id",
                          "user",
                          "role",
                          "business_phone"
                        ],
                        "title": "BusinessUser",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "created_by": {
                      "properties": {
                        "aff_code": {
                          "description": "Affiliate code of the user",
                          "type": "string"
                        },
                        "avatar": {
                          "description": "URL to user avatar",
                          "format": "uri",
                          "type": "string"
                        },
                        "email": {
                          "description": "User email",
                          "format": "email",
                          "type": "string"
                        },
                        "fullname": {
                          "description": "User full name",
                          "type": "string"
                        },
                        "id": {
                          "description": "User ID",
                          "type": "integer"
                        },
                        "phone": {
                          "description": "User phone number",
                          "type": "string"
                        }
                      },
                      "title": "UserSimple",
                      "type": "object"
                    },
                    "max_per_ip": {
                      "description": "Maximum orders per IP address",
                      "type": "integer"
                    },
                    "email_notification_statuses": {
                      "description": "Email notification statuses",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "bundles": {
                      "description": "List of bundles associated with the store",
                      "items": {
                        "properties": {
                          "bundle_price_options": {
                            "description": "List of Bundle Price Options",
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Bundle Price Option ID",
                                  "type": "integer"
                                },
                                "is_owned_by_store": {
                                  "description": "Is owned by store",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "Name",
                                  "type": "string"
                                },
                                "price": {
                                  "description": "Price (including tax)",
                                  "format": "float",
                                  "type": "number"
                                },
                                "price_bt": {
                                  "description": "Price before tax",
                                  "format": "float",
                                  "type": "number"
                                },
                                "slug": {
                                  "description": "Slug",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Bundle Price Option Unique ID",
                                  "type": "string"
                                }
                              },
                              "title": "BundlePriceOptionSimple",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "custom_id": {
                            "description": "Custom Identifier",
                            "type": "string"
                          },
                          "display": {
                            "description": "Display Name",
                            "type": "string"
                          },
                          "id": {
                            "description": "Bundle ID",
                            "type": "integer"
                          },
                          "images": {
                            "description": "List of Image URLs",
                            "items": {
                              "format": "uri",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "is_bundle_sharing": {
                            "description": "Is Bundle Sharing Enabled",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "Name",
                            "type": "string"
                          },
                          "public_name": {
                            "description": "Public Name",
                            "type": "string"
                          },
                          "weight_bump": {
                            "description": "Weight Bump",
                            "type": "integer"
                          }
                        },
                        "title": "BundleListSimplified",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "greeting_message": {
                      "description": "Greeting message for WhatsApp",
                      "type": "string"
                    },
                    "logo": {
                      "description": "URL of the store logo",
                      "format": "uri",
                      "type": "string"
                    },
                    "is_spam_filter": {
                      "description": "Is spam filter with AI enabled?",
                      "type": "boolean"
                    },
                    "cod_purchase_triggers": {
                      "description": "COD purchase triggers",
                      "items": {
                        "enum": [
                          "public_upload",
                          "internal_upload",
                          "confirmed",
                          "shipped",
                          "completed"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "is_use_waba": {
                      "description": "Is WABA integration enabled?",
                      "type": "boolean"
                    },
                    "email_reply_to_assignment": {
                      "description": "Email reply-to assignment type",
                      "enum": [
                        "fixed",
                        "rotator"
                      ],
                      "type": "string"
                    },
                    "postal_code_requirement": {
                      "description": "Postal code requirement options",
                      "enum": [
                        "autofill",
                        "manual"
                      ],
                      "type": "string"
                    },
                    "waba_account": {
                      "properties": {
                        "display_phone_number": {
                          "description": "Display Phone Number",
                          "type": "string"
                        },
                        "id": {
                          "description": "WABA Account ID",
                          "type": "integer"
                        },
                        "inserted_at": {
                          "description": "Inserted At",
                          "format": "date-time",
                          "type": "string"
                        },
                        "is_pin_enabled": {
                          "description": "Is PIN Enabled",
                          "type": "boolean"
                        },
                        "is_webhooks_subscribed": {
                          "description": "Is Webhooks Subscribed",
                          "type": "boolean"
                        },
                        "phone_number_id": {
                          "description": "Phone Number ID",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status",
                          "type": "string"
                        },
                        "unique_id": {
                          "description": "Unique Identifier",
                          "type": "string"
                        },
                        "updated_at": {
                          "description": "Updated At",
                          "format": "date-time",
                          "type": "string"
                        },
                        "verified_name": {
                          "description": "Verified Name",
                          "type": "string"
                        },
                        "waba_id": {
                          "description": "WABA ID",
                          "type": "string"
                        }
                      },
                      "title": "WabaAccount",
                      "type": "object"
                    },
                    "name": {
                      "description": "Name of the store",
                      "type": "string"
                    },
                    "id": {
                      "description": "Store ID",
                      "type": "integer"
                    },
                    "is_moota_enabled": {
                      "description": "Is Moota integration enabled for this store?",
                      "type": "boolean"
                    },
                    "sub_payment_methods": {
                      "description": "Xendit VA bank codes",
                      "items": {
                        "description": "Xendit VA bank code",
                        "enum": [
                          "BCA",
                          "BNI",
                          "BRI",
                          "MANDIRI",
                          "PERMATA",
                          "BSI",
                          "BJB",
                          "CIMB",
                          "SAHABAT_SAMPOERNA",
                          "ARTAJASA"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "is_ip_spam_filter": {
                      "description": "Is IP spam filter enabled?",
                      "type": "boolean"
                    },
                    "products": {
                      "description": "List of products associated with the store",
                      "items": {
                        "properties": {
                          "display": {
                            "description": "Display name of the product",
                            "type": "string"
                          },
                          "id": {
                            "description": "Product primary key",
                            "type": "integer"
                          },
                          "images": {
                            "description": "List of image URLs associated with the product",
                            "items": {
                              "format": "uri",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "item_type": {
                            "description": "Type of the product item",
                            "enum": [
                              "physical",
                              "digital",
                              "course"
                            ],
                            "title": "ItemType",
                            "type": "string"
                          },
                          "item_type_name": {
                            "description": "Human-readable name of the product item type",
                            "type": "string"
                          },
                          "labels": {
                            "description": "List of labels associated with the product",
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "Label name",
                                  "type": "string"
                                }
                              },
                              "title": "ItemLabel",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "name": {
                            "description": "Product name",
                            "type": "string"
                          },
                          "option1_name": {
                            "description": "Name of first option value",
                            "type": "string"
                          },
                          "option2_name": {
                            "description": "Name of 2nd option value",
                            "type": "string"
                          },
                          "option3_name": {
                            "description": "Name of 3rd option value",
                            "type": "string"
                          },
                          "public_name": {
                            "description": "Product Public name",
                            "type": "string"
                          },
                          "uuid": {
                            "description": "Product UUID",
                            "type": "string"
                          },
                          "variant_count": {
                            "description": "Count of variants associated with the product",
                            "type": "integer"
                          },
                          "variants": {
                            "description": "List of variants associated with the product",
                            "items": {
                              "properties": {
                                "available_qty": {
                                  "description": "Available quantity of the variant in inventory",
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "Variant primary key",
                                  "type": "integer"
                                },
                                "images": {
                                  "description": "List of image URLs associated with the variant",
                                  "items": {
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "is_checked": {
                                  "description": "Mark variant as sellable",
                                  "type": "boolean"
                                },
                                "is_editable": {
                                  "description": "Indicates if the variant is editable",
                                  "type": "boolean"
                                },
                                "item_type": {
                                  "description": "Type of the product item",
                                  "enum": [
                                    "physical",
                                    "digital",
                                    "course"
                                  ],
                                  "type": "string"
                                },
                                "metadata": {
                                  "additionalProperties": true,
                                  "description": "Additional metadata associated with the variant",
                                  "type": "object"
                                },
                                "name": {
                                  "description": "Full name of the variant",
                                  "type": "string"
                                },
                                "option1_color": {
                                  "description": "Color associated with the first product option",
                                  "type": "string"
                                },
                                "option1_icon_url": {
                                  "description": "Icon URL for the first product option",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "option1_value": {
                                  "description": "Value of the first product option",
                                  "type": "string"
                                },
                                "option2_color": {
                                  "description": "Color associated with the second product option",
                                  "type": "string"
                                },
                                "option2_icon_url": {
                                  "description": "Icon URL for the second product option",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "option2_value": {
                                  "description": "Value of the second product option",
                                  "type": "string"
                                },
                                "option3_color": {
                                  "description": "Color associated with the third product option",
                                  "type": "string"
                                },
                                "option3_icon_url": {
                                  "description": "Icon URL for the third product option",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "option3_value": {
                                  "description": "Value of the third product option",
                                  "type": "string"
                                },
                                "price": {
                                  "description": "Price of the variant",
                                  "type": "number"
                                },
                                "product_name": {
                                  "description": "Name of the associated product",
                                  "type": "string"
                                },
                                "reseller_price": {
                                  "description": "Reseller price of the variant",
                                  "type": "number"
                                },
                                "unique_id": {
                                  "description": "Variant unique identifier",
                                  "type": "string"
                                },
                                "uuid": {
                                  "description": "Variant UUID",
                                  "type": "string"
                                },
                                "weight": {
                                  "description": "Weight of the variant in grams",
                                  "type": "integer"
                                }
                              },
                              "title": "ForStoreListVariant",
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "title": "ForStoreProductList",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "courier_services": {
                      "description": "List of courier services associated with the store",
                      "items": {
                        "properties": {
                          "category": {
                            "description": "Category of the courier service",
                            "type": "string"
                          },
                          "code": {
                            "description": "Code for the courier service",
                            "type": "string"
                          },
                          "courier": {
                            "properties": {
                              "code": {
                                "description": "Courier code",
                                "type": "string"
                              },
                              "code_ka": {
                                "description": "Courier code in Georgian",
                                "type": "string"
                              },
                              "code_lincah": {
                                "description": "Courier code in Lincah",
                                "type": "string"
                              },
                              "code_mengantar": {
                                "description": "Courier code for Mengantar",
                                "type": "string"
                              },
                              "code_ro": {
                                "description": "Courier code in Romanian",
                                "type": "string"
                              },
                              "courier_type": {
                                "description": "Type of the courier",
                                "enum": [
                                  "delivery",
                                  "pickup"
                                ],
                                "type": "string"
                              },
                              "id": {
                                "description": "Courier ID",
                                "type": "integer"
                              },
                              "is_pickup": {
                                "description": "Is this a pickup courier?",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Courier name",
                                "type": "string"
                              }
                            },
                            "title": "Courier",
                            "type": "object"
                          },
                          "description": {
                            "description": "Description of the courier service",
                            "type": "string"
                          },
                          "id": {
                            "description": "Courier Service ID",
                            "type": "integer"
                          },
                          "is_cod": {
                            "description": "Is Cash on Delivery available for this courier service",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "Name of the courier service",
                            "type": "string"
                          }
                        },
                        "title": "ForStoreCourierService",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "unique_id": {
                      "description": "Unique identifier for the store",
                      "type": "string"
                    },
                    "inactivity_period": {
                      "description": "Inactivity period for WhatsApp",
                      "type": "integer"
                    },
                    "payment_accounts": {
                      "description": "List of payment accounts associated with the store",
                      "items": {
                        "properties": {
                          "account_holder": {
                            "description": "Account Holder Name",
                            "type": "string"
                          },
                          "account_number": {
                            "description": "Account Number",
                            "type": "string"
                          },
                          "financial_entity": {
                            "properties": {
                              "code": {
                                "description": "Code of the financial entity",
                                "type": "string"
                              },
                              "duitku_code": {
                                "description": "Duitku code for the financial entity",
                                "type": "string"
                              },
                              "entity_type": {
                                "description": "Type of the financial entity",
                                "type": "string"
                              },
                              "id": {
                                "description": "Financial Entity ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the financial entity",
                                "type": "string"
                              },
                              "platform": {
                                "description": "Platform associated with the financial entity",
                                "type": "string"
                              },
                              "xendit_code": {
                                "description": "Xendit code for the financial entity",
                                "type": "string"
                              }
                            },
                            "title": "FinancialEntity",
                            "type": "object"
                          },
                          "id": {
                            "description": "Payment Account ID",
                            "type": "integer"
                          },
                          "method": {
                            "description": "Payment Method",
                            "type": "string"
                          },
                          "unique_id": {
                            "description": "Unique Identifier",
                            "type": "string"
                          }
                        },
                        "title": "PaymentAccount",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "is_customer_otp_required": {
                      "description": "Is customer OTP required?",
                      "type": "boolean"
                    },
                    "other_income_name": {
                      "description": "Name of the other income",
                      "type": "string"
                    },
                    "auto_expire_days": {
                      "description": "Days until auto-expire",
                      "type": "integer"
                    },
                    "max_unique_code_amount": {
                      "description": "Maximum amount for unique code orders",
                      "format": "float",
                      "type": "number"
                    },
                    "is_greeting_message_enabled": {
                      "description": "Is greeting message enabled?",
                      "type": "boolean"
                    },
                    "is_customer_spam_filter": {
                      "description": "Is customer spam filter enabled?",
                      "type": "boolean"
                    },
                    "is_show_download_invoice": {
                      "description": "Is show download invoice option enabled?",
                      "type": "boolean"
                    },
                    "is_auto_expire": {
                      "description": "Is auto-expire enabled?",
                      "type": "boolean"
                    },
                    "is_show_scalev_branding": {
                      "description": "Is Scalev branding shown?",
                      "type": "boolean"
                    },
                    "dynamic_other_income_epayment_default_amount": {
                      "description": "Default amount for dynamic e-payment income",
                      "format": "float",
                      "type": "number"
                    },
                    "is_fuc_bundle_enabled": {
                      "description": "Is follow-up chat for bundles enabled?",
                      "type": "boolean"
                    },
                    "min_address_length": {
                      "description": "Minimum address length for validation",
                      "type": "integer"
                    },
                    "is_transferproof_required": {
                      "description": "Is transfer proof required for orders in this store?",
                      "type": "boolean"
                    },
                    "fixed_auto_other_income": {
                      "description": "Fixed auto other income amount",
                      "format": "float",
                      "type": "number"
                    },
                    "auto_other_income": {
                      "description": "Type of auto other income",
                      "type": "string"
                    },
                    "max_per_phone": {
                      "description": "Maximum orders per phone number",
                      "type": "integer"
                    },
                    "capi_purchase_value_type": {
                      "description": "Type of CAPI purchase value",
                      "enum": [
                        "gross_revenue",
                        "net_revenue",
                        "adj_gross_revenue"
                      ],
                      "type": "string"
                    },
                    "last_updated_at": {
                      "description": "Last update timestamp",
                      "format": "date-time",
                      "type": "string"
                    },
                    "is_show_whatsapp": {
                      "description": "Is show WhatsApp option enabled?",
                      "type": "boolean"
                    },
                    "digital_only_complete_type": {
                      "description": "Digital only complete type",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Is the store active?",
                      "type": "boolean"
                    },
                    "dynamic_other_income_epayment_default_percentage": {
                      "description": "Default percentage for dynamic e-payment income",
                      "format": "float",
                      "type": "number"
                    },
                    "dynamic_other_income_cod_type": {
                      "description": "Type of amount (fixed or percentage)",
                      "enum": [
                        "fixed",
                        "percentage"
                      ],
                      "type": "string"
                    },
                    "created_at": {
                      "description": "Creation timestamp",
                      "format": "date-time",
                      "type": "string"
                    },
                    "custom_domain": {
                      "properties": {
                        "full_url": {
                          "description": "Full URL",
                          "format": "uri",
                          "type": "string"
                        },
                        "id": {
                          "description": "Custom Domain ID",
                          "type": "integer"
                        },
                        "is_verified": {
                          "description": "Is Verified",
                          "type": "boolean"
                        }
                      },
                      "title": "SimpleCustomDomain",
                      "type": "object"
                    }
                  },
                  "title": "Store",
                  "type": "object"
                }
              }
            },
            "description": "Updated store details"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "Update a store",
        "tags": [
          "Stores"
        ]
      },
      "delete": {
        "callbacks": {},
        "description": "Deletes a store and all its associated data.",
        "operationId": "ScalevApiWeb.StoreController.delete",
        "parameters": [
          {
            "description": "Store ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Store deleted successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "delete_store"
            ]
          }
        ],
        "summary": "Delete a store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/bpos": {
      "post": {
        "callbacks": {},
        "description": "Associates one or more bundle price options with a specific store.",
        "operationId": "ScalevApiWeb.StoreController.add_bpos",
        "parameters": [
          {
            "description": "ID of the store to which bundle price options will be added",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bpo_ids": {
                    "description": "List of Bundle Price Option IDs to associate with the store",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "bpo_ids"
                ],
                "type": "object"
              }
            }
          },
          "description": "Bundle Price Options data to add",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Bundle Price Options added successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "Add Bundle Price Options to a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/bpos/{id}": {
      "delete": {
        "callbacks": {},
        "description": "Dissociates a specific Bundle Price Option from a store.",
        "operationId": "ScalevApiWeb.StoreController.remove_bpo",
        "parameters": [
          {
            "description": "ID of the store from which the Bundle Price Option will be removed",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "ID of the Bundle Price Option to remove",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Bundle Price Option removed successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "Remove a Bundle Price Option from a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/bpos/{id}/relations": {
      "get": {
        "callbacks": {},
        "description": "Retrieves detailed relation of a specific Bundle Price Option associated with a store.",
        "operationId": "ScalevApiWeb.StoreController.show_bpo_relations",
        "parameters": [
          {
            "description": "ID of the store containing the Bundle Price Option",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "ID of the Bundle Price Option to view",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "bundle_id": {
                      "description": "Bundle ID",
                      "type": "integer"
                    },
                    "id": {
                      "description": "Bundle Price Option ID",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Name",
                      "type": "string"
                    },
                    "pages": {
                      "properties": {
                        "all": {
                          "items": {
                            "properties": {
                              "business": {
                                "properties": {
                                  "account_holder": {
                                    "description": "Name of the account holder",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "Email address of the business",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Business ID",
                                    "type": "integer"
                                  },
                                  "is_banned": {
                                    "description": "Is the business banned?",
                                    "type": "boolean"
                                  },
                                  "logo": {
                                    "description": "URL to the business logo",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the business",
                                    "type": "string"
                                  },
                                  "username": {
                                    "description": "Username of the business",
                                    "type": "string"
                                  }
                                },
                                "title": "BusinessSimple",
                                "type": "object"
                              },
                              "id": {
                                "description": "Page ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the page",
                                "type": "string"
                              },
                              "slug": {
                                "description": "Slug for the page URL",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Unique identifier for the page",
                                "type": "string"
                              }
                            },
                            "title": "PageRelation",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "will_unpublish": {
                          "items": {
                            "properties": {
                              "business": {
                                "properties": {
                                  "account_holder": {
                                    "description": "Name of the account holder",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "Email address of the business",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Business ID",
                                    "type": "integer"
                                  },
                                  "is_banned": {
                                    "description": "Is the business banned?",
                                    "type": "boolean"
                                  },
                                  "logo": {
                                    "description": "URL to the business logo",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the business",
                                    "type": "string"
                                  },
                                  "username": {
                                    "description": "Username of the business",
                                    "type": "string"
                                  }
                                },
                                "title": "BusinessSimple",
                                "type": "object"
                              },
                              "id": {
                                "description": "Page ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the page",
                                "type": "string"
                              },
                              "slug": {
                                "description": "Slug for the page URL",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Unique identifier for the page",
                                "type": "string"
                              }
                            },
                            "title": "PageRelation",
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "slug": {
                      "description": "Slug",
                      "type": "string"
                    },
                    "unique_id": {
                      "description": "Bundle Price Option Unique ID",
                      "type": "string"
                    }
                  },
                  "title": "BundlePriceOptionForStoreRelation",
                  "type": "object"
                }
              }
            },
            "description": "Bundle Price Option relations"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "View Bundle Price Option relations in a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/bundles": {
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of bundles available in a specific store. The data is sorted by id in descending order and cannot be changed. Uses cursor-based pagination with default page size of 25 and maximum of 25.",
        "operationId": "ScalevApiWeb.StoreController.index_bundle",
        "parameters": [
          {
            "description": "ID of the store whose bundles are to be listed",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          },
          {
            "description": "Last bundle ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term to filter bundles by name or description (case-insensitive, partial match)",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter bundles that are shared across businesses (true/false)",
            "in": "query",
            "name": "is_bundle_sharing",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "description": "Filter bundles by a specific label",
            "in": "query",
            "name": "label",
            "required": false,
            "schema": {
              "example": "Summer Sale",
              "type": "string"
            }
          },
          {
            "description": "Primary key of the order to validate if the bundles are applicable for that order",
            "in": "query",
            "name": "order_id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "available_qty": {
                                "description": "Available Quantity",
                                "type": "integer"
                              },
                              "bundle_price_options": {
                                "description": "List of Bundle Price Options",
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Bundle Price Option ID",
                                      "type": "integer"
                                    },
                                    "is_owned_by_store": {
                                      "description": "Is owned by store",
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "description": "Name",
                                      "type": "string"
                                    },
                                    "price": {
                                      "description": "Price (including tax)",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "price_bt": {
                                      "description": "Price before tax",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "slug": {
                                      "description": "Slug",
                                      "type": "string"
                                    },
                                    "unique_id": {
                                      "description": "Bundle Price Option Unique ID",
                                      "type": "string"
                                    }
                                  },
                                  "title": "BundlePriceOptionSimple",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "bundlelines": {
                                "description": "List of Bundle Lines with Product details",
                                "items": {
                                  "properties": {
                                    "id": {
                                      "description": "Bundle Line ID",
                                      "type": "integer"
                                    },
                                    "quantity": {
                                      "description": "Quantity of the variant in the bundle line",
                                      "type": "integer"
                                    },
                                    "variant": {
                                      "properties": {
                                        "description": {
                                          "description": "Variant Description",
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "Variant ID",
                                          "type": "integer"
                                        },
                                        "images": {
                                          "items": {
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "item_type": {
                                          "description": "Type of the product item",
                                          "enum": [
                                            "physical",
                                            "digital",
                                            "course"
                                          ],
                                          "title": "ItemType",
                                          "type": "string"
                                        },
                                        "metadata": {
                                          "additionalProperties": true,
                                          "type": "object"
                                        },
                                        "name": {
                                          "description": "Variant Fullname",
                                          "type": "string"
                                        },
                                        "option1_value": {
                                          "description": "Option 1 Value",
                                          "type": "string"
                                        },
                                        "option2_value": {
                                          "description": "Option 2 Value",
                                          "type": "string"
                                        },
                                        "option3_value": {
                                          "description": "Option 3 Value",
                                          "type": "string"
                                        },
                                        "price": {
                                          "description": "Price",
                                          "type": "number"
                                        },
                                        "product": {
                                          "properties": {
                                            "id": {
                                              "description": "Product ID",
                                              "type": "integer"
                                            },
                                            "item_type": {
                                              "description": "Type of the product item",
                                              "enum": [
                                                "physical",
                                                "digital",
                                                "course"
                                              ],
                                              "title": "ItemType",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Product Name",
                                              "type": "string"
                                            }
                                          },
                                          "title": "ProductNameType",
                                          "type": "object"
                                        },
                                        "product_id": {
                                          "description": "Product ID",
                                          "type": "integer"
                                        },
                                        "product_name": {
                                          "description": "Product Name",
                                          "type": "string"
                                        },
                                        "rich_description": {
                                          "description": "Variant Rich Description",
                                          "type": "string"
                                        },
                                        "sku": {
                                          "description": "SKU",
                                          "type": "string"
                                        },
                                        "unique_id": {
                                          "description": "Variant Unique ID",
                                          "type": "string"
                                        },
                                        "weight": {
                                          "description": "Weight",
                                          "type": "integer"
                                        }
                                      },
                                      "title": "VariantForPageWithProduct",
                                      "type": "object"
                                    }
                                  },
                                  "title": "BundleLineForPageWithProduct",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "custom_id": {
                                "description": "Custom Identifier",
                                "type": "string"
                              },
                              "display": {
                                "description": "Display Name",
                                "type": "string"
                              },
                              "id": {
                                "description": "Bundle ID",
                                "type": "integer"
                              },
                              "images": {
                                "description": "List of Image URLs",
                                "items": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "is_bundle_sharing": {
                                "description": "Is Bundle Sharing Enabled",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name",
                                "type": "string"
                              },
                              "public_name": {
                                "description": "Public Name",
                                "type": "string"
                              },
                              "weight_bump": {
                                "description": "Weight Bump",
                                "type": "integer"
                              }
                            },
                            "title": "BundleList",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Bundles list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_store"
            ]
          }
        ],
        "summary": "List Bundles in a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/bundles/{bundle_id}": {
      "get": {
        "callbacks": {},
        "description": "Retrieves detailed information about a specific bundle in a store.",
        "operationId": "ScalevApiWeb.StoreController.show_bundle",
        "parameters": [
          {
            "description": "ID of the store containing the bundle",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "ID of the bundle to view",
            "in": "path",
            "name": "bundle_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Primary key of the order to validate if the bundle are applicable for that order",
            "in": "query",
            "name": "order_id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "available_qty": {
                      "description": "Available Quantity",
                      "type": "integer"
                    },
                    "bundle_price_options": {
                      "description": "List of Bundle Price Options",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Bundle Price Option ID",
                            "type": "integer"
                          },
                          "is_owned_by_store": {
                            "description": "Is owned by store",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "Name",
                            "type": "string"
                          },
                          "price": {
                            "description": "Price (including tax)",
                            "format": "float",
                            "type": "number"
                          },
                          "price_bt": {
                            "description": "Price before tax",
                            "format": "float",
                            "type": "number"
                          },
                          "slug": {
                            "description": "Slug",
                            "type": "string"
                          },
                          "unique_id": {
                            "description": "Bundle Price Option Unique ID",
                            "type": "string"
                          }
                        },
                        "title": "BundlePriceOptionSimple",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "bundlelines": {
                      "description": "List of Bundle Lines with Product details",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Bundle Line ID",
                            "type": "integer"
                          },
                          "quantity": {
                            "description": "Quantity of the variant in the bundle line",
                            "type": "integer"
                          },
                          "variant": {
                            "properties": {
                              "description": {
                                "description": "Variant Description",
                                "type": "string"
                              },
                              "id": {
                                "description": "Variant ID",
                                "type": "integer"
                              },
                              "images": {
                                "items": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "item_type": {
                                "description": "Type of the product item",
                                "enum": [
                                  "physical",
                                  "digital",
                                  "course"
                                ],
                                "title": "ItemType",
                                "type": "string"
                              },
                              "metadata": {
                                "additionalProperties": true,
                                "type": "object"
                              },
                              "name": {
                                "description": "Variant Fullname",
                                "type": "string"
                              },
                              "option1_value": {
                                "description": "Option 1 Value",
                                "type": "string"
                              },
                              "option2_value": {
                                "description": "Option 2 Value",
                                "type": "string"
                              },
                              "option3_value": {
                                "description": "Option 3 Value",
                                "type": "string"
                              },
                              "price": {
                                "description": "Price",
                                "type": "number"
                              },
                              "product": {
                                "properties": {
                                  "id": {
                                    "description": "Product ID",
                                    "type": "integer"
                                  },
                                  "item_type": {
                                    "description": "Type of the product item",
                                    "enum": [
                                      "physical",
                                      "digital",
                                      "course"
                                    ],
                                    "title": "ItemType",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Product Name",
                                    "type": "string"
                                  }
                                },
                                "title": "ProductNameType",
                                "type": "object"
                              },
                              "product_id": {
                                "description": "Product ID",
                                "type": "integer"
                              },
                              "product_name": {
                                "description": "Product Name",
                                "type": "string"
                              },
                              "rich_description": {
                                "description": "Variant Rich Description",
                                "type": "string"
                              },
                              "sku": {
                                "description": "SKU",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Variant Unique ID",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Weight",
                                "type": "integer"
                              }
                            },
                            "title": "VariantForPageWithProduct",
                            "type": "object"
                          }
                        },
                        "title": "BundleLineForPageWithProduct",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "custom_id": {
                      "description": "Custom Identifier",
                      "type": "string"
                    },
                    "display": {
                      "description": "Display Name",
                      "type": "string"
                    },
                    "id": {
                      "description": "Bundle ID",
                      "type": "integer"
                    },
                    "images": {
                      "description": "List of Image URLs",
                      "items": {
                        "format": "uri",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "is_bundle_sharing": {
                      "description": "Is Bundle Sharing Enabled",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Name",
                      "type": "string"
                    },
                    "public_name": {
                      "description": "Public Name",
                      "type": "string"
                    },
                    "weight_bump": {
                      "description": "Weight Bump",
                      "type": "integer"
                    }
                  },
                  "title": "BundleList",
                  "type": "object"
                }
              }
            },
            "description": "Bundle details"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_store"
            ]
          }
        ],
        "summary": "View a Bundle in a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/courier-services": {
      "post": {
        "callbacks": {},
        "description": "Associates one or more courier services with a specific store.",
        "operationId": "ScalevApiWeb.StoreController.add_courier_services",
        "parameters": [
          {
            "description": "ID of the store to which courier services will be added",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "courier_service_ids": {
                    "description": "List of Courier Service IDs to associate with the store",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "courier_service_ids"
                ],
                "type": "object"
              }
            }
          },
          "description": "Courier Services data to add",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Courier Services added successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "Add Courier Services to a Store",
        "tags": [
          "Stores"
        ]
      },
      "delete": {
        "callbacks": {},
        "description": "Dissociates one or more courier services from a specific store.",
        "operationId": "ScalevApiWeb.StoreController.remove_courier_service",
        "parameters": [
          {
            "description": "ID of the store from which courier services will be removed",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "courier_service_ids": {
                    "description": "List of Courier Service IDs to dissociate from the store",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "courier_service_ids"
                ],
                "type": "object"
              }
            }
          },
          "description": "Courier Services data to remove",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Courier Services removed successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "Remove Courier Services from a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/custom-audiences": {
      "get": {
        "callbacks": {},
        "description": "Retrieves a list of custom audiences associated with a specific store.",
        "operationId": "ScalevApiWeb.StoreController.index_custom_audiences",
        "parameters": [
          {
            "description": "ID of the store whose custom audiences are to be listed",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "items": {
                        "properties": {
                          "custom_audience": {
                            "properties": {
                              "custom_audience_id": {
                                "description": "The ID of the custom audience",
                                "type": "string"
                              },
                              "errors": {
                                "description": "List of errors associated with the custom audience",
                                "items": {
                                  "additionalProperties": true,
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "name": {
                                "description": "The name of the custom audience",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "custom_audience_id"
                            ],
                            "title": "CustomAudience",
                            "type": "object"
                          },
                          "order_status": {
                            "description": "Order status",
                            "enum": [
                              "draft",
                              "pending",
                              "confirmed",
                              "in_process",
                              "ready",
                              "shipped",
                              "completed",
                              "canceled",
                              "rts",
                              "closed"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Custom Audiences list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_store"
            ]
          }
        ],
        "summary": "List Custom Audiences in a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/follow-up-chats": {
      "post": {
        "callbacks": {},
        "description": "Create a follow up chat template for a store.",
        "operationId": "ScalevApiWeb.FollowUpChatController.create_fuc",
        "parameters": [
          {
            "description": "Store ID",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "change_status": {
                    "description": "Triggered after order status change to this status",
                    "type": "boolean"
                  },
                  "hours_after": {
                    "description": "Hours after which the follow up chat is triggered",
                    "type": "integer"
                  },
                  "image": {
                    "description": "Image URL for the follow up chat",
                    "format": "uri",
                    "type": "string"
                  },
                  "is_default": {
                    "description": "Is this a default follow up chat?",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Name of the follow up chat",
                    "type": "string"
                  },
                  "provider": {
                    "description": "Provider of the follow up chat",
                    "type": "string"
                  },
                  "text_for_bank_transfer": {
                    "description": "Text for bank transfer",
                    "type": "string"
                  },
                  "text_for_cod": {
                    "description": "Text for cash on delivery",
                    "type": "string"
                  },
                  "text_for_epayment": {
                    "description": "Text for e-payments",
                    "type": "string"
                  },
                  "trigger": {
                    "description": "Trigger condition for the follow up chat",
                    "type": "string"
                  },
                  "wa_gateway_assignation_type": {
                    "description": "WhatsApp gateway assignation type",
                    "type": "string"
                  },
                  "wa_integration_id": {
                    "description": "WhatsApp integration ID",
                    "type": "integer"
                  }
                },
                "required": [
                  "name",
                  "provider"
                ],
                "title": "CreateUpdateFollowUpChatRequest",
                "type": "object"
              }
            }
          },
          "description": "Follow up chat data",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundle_id": {
                          "description": "Bundle ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "change_status": {
                          "description": "Triggered after order status change to this status",
                          "type": "boolean"
                        },
                        "hours_after": {
                          "description": "Hours after which the follow-up chat is sent",
                          "type": "integer"
                        },
                        "id": {
                          "description": "Follow-up chat ID",
                          "type": "integer"
                        },
                        "image": {
                          "description": "Image URL for the follow-up chat",
                          "format": "uri",
                          "type": "string"
                        },
                        "is_default": {
                          "description": "Is this a default follow-up chat",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Name of the follow-up chat",
                          "type": "string"
                        },
                        "product_id": {
                          "description": "Product ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "provider": {
                          "description": "Provider of the follow-up chat",
                          "type": "string"
                        },
                        "store_id": {
                          "description": "Store ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "text_for_bank_transfer": {
                          "description": "Text for bank transfer payments",
                          "type": "string"
                        },
                        "text_for_cod": {
                          "description": "Text for cash on delivery payments",
                          "type": "string"
                        },
                        "text_for_epayment": {
                          "description": "Text for electronic payments",
                          "type": "string"
                        },
                        "trigger": {
                          "description": "Trigger for the follow-up chat",
                          "type": "string"
                        },
                        "wa_gateway_assignation_type": {
                          "description": "WhatsApp gateway assignation type",
                          "type": "string"
                        },
                        "wa_integration": {
                          "properties": {
                            "id": {
                              "description": "Whatsapp Integration ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "phone_number": {
                              "description": "Phone Number",
                              "type": "string"
                            },
                            "provider": {
                              "description": "Provider",
                              "type": "string"
                            }
                          },
                          "title": "WhatsappIntegration",
                          "type": "object"
                        }
                      },
                      "title": "ManagingFollowUpChat",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Follow up chat template created successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "Create a follow up chat template",
        "tags": [
          "Stores"
        ]
      },
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of follow up chats for a store.",
        "operationId": "ScalevApiWeb.FollowUpChatController.index_fucs",
        "parameters": [
          {
            "description": "Store ID",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "bundle_id": {
                                "description": "Bundle ID associated with the follow-up chat",
                                "type": "integer"
                              },
                              "change_status": {
                                "description": "Triggered after order status change to this status",
                                "type": "boolean"
                              },
                              "hours_after": {
                                "description": "Hours after which the follow-up chat is sent",
                                "type": "integer"
                              },
                              "id": {
                                "description": "Follow-up chat ID",
                                "type": "integer"
                              },
                              "image": {
                                "description": "Image URL for the follow-up chat",
                                "format": "uri",
                                "type": "string"
                              },
                              "is_default": {
                                "description": "Is this a default follow-up chat",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name of the follow-up chat",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "Product ID associated with the follow-up chat",
                                "type": "integer"
                              },
                              "provider": {
                                "description": "Provider of the follow-up chat",
                                "type": "string"
                              },
                              "store_id": {
                                "description": "Store ID associated with the follow-up chat",
                                "type": "integer"
                              },
                              "text_for_bank_transfer": {
                                "description": "Text for bank transfer payments",
                                "type": "string"
                              },
                              "text_for_cod": {
                                "description": "Text for cash on delivery payments",
                                "type": "string"
                              },
                              "text_for_epayment": {
                                "description": "Text for electronic payments",
                                "type": "string"
                              },
                              "trigger": {
                                "description": "Trigger for the follow-up chat",
                                "type": "string"
                              },
                              "wa_gateway_assignation_type": {
                                "description": "WhatsApp gateway assignation type",
                                "type": "string"
                              },
                              "wa_integration": {
                                "properties": {
                                  "id": {
                                    "description": "Whatsapp Integration ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name",
                                    "type": "string"
                                  },
                                  "phone_number": {
                                    "description": "Phone Number",
                                    "type": "string"
                                  },
                                  "provider": {
                                    "description": "Provider",
                                    "type": "string"
                                  }
                                },
                                "title": "WhatsappIntegration",
                                "type": "object"
                              }
                            },
                            "title": "ManagingFollowUpChat",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Paginated list of follow up chats"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_store"
            ]
          }
        ],
        "summary": "List follow up chats",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/follow-up-chats/{id}": {
      "get": {
        "callbacks": {},
        "description": "Retrieves a follow up chat template by its ID.",
        "operationId": "ScalevApiWeb.FollowUpChatController.show_fuc",
        "parameters": [
          {
            "description": "Store ID",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Follow up chat ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundle_id": {
                          "description": "Bundle ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "change_status": {
                          "description": "Triggered after order status change to this status",
                          "type": "boolean"
                        },
                        "hours_after": {
                          "description": "Hours after which the follow-up chat is sent",
                          "type": "integer"
                        },
                        "id": {
                          "description": "Follow-up chat ID",
                          "type": "integer"
                        },
                        "image": {
                          "description": "Image URL for the follow-up chat",
                          "format": "uri",
                          "type": "string"
                        },
                        "is_default": {
                          "description": "Is this a default follow-up chat",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Name of the follow-up chat",
                          "type": "string"
                        },
                        "product_id": {
                          "description": "Product ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "provider": {
                          "description": "Provider of the follow-up chat",
                          "type": "string"
                        },
                        "store_id": {
                          "description": "Store ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "text_for_bank_transfer": {
                          "description": "Text for bank transfer payments",
                          "type": "string"
                        },
                        "text_for_cod": {
                          "description": "Text for cash on delivery payments",
                          "type": "string"
                        },
                        "text_for_epayment": {
                          "description": "Text for electronic payments",
                          "type": "string"
                        },
                        "trigger": {
                          "description": "Trigger for the follow-up chat",
                          "type": "string"
                        },
                        "wa_gateway_assignation_type": {
                          "description": "WhatsApp gateway assignation type",
                          "type": "string"
                        },
                        "wa_integration": {
                          "properties": {
                            "id": {
                              "description": "Whatsapp Integration ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "phone_number": {
                              "description": "Phone Number",
                              "type": "string"
                            },
                            "provider": {
                              "description": "Provider",
                              "type": "string"
                            }
                          },
                          "title": "WhatsappIntegration",
                          "type": "object"
                        }
                      },
                      "title": "ManagingFollowUpChat",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Follow up chat template details"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_store"
            ]
          }
        ],
        "summary": "Show a follow up chat template",
        "tags": [
          "Stores"
        ]
      },
      "patch": {
        "callbacks": {},
        "description": "Updates a follow up chat template.",
        "operationId": "ScalevApiWeb.FollowUpChatController.update_fuc",
        "parameters": [
          {
            "description": "Store ID",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Follow up chat ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "change_status": {
                    "description": "Triggered after order status change to this status",
                    "type": "boolean"
                  },
                  "hours_after": {
                    "description": "Hours after which the follow up chat is triggered",
                    "type": "integer"
                  },
                  "image": {
                    "description": "Image URL for the follow up chat",
                    "format": "uri",
                    "type": "string"
                  },
                  "is_default": {
                    "description": "Is this a default follow up chat?",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Name of the follow up chat",
                    "type": "string"
                  },
                  "provider": {
                    "description": "Provider of the follow up chat",
                    "type": "string"
                  },
                  "text_for_bank_transfer": {
                    "description": "Text for bank transfer",
                    "type": "string"
                  },
                  "text_for_cod": {
                    "description": "Text for cash on delivery",
                    "type": "string"
                  },
                  "text_for_epayment": {
                    "description": "Text for e-payments",
                    "type": "string"
                  },
                  "trigger": {
                    "description": "Trigger condition for the follow up chat",
                    "type": "string"
                  },
                  "wa_gateway_assignation_type": {
                    "description": "WhatsApp gateway assignation type",
                    "type": "string"
                  },
                  "wa_integration_id": {
                    "description": "WhatsApp integration ID",
                    "type": "integer"
                  }
                },
                "required": [
                  "name",
                  "provider"
                ],
                "title": "CreateUpdateFollowUpChatRequest",
                "type": "object"
              }
            }
          },
          "description": "Follow up chat data to update",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "bundle_id": {
                          "description": "Bundle ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "change_status": {
                          "description": "Triggered after order status change to this status",
                          "type": "boolean"
                        },
                        "hours_after": {
                          "description": "Hours after which the follow-up chat is sent",
                          "type": "integer"
                        },
                        "id": {
                          "description": "Follow-up chat ID",
                          "type": "integer"
                        },
                        "image": {
                          "description": "Image URL for the follow-up chat",
                          "format": "uri",
                          "type": "string"
                        },
                        "is_default": {
                          "description": "Is this a default follow-up chat",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Name of the follow-up chat",
                          "type": "string"
                        },
                        "product_id": {
                          "description": "Product ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "provider": {
                          "description": "Provider of the follow-up chat",
                          "type": "string"
                        },
                        "store_id": {
                          "description": "Store ID associated with the follow-up chat",
                          "type": "integer"
                        },
                        "text_for_bank_transfer": {
                          "description": "Text for bank transfer payments",
                          "type": "string"
                        },
                        "text_for_cod": {
                          "description": "Text for cash on delivery payments",
                          "type": "string"
                        },
                        "text_for_epayment": {
                          "description": "Text for electronic payments",
                          "type": "string"
                        },
                        "trigger": {
                          "description": "Trigger for the follow-up chat",
                          "type": "string"
                        },
                        "wa_gateway_assignation_type": {
                          "description": "WhatsApp gateway assignation type",
                          "type": "string"
                        },
                        "wa_integration": {
                          "properties": {
                            "id": {
                              "description": "Whatsapp Integration ID",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name",
                              "type": "string"
                            },
                            "phone_number": {
                              "description": "Phone Number",
                              "type": "string"
                            },
                            "provider": {
                              "description": "Provider",
                              "type": "string"
                            }
                          },
                          "title": "WhatsappIntegration",
                          "type": "object"
                        }
                      },
                      "title": "ManagingFollowUpChat",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Follow up chat template updated successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "Update a follow up chat template",
        "tags": [
          "Stores"
        ]
      },
      "delete": {
        "callbacks": {},
        "description": "Deletes a follow up chat template.",
        "operationId": "ScalevApiWeb.FollowUpChatController.delete_fuc",
        "parameters": [
          {
            "description": "Store ID",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Follow up chat ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Follow up chat template deleted successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "Delete a follow up chat template",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/pages": {
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of pages associated with a specific store. The data is sorted by id in descending order and cannot be changed. Uses cursor-based pagination with default page size of 25 and maximum of 25.",
        "operationId": "ScalevApiWeb.StoreController.index_page",
        "parameters": [
          {
            "description": "ID of the store whose pages are to be listed",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          },
          {
            "description": "Last page ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term to filter pages by title or content (case-insensitive, partial match)",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter pages by specific tags",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "example": "announcement,update",
              "type": "string"
            }
          },
          {
            "description": "Filter pages that are pinned (true/false)",
            "in": "query",
            "name": "is_pinned",
            "required": false,
            "schema": {
              "example": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "id": {
                                "description": "Page ID",
                                "type": "integer"
                              },
                              "is_published": {
                                "description": "Is the page published?",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Name of the page",
                                "type": "string"
                              },
                              "published_at": {
                                "description": "Publication date of the page",
                                "format": "date-time",
                                "type": "string"
                              },
                              "slug": {
                                "description": "Slug for the page URL",
                                "type": "string"
                              },
                              "store_id": {
                                "description": "ID of the store the page belongs to",
                                "type": "integer"
                              },
                              "unique_id": {
                                "description": "Unique identifier for the page",
                                "type": "string"
                              }
                            },
                            "title": "PageSimple",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Pages list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "List Pages in a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/payment-accounts": {
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of payment accounts associated with a specific store. The data is sorted by id in descending order and cannot be changed. Uses cursor-based pagination with default page size of 25 and maximum of 25.",
        "operationId": "ScalevApiWeb.StoreController.index_payment_account",
        "parameters": [
          {
            "description": "ID of the store whose payment accounts are to be listed",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          },
          {
            "description": "Last payment account ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Filter by payment method",
            "in": "query",
            "name": "method",
            "required": false,
            "schema": {
              "example": "card",
              "type": "string"
            }
          },
          {
            "description": "Search by payment account name or number",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "example": "My PayPal",
              "type": "string"
            }
          },
          {
            "description": "Primary key of the order to validate if the payment accounts are applicable for that order",
            "in": "query",
            "name": "order_id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "account_holder": {
                                "description": "Account Holder Name",
                                "type": "string"
                              },
                              "account_number": {
                                "description": "Account Number",
                                "type": "string"
                              },
                              "financial_entity": {
                                "properties": {
                                  "code": {
                                    "description": "Code of the financial entity",
                                    "type": "string"
                                  },
                                  "duitku_code": {
                                    "description": "Duitku code for the financial entity",
                                    "type": "string"
                                  },
                                  "entity_type": {
                                    "description": "Type of the financial entity",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Financial Entity ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the financial entity",
                                    "type": "string"
                                  },
                                  "platform": {
                                    "description": "Platform associated with the financial entity",
                                    "type": "string"
                                  },
                                  "xendit_code": {
                                    "description": "Xendit code for the financial entity",
                                    "type": "string"
                                  }
                                },
                                "title": "FinancialEntity",
                                "type": "object"
                              },
                              "id": {
                                "description": "Payment Account ID",
                                "type": "integer"
                              },
                              "is_owned_by_store": {
                                "description": "Is Owned By Store",
                                "type": "boolean"
                              },
                              "method": {
                                "description": "Payment Method",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Unique Identifier",
                                "type": "string"
                              }
                            },
                            "title": "PaymentAccountList",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Payment Accounts list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_store"
            ]
          }
        ],
        "summary": "List Payment Accounts in a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/payment-methods": {
      "post": {
        "callbacks": {},
        "description": "Associates one or more payment methods with a specific store.",
        "operationId": "ScalevApiWeb.StoreController.add_payment_methods",
        "parameters": [
          {
            "description": "ID of the store to which payment methods will be added",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "payment_account_ids": {
                    "description": "List of payment account IDs to add to the store",
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "payment_methods": {
                    "description": "Payment methods to add to the store",
                    "items": {
                      "description": "Order payment method",
                      "enum": [
                        "gopay",
                        "va",
                        "qris",
                        "card",
                        "invoice",
                        "alfamart",
                        "ovo",
                        "dana",
                        "shopeepay",
                        "linkaja",
                        "no_payment",
                        "bank_transfer",
                        "marketplace",
                        "cod"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "sub_payment_methods": {
                    "description": "Xendit VA bank codes to add to the store",
                    "items": {
                      "description": "Xendit VA bank code",
                      "enum": [
                        "BCA",
                        "BNI",
                        "BRI",
                        "MANDIRI",
                        "PERMATA",
                        "BSI",
                        "BJB",
                        "CIMB",
                        "SAHABAT_SAMPOERNA",
                        "ARTAJASA"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "payment_account_ids"
                ],
                "title": "AddStorePayments",
                "type": "object"
              }
            }
          },
          "description": "Payment Methods data to add",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Payment Methods added successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "Add Payment Methods to a Store",
        "tags": [
          "Stores"
        ]
      },
      "get": {
        "callbacks": {},
        "description": "Retrieves a list of payment methods associated with a specific store.",
        "operationId": "ScalevApiWeb.StoreController.index_payment_method",
        "parameters": [
          {
            "description": "ID of the store whose payment methods are to be listed",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Primary key of the order to validate if the payment methods are applicable for that order",
            "in": "query",
            "name": "order_id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "items": {
                        "description": "Order payment method",
                        "enum": [
                          "gopay",
                          "va",
                          "qris",
                          "card",
                          "invoice",
                          "alfamart",
                          "ovo",
                          "dana",
                          "shopeepay",
                          "linkaja",
                          "no_payment",
                          "bank_transfer",
                          "marketplace",
                          "cod"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Payment Methods list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_store"
            ]
          }
        ],
        "summary": "List Payment Methods in a Store",
        "tags": [
          "Stores"
        ]
      },
      "delete": {
        "callbacks": {},
        "description": "Dissociates a specific payment method from a store.",
        "operationId": "ScalevApiWeb.StoreController.remove_payment_method",
        "parameters": [
          {
            "description": "ID of the store from which the payment method will be removed",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "payment_account_id": {
                    "description": "Payment account ID to remove from the store",
                    "type": "integer"
                  },
                  "payment_method": {
                    "description": "Order payment method",
                    "enum": [
                      "gopay",
                      "va",
                      "qris",
                      "card",
                      "invoice",
                      "alfamart",
                      "ovo",
                      "dana",
                      "shopeepay",
                      "linkaja",
                      "no_payment",
                      "bank_transfer",
                      "marketplace",
                      "cod"
                    ],
                    "type": "string"
                  },
                  "sub_payment_method": {
                    "description": "Xendit VA bank code",
                    "enum": [
                      "BCA",
                      "BNI",
                      "BRI",
                      "MANDIRI",
                      "PERMATA",
                      "BSI",
                      "BJB",
                      "CIMB",
                      "SAHABAT_SAMPOERNA",
                      "ARTAJASA"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Payment Method data to remove",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Payment Method removed successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "Remove a Payment Method from a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/products": {
      "post": {
        "callbacks": {},
        "description": "Associates one or more products with a specific store.",
        "operationId": "ScalevApiWeb.StoreController.add_products",
        "parameters": [
          {
            "description": "ID of the store to which products will be added",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "product_ids": {
                    "description": "List of Product IDs to associate with the store",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "product_ids"
                ],
                "type": "object"
              }
            }
          },
          "description": "Products data to add",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Products added successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "Add Products to a Store",
        "tags": [
          "Stores"
        ]
      },
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of products available in a specific store. The data is sorted by id in descending order and cannot be changed. Uses cursor-based pagination with default page size of 25 and maximum of 25.",
        "operationId": "ScalevApiWeb.StoreController.index_product",
        "parameters": [
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          },
          {
            "description": "Last order ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term to filter products by name (case-insensitive, partial match)",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter products by inventory tracking status (true or false)",
            "in": "query",
            "name": "is_inventory",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter products by product sharing status (true or false)",
            "in": "query",
            "name": "is_product_sharing",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter products associated with a specific warehouse ID",
            "in": "query",
            "name": "warehouse_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Type of quantity to filter by. Options are 'available_qty' (only products with variants that have available quantity > 0)",
            "in": "query",
            "name": "qty_type",
            "required": false,
            "schema": {
              "enum": [
                "available_qty"
              ],
              "type": "string"
            }
          },
          {
            "description": "Show variants in products where is_checked is true or false",
            "in": "query",
            "name": "is_checked",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter products by ownership. 'true' returns products owned by the business, 'false' returns shared products",
            "in": "query",
            "name": "is_owned",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filter products by item type (physical, digital, course)",
            "in": "query",
            "name": "item_type",
            "required": false,
            "schema": {
              "enum": [
                "physical",
                "digital",
                "course"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter products associated with a specific label name",
            "in": "query",
            "name": "label",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the store whose products are to be listed",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Primary key of the order to validate if the products are applicable for that order",
            "in": "query",
            "name": "order_id",
            "required": false,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "display": {
                                "description": "Display name of the product",
                                "type": "string"
                              },
                              "id": {
                                "description": "Product primary key",
                                "type": "integer"
                              },
                              "images": {
                                "description": "List of image URLs associated with the product",
                                "items": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "item_type": {
                                "description": "Type of the product item",
                                "enum": [
                                  "physical",
                                  "digital",
                                  "course"
                                ],
                                "title": "ItemType",
                                "type": "string"
                              },
                              "item_type_name": {
                                "description": "Human-readable name of the product item type",
                                "type": "string"
                              },
                              "labels": {
                                "description": "List of labels associated with the product",
                                "items": {
                                  "properties": {
                                    "name": {
                                      "description": "Label name",
                                      "type": "string"
                                    }
                                  },
                                  "title": "ItemLabel",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "name": {
                                "description": "Product name",
                                "type": "string"
                              },
                              "option1_name": {
                                "description": "Name of first option value",
                                "type": "string"
                              },
                              "option2_name": {
                                "description": "Name of 2nd option value",
                                "type": "string"
                              },
                              "option3_name": {
                                "description": "Name of 3rd option value",
                                "type": "string"
                              },
                              "public_name": {
                                "description": "Product Public name",
                                "type": "string"
                              },
                              "uuid": {
                                "description": "Product UUID",
                                "type": "string"
                              },
                              "variant_count": {
                                "description": "Count of variants associated with the product",
                                "type": "integer"
                              },
                              "variants": {
                                "description": "List of variants associated with the product",
                                "items": {
                                  "properties": {
                                    "available_qty": {
                                      "description": "Available quantity of the variant in inventory",
                                      "type": "integer"
                                    },
                                    "id": {
                                      "description": "Variant primary key",
                                      "type": "integer"
                                    },
                                    "images": {
                                      "description": "List of image URLs associated with the variant",
                                      "items": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "is_checked": {
                                      "description": "Mark variant as sellable",
                                      "type": "boolean"
                                    },
                                    "is_editable": {
                                      "description": "Indicates if the variant is editable",
                                      "type": "boolean"
                                    },
                                    "item_type": {
                                      "description": "Type of the product item",
                                      "enum": [
                                        "physical",
                                        "digital",
                                        "course"
                                      ],
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "additionalProperties": true,
                                      "description": "Additional metadata associated with the variant",
                                      "type": "object"
                                    },
                                    "name": {
                                      "description": "Full name of the variant",
                                      "type": "string"
                                    },
                                    "option1_color": {
                                      "description": "Color associated with the first product option",
                                      "type": "string"
                                    },
                                    "option1_icon_url": {
                                      "description": "Icon URL for the first product option",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "option1_value": {
                                      "description": "Value of the first product option",
                                      "type": "string"
                                    },
                                    "option2_color": {
                                      "description": "Color associated with the second product option",
                                      "type": "string"
                                    },
                                    "option2_icon_url": {
                                      "description": "Icon URL for the second product option",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "option2_value": {
                                      "description": "Value of the second product option",
                                      "type": "string"
                                    },
                                    "option3_color": {
                                      "description": "Color associated with the third product option",
                                      "type": "string"
                                    },
                                    "option3_icon_url": {
                                      "description": "Icon URL for the third product option",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "option3_value": {
                                      "description": "Value of the third product option",
                                      "type": "string"
                                    },
                                    "price": {
                                      "description": "Price of the variant",
                                      "type": "number"
                                    },
                                    "product_name": {
                                      "description": "Name of the associated product",
                                      "type": "string"
                                    },
                                    "reseller_price": {
                                      "description": "Reseller price of the variant",
                                      "type": "number"
                                    },
                                    "unique_id": {
                                      "description": "Variant unique identifier",
                                      "type": "string"
                                    },
                                    "uuid": {
                                      "description": "Variant UUID",
                                      "type": "string"
                                    },
                                    "weight": {
                                      "description": "Weight of the variant in grams",
                                      "type": "integer"
                                    }
                                  },
                                  "title": "ForStoreListVariant",
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "title": "ForStoreProductList",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Products list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_store"
            ]
          }
        ],
        "summary": "List Products in a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/products/{id}": {
      "delete": {
        "callbacks": {},
        "description": "Dissociates a specific Product from a store.",
        "operationId": "ScalevApiWeb.StoreController.remove_product",
        "parameters": [
          {
            "description": "ID of the store from which the Product will be removed",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "ID of the Product to remove",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Product removed successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "Remove a Product from a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/products/{id}/relations": {
      "get": {
        "callbacks": {},
        "description": "Retrieves detailed relation of a specific Product associated with a store.",
        "operationId": "ScalevApiWeb.StoreController.show_product_relations",
        "parameters": [
          {
            "description": "ID of the store containing the Product",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "ID of the Product to view",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Product ID",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Product Name",
                      "type": "string"
                    },
                    "pages": {
                      "properties": {
                        "all": {
                          "items": {
                            "properties": {
                              "business": {
                                "properties": {
                                  "account_holder": {
                                    "description": "Name of the account holder",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "Email address of the business",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Business ID",
                                    "type": "integer"
                                  },
                                  "is_banned": {
                                    "description": "Is the business banned?",
                                    "type": "boolean"
                                  },
                                  "logo": {
                                    "description": "URL to the business logo",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the business",
                                    "type": "string"
                                  },
                                  "username": {
                                    "description": "Username of the business",
                                    "type": "string"
                                  }
                                },
                                "title": "BusinessSimple",
                                "type": "object"
                              },
                              "id": {
                                "description": "Page ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the page",
                                "type": "string"
                              },
                              "slug": {
                                "description": "Slug for the page URL",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Unique identifier for the page",
                                "type": "string"
                              }
                            },
                            "title": "PageRelation",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "will_unpublish": {
                          "items": {
                            "properties": {
                              "business": {
                                "properties": {
                                  "account_holder": {
                                    "description": "Name of the account holder",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "Email address of the business",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Business ID",
                                    "type": "integer"
                                  },
                                  "is_banned": {
                                    "description": "Is the business banned?",
                                    "type": "boolean"
                                  },
                                  "logo": {
                                    "description": "URL to the business logo",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "unique_id": {
                                    "description": "Unique identifier for the business",
                                    "type": "string"
                                  },
                                  "username": {
                                    "description": "Username of the business",
                                    "type": "string"
                                  }
                                },
                                "title": "BusinessSimple",
                                "type": "object"
                              },
                              "id": {
                                "description": "Page ID",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the page",
                                "type": "string"
                              },
                              "slug": {
                                "description": "Slug for the page URL",
                                "type": "string"
                              },
                              "unique_id": {
                                "description": "Unique identifier for the page",
                                "type": "string"
                              }
                            },
                            "title": "PageRelation",
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "title": "ProductForStoreRelation",
                  "type": "object"
                }
              }
            },
            "description": "Product relations"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "View Product relations in a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/sales-people": {
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of sales persons associated with a specific store. The data is sorted by id in descending order and cannot be changed. Uses cursor-based pagination with default page size of 25 and maximum of 25.",
        "operationId": "ScalevApiWeb.StoreController.index_sales_person",
        "parameters": [
          {
            "description": "ID of the store whose sales persons are to be listed",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          },
          {
            "description": "Last sales person ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "description": "Store Sales Person Simple Schema",
                            "properties": {
                              "business_user": {
                                "properties": {
                                  "business_phone": {
                                    "description": "The business phone number",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "The business user ID",
                                    "type": "integer"
                                  },
                                  "role": {
                                    "properties": {
                                      "id": {
                                        "description": "The role ID",
                                        "type": "integer"
                                      },
                                      "name": {
                                        "description": "The name of the role",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name"
                                    ],
                                    "title": "SimpleRole",
                                    "type": "object"
                                  },
                                  "user": {
                                    "properties": {
                                      "aff_code": {
                                        "description": "Affiliate code of the user",
                                        "type": "string"
                                      },
                                      "avatar": {
                                        "description": "URL to user avatar",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "email": {
                                        "description": "User email",
                                        "format": "email",
                                        "type": "string"
                                      },
                                      "fullname": {
                                        "description": "User full name",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "User ID",
                                        "type": "integer"
                                      },
                                      "phone": {
                                        "description": "User phone number",
                                        "type": "string"
                                      }
                                    },
                                    "title": "UserSimple",
                                    "type": "object"
                                  }
                                },
                                "required": [
                                  "id",
                                  "user",
                                  "role",
                                  "business_phone"
                                ],
                                "title": "BusinessUser",
                                "type": "object"
                              },
                              "id": {
                                "description": "Store Sales Person ID",
                                "type": "integer"
                              },
                              "percentage": {
                                "description": "Percentage of sales person",
                                "type": "integer"
                              },
                              "weekly_schedule": {
                                "description": "Weekly Schedule Schema",
                                "properties": {
                                  "friday": {
                                    "description": "Day Schedule Schema",
                                    "properties": {
                                      "end_time": {
                                        "description": "End time",
                                        "format": "time",
                                        "type": "string"
                                      },
                                      "is_active": {
                                        "description": "Is active",
                                        "type": "boolean"
                                      },
                                      "start_time": {
                                        "description": "Start time",
                                        "format": "time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "is_active",
                                      "start_time",
                                      "end_time"
                                    ],
                                    "title": "DaySchedule",
                                    "type": "object"
                                  },
                                  "monday": {
                                    "description": "Day Schedule Schema",
                                    "properties": {
                                      "end_time": {
                                        "description": "End time",
                                        "format": "time",
                                        "type": "string"
                                      },
                                      "is_active": {
                                        "description": "Is active",
                                        "type": "boolean"
                                      },
                                      "start_time": {
                                        "description": "Start time",
                                        "format": "time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "is_active",
                                      "start_time",
                                      "end_time"
                                    ],
                                    "title": "DaySchedule",
                                    "type": "object"
                                  },
                                  "saturday": {
                                    "description": "Day Schedule Schema",
                                    "properties": {
                                      "end_time": {
                                        "description": "End time",
                                        "format": "time",
                                        "type": "string"
                                      },
                                      "is_active": {
                                        "description": "Is active",
                                        "type": "boolean"
                                      },
                                      "start_time": {
                                        "description": "Start time",
                                        "format": "time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "is_active",
                                      "start_time",
                                      "end_time"
                                    ],
                                    "title": "DaySchedule",
                                    "type": "object"
                                  },
                                  "sunday": {
                                    "description": "Day Schedule Schema",
                                    "properties": {
                                      "end_time": {
                                        "description": "End time",
                                        "format": "time",
                                        "type": "string"
                                      },
                                      "is_active": {
                                        "description": "Is active",
                                        "type": "boolean"
                                      },
                                      "start_time": {
                                        "description": "Start time",
                                        "format": "time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "is_active",
                                      "start_time",
                                      "end_time"
                                    ],
                                    "title": "DaySchedule",
                                    "type": "object"
                                  },
                                  "thursday": {
                                    "description": "Day Schedule Schema",
                                    "properties": {
                                      "end_time": {
                                        "description": "End time",
                                        "format": "time",
                                        "type": "string"
                                      },
                                      "is_active": {
                                        "description": "Is active",
                                        "type": "boolean"
                                      },
                                      "start_time": {
                                        "description": "Start time",
                                        "format": "time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "is_active",
                                      "start_time",
                                      "end_time"
                                    ],
                                    "title": "DaySchedule",
                                    "type": "object"
                                  },
                                  "tuesday": {
                                    "description": "Day Schedule Schema",
                                    "properties": {
                                      "end_time": {
                                        "description": "End time",
                                        "format": "time",
                                        "type": "string"
                                      },
                                      "is_active": {
                                        "description": "Is active",
                                        "type": "boolean"
                                      },
                                      "start_time": {
                                        "description": "Start time",
                                        "format": "time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "is_active",
                                      "start_time",
                                      "end_time"
                                    ],
                                    "title": "DaySchedule",
                                    "type": "object"
                                  },
                                  "wednesday": {
                                    "description": "Day Schedule Schema",
                                    "properties": {
                                      "end_time": {
                                        "description": "End time",
                                        "format": "time",
                                        "type": "string"
                                      },
                                      "is_active": {
                                        "description": "Is active",
                                        "type": "boolean"
                                      },
                                      "start_time": {
                                        "description": "Start time",
                                        "format": "time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "is_active",
                                      "start_time",
                                      "end_time"
                                    ],
                                    "title": "DaySchedule",
                                    "type": "object"
                                  }
                                },
                                "title": "WeeklySchedule",
                                "type": "object"
                              }
                            },
                            "title": "StoreSalesPersonSimple",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Sales People list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_store"
            ]
          }
        ],
        "summary": "List Sales Persons in a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/store-admins": {
      "post": {
        "callbacks": {},
        "description": "Associates one or more business users as store admins to a specific store.",
        "operationId": "ScalevApiWeb.StoreController.add_store_admins",
        "parameters": [
          {
            "description": "ID of the store to which store admins will be added",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "store_admin_ids": {
                    "description": "List of Business User IDs to associate as store admins with the store",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "store_admin_ids"
                ],
                "type": "object"
              }
            }
          },
          "description": "Store Admins data to add",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Store Admins added successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "Add Store Admins to a Store",
        "tags": [
          "Stores"
        ]
      },
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of store admins associated with a specific store. The data is sorted by id in descending order and cannot be changed. Uses cursor-based pagination with default page size of 25 and maximum of 25.",
        "operationId": "ScalevApiWeb.StoreController.index_store_admin",
        "parameters": [
          {
            "description": "ID of the store whose store admins are to be listed",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          },
          {
            "description": "Last store admin ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "business_phone": {
                                "description": "The business phone number",
                                "type": "string"
                              },
                              "id": {
                                "description": "The business user ID",
                                "type": "integer"
                              },
                              "role": {
                                "properties": {
                                  "id": {
                                    "description": "The role ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "The name of the role",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ],
                                "title": "SimpleRole",
                                "type": "object"
                              },
                              "user": {
                                "properties": {
                                  "aff_code": {
                                    "description": "Affiliate code of the user",
                                    "type": "string"
                                  },
                                  "avatar": {
                                    "description": "URL to user avatar",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "User email",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "fullname": {
                                    "description": "User full name",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "User ID",
                                    "type": "integer"
                                  },
                                  "phone": {
                                    "description": "User phone number",
                                    "type": "string"
                                  }
                                },
                                "title": "UserSimple",
                                "type": "object"
                              }
                            },
                            "required": [
                              "id",
                              "user",
                              "role",
                              "business_phone"
                            ],
                            "title": "BusinessUser",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Store Admins list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_store"
            ]
          }
        ],
        "summary": "List Store Admins in a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/store-admins/{bu_id}": {
      "delete": {
        "callbacks": {},
        "description": "Dissociates a specific business user as a store admin from a store.",
        "operationId": "ScalevApiWeb.StoreController.remove_store_admin",
        "parameters": [
          {
            "description": "ID of the store from which the store admin will be removed",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "ID of the Business User to remove as store admin",
            "in": "path",
            "name": "bu_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Store Admin removed successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "Remove a Store Admin from a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/store-advertisers": {
      "post": {
        "callbacks": {},
        "description": "Associates one or more business users as store advertisers to a specific store.",
        "operationId": "ScalevApiWeb.StoreController.add_store_advertisers",
        "parameters": [
          {
            "description": "ID of the store to which store advertisers will be added",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "advertiser_ids": {
                    "description": "List of Business User IDs to associate as store advertisers with the store",
                    "example": [
                      1,
                      2,
                      3
                    ],
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "advertiser_ids"
                ],
                "type": "object"
              }
            }
          },
          "description": "Store Advertisers data to add",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Store Advertisers added successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "Add Store Advertisers to a Store",
        "tags": [
          "Stores"
        ]
      },
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of store advertisers associated with a specific store. The data is sorted by id in descending order and cannot be changed. Uses cursor-based pagination with default page size of 25 and maximum of 25.",
        "operationId": "ScalevApiWeb.StoreController.index_store_advertiser",
        "parameters": [
          {
            "description": "ID of the store whose store advertisers are to be listed",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          },
          {
            "description": "Last store advertiser ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "business_phone": {
                                "description": "The business phone number",
                                "type": "string"
                              },
                              "id": {
                                "description": "The business user ID",
                                "type": "integer"
                              },
                              "role": {
                                "properties": {
                                  "id": {
                                    "description": "The role ID",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "The name of the role",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ],
                                "title": "SimpleRole",
                                "type": "object"
                              },
                              "user": {
                                "properties": {
                                  "aff_code": {
                                    "description": "Affiliate code of the user",
                                    "type": "string"
                                  },
                                  "avatar": {
                                    "description": "URL to user avatar",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "User email",
                                    "format": "email",
                                    "type": "string"
                                  },
                                  "fullname": {
                                    "description": "User full name",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "User ID",
                                    "type": "integer"
                                  },
                                  "phone": {
                                    "description": "User phone number",
                                    "type": "string"
                                  }
                                },
                                "title": "UserSimple",
                                "type": "object"
                              }
                            },
                            "required": [
                              "id",
                              "user",
                              "role",
                              "business_phone"
                            ],
                            "title": "BusinessUser",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Store Advertisers list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_store"
            ]
          }
        ],
        "summary": "List Store Advertisers in a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/stores/{store_id}/store-advertisers/{bu_id}": {
      "delete": {
        "callbacks": {},
        "description": "Dissociates a specific business user as a store advertiser from a store.",
        "operationId": "ScalevApiWeb.StoreController.remove_store_advertiser",
        "parameters": [
          {
            "description": "ID of the store from which the store advertiser will be removed",
            "in": "path",
            "name": "store_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "ID of the Business User to remove as store advertiser",
            "in": "path",
            "name": "bu_id",
            "required": true,
            "schema": {
              "example": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "title": "BlankSuccessResponse",
                  "type": "object"
                }
              }
            },
            "description": "Store Advertiser removed successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_store"
            ]
          }
        ],
        "summary": "Remove a Store Advertiser from a Store",
        "tags": [
          "Stores"
        ]
      }
    },
    "/v2/variants/{id}": {
      "get": {
        "callbacks": {},
        "description": "Shows a single product variant by ID.",
        "operationId": "ScalevApiWeb.ProductController.show_variant",
        "parameters": [
          {
            "description": "Variant ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "cogs": {
                          "description": "Cost of Goods Sold",
                          "type": "number"
                        },
                        "cogs_bt": {
                          "description": "Cost of Goods Sold before tax",
                          "type": "number"
                        },
                        "created_at": {
                          "description": "Timestamp when the variant was created",
                          "format": "date-time",
                          "type": "string"
                        },
                        "digital_product_files": {
                          "description": "List of digital product files associated with the variant",
                          "items": {
                            "properties": {
                              "content_type": {
                                "description": "MIME type of the digital product file",
                                "type": "string"
                              },
                              "id": {
                                "description": "Digital product file primary key",
                                "type": "integer"
                              },
                              "name": {
                                "description": "File name of the digital product file",
                                "type": "string"
                              },
                              "size_in_bytes": {
                                "description": "Size of the digital product file in bytes",
                                "type": "integer"
                              },
                              "url": {
                                "description": "URL to access the digital product file",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "title": "DigitalProductFile",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "display": {
                          "description": "Display name for the variant",
                          "type": "string"
                        },
                        "fullname": {
                          "description": "Full name of the variant",
                          "type": "string"
                        },
                        "id": {
                          "description": "Variant primary key",
                          "type": "integer"
                        },
                        "images": {
                          "description": "List of image URLs associated with the variant",
                          "items": {
                            "format": "uri",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "is_checked": {
                          "description": "Mark variant as sellable",
                          "type": "boolean"
                        },
                        "is_editable": {
                          "description": "Indicates if the variant is editable",
                          "type": "boolean"
                        },
                        "item_type": {
                          "description": "Type of the product item",
                          "enum": [
                            "physical",
                            "digital",
                            "course"
                          ],
                          "type": "string"
                        },
                        "last_updated_at": {
                          "description": "Timestamp when the variant was last updated",
                          "format": "date-time",
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Additional metadata associated with the variant",
                          "type": "object"
                        },
                        "name": {
                          "description": "Full name of the variant",
                          "type": "string"
                        },
                        "option1_value": {
                          "description": "Value of the first product option",
                          "type": "string"
                        },
                        "option2_value": {
                          "description": "Value of the second product option",
                          "type": "string"
                        },
                        "option3_value": {
                          "description": "Value of the third product option",
                          "type": "string"
                        },
                        "price": {
                          "description": "Price of the variant",
                          "type": "number"
                        },
                        "price_bt": {
                          "description": "Price before tax",
                          "type": "number"
                        },
                        "product": {
                          "properties": {
                            "business": {
                              "properties": {
                                "account_holder": {
                                  "description": "Name of the account holder",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email address of the business",
                                  "format": "email",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Business ID",
                                  "type": "integer"
                                },
                                "is_banned": {
                                  "description": "Is the business banned?",
                                  "type": "boolean"
                                },
                                "logo": {
                                  "description": "URL to the business logo",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "unique_id": {
                                  "description": "Unique identifier for the business",
                                  "type": "string"
                                },
                                "username": {
                                  "description": "Username of the business",
                                  "type": "string"
                                }
                              },
                              "title": "BusinessSimple",
                              "type": "object"
                            },
                            "description": {
                              "description": "Description",
                              "type": "string"
                            },
                            "display": {
                              "description": "Product name for display",
                              "type": "string"
                            },
                            "id": {
                              "description": "Product ID",
                              "type": "integer"
                            },
                            "is_inventory": {
                              "description": "Is Inventory",
                              "type": "boolean"
                            },
                            "is_multiple": {
                              "description": "Is Multiple",
                              "type": "boolean"
                            },
                            "is_product_sharing": {
                              "description": "Is Product Sharing",
                              "type": "boolean"
                            },
                            "item_type": {
                              "description": "Type of the product item",
                              "enum": [
                                "physical",
                                "digital",
                                "course"
                              ],
                              "title": "ItemType",
                              "type": "string"
                            },
                            "item_type_name": {
                              "description": "Item Type Name",
                              "type": "string"
                            },
                            "name": {
                              "description": "Product Name",
                              "type": "string"
                            },
                            "option1_name": {
                              "description": "Option 1 Name",
                              "type": "string"
                            },
                            "option2_name": {
                              "description": "Option 2 Name",
                              "type": "string"
                            },
                            "option3_name": {
                              "description": "Option 3 Name",
                              "type": "string"
                            },
                            "uuid": {
                              "description": "Product UUID",
                              "type": "string"
                            }
                          },
                          "title": "Product",
                          "type": "object"
                        },
                        "product_name": {
                          "description": "Name of the associated product",
                          "type": "string"
                        },
                        "reseller_price": {
                          "description": "Reseller price of the variant",
                          "type": "number"
                        },
                        "reseller_price_bt": {
                          "description": "Reseller price before tax",
                          "type": "number"
                        },
                        "self_file_urls": {
                          "description": "List of self file URLs associated with the variant",
                          "items": {
                            "format": "uri",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "sku": {
                          "description": "Stock Keeping Unit",
                          "type": "string"
                        },
                        "unique_id": {
                          "description": "Variant unique identifier",
                          "type": "string"
                        },
                        "uuid": {
                          "description": "Variant UUID",
                          "type": "string"
                        },
                        "weight": {
                          "description": "Weight of the variant in grams",
                          "type": "integer"
                        }
                      },
                      "title": "Variant",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Product variant"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_product"
            ]
          }
        ],
        "summary": "Show a product variant",
        "tags": [
          "Products"
        ]
      }
    },
    "/v2/variants/{variant_id}/digital-product-files": {
      "post": {
        "callbacks": {},
        "description": "Creates a new digital product file.",
        "operationId": "ScalevApiWeb.ProductController.create_digital_product_file",
        "parameters": [
          {
            "description": "Variant ID",
            "in": "path",
            "name": "variant_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "format": "binary",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "File upload",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "content_type": {
                          "description": "MIME type of the digital product file",
                          "type": "string"
                        },
                        "id": {
                          "description": "Digital product file primary key",
                          "type": "integer"
                        },
                        "name": {
                          "description": "File name of the digital product file",
                          "type": "string"
                        },
                        "size_in_bytes": {
                          "description": "Size of the digital product file in bytes",
                          "type": "integer"
                        },
                        "url": {
                          "description": "URL to access the digital product file",
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "title": "DigitalProductFile",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Digital product file created successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_product"
            ]
          }
        ],
        "summary": "Create a digital product file",
        "tags": [
          "Products"
        ]
      },
      "get": {
        "callbacks": {},
        "description": "Retrieves a paginated list of digital product files for a variant.",
        "operationId": "ScalevApiWeb.ProductController.index_digital_product_files",
        "parameters": [
          {
            "description": "Variant ID",
            "in": "path",
            "name": "variant_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Last ID for cursor-based pagination",
            "in": "query",
            "name": "last_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of items per page (default: 25, max: 25)",
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "example": 25,
              "maximum": 25,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "has_next": {
                          "default": false,
                          "example": false,
                          "nullable": false,
                          "type": "boolean"
                        },
                        "last_id": {
                          "example": 99,
                          "nullable": true,
                          "type": "integer"
                        },
                        "page_size": {
                          "default": 25,
                          "example": 25,
                          "nullable": false,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "content_type": {
                                "description": "MIME type of the digital product file",
                                "type": "string"
                              },
                              "id": {
                                "description": "Digital product file primary key",
                                "type": "integer"
                              },
                              "name": {
                                "description": "File name of the digital product file",
                                "type": "string"
                              },
                              "size_in_bytes": {
                                "description": "Size of the digital product file in bytes",
                                "type": "integer"
                              },
                              "url": {
                                "description": "URL to access the digital product file",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "title": "DigitalProductFile",
                            "type": "object"
                          },
                          "nullable": false,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Paginated list of digital product files"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_product"
            ]
          }
        ],
        "summary": "List digital product files",
        "tags": [
          "Products"
        ]
      }
    },
    "/v2/variants/{variant_id}/digital-product-files/{id}": {
      "get": {
        "callbacks": {},
        "description": "Shows a single digital product file by ID.",
        "operationId": "ScalevApiWeb.ProductController.show_digital_product_file",
        "parameters": [
          {
            "description": "Variant ID",
            "in": "path",
            "name": "variant_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Digital Product File ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "content_type": {
                          "description": "MIME type of the digital product file",
                          "type": "string"
                        },
                        "id": {
                          "description": "Digital product file primary key",
                          "type": "integer"
                        },
                        "name": {
                          "description": "File name of the digital product file",
                          "type": "string"
                        },
                        "size_in_bytes": {
                          "description": "Size of the digital product file in bytes",
                          "type": "integer"
                        },
                        "url": {
                          "description": "URL to access the digital product file",
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "title": "DigitalProductFile",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Digital product file"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "view_product"
            ]
          }
        ],
        "summary": "Show a digital product file",
        "tags": [
          "Products"
        ]
      },
      "delete": {
        "callbacks": {},
        "description": "Deletes a digital product file.",
        "operationId": "ScalevApiWeb.ProductController.delete_digital_product_file",
        "parameters": [
          {
            "description": "Variant ID",
            "in": "path",
            "name": "variant_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Digital ProductFile ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 200,
                      "type": "integer"
                    },
                    "data": {
                      "properties": {
                        "content_type": {
                          "description": "MIME type of the digital product file",
                          "type": "string"
                        },
                        "id": {
                          "description": "Digital product file primary key",
                          "type": "integer"
                        },
                        "name": {
                          "description": "File name of the digital product file",
                          "type": "string"
                        },
                        "size_in_bytes": {
                          "description": "Size of the digital product file in bytes",
                          "type": "integer"
                        },
                        "url": {
                          "description": "URL to access the digital product file",
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "title": "DigitalProductFile",
                      "type": "object"
                    },
                    "status": {
                      "example": "Success",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Digital product file deleted successfully"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 400,
                      "type": "integer"
                    },
                    "error": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "additionalProperties": true,
                          "description": "Validation errors from changeset",
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "example": "Bad Request",
                      "type": "string"
                    }
                  },
                  "title": "BadRequestError",
                  "type": "object"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Unauthorized",
                      "type": "string"
                    }
                  },
                  "title": "UnauthorizedError",
                  "type": "object"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 403,
                      "type": "integer"
                    },
                    "status": {
                      "example": "Forbidden",
                      "type": "string"
                    }
                  },
                  "title": "ForbiddenError",
                  "type": "object"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 404,
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "status": {
                      "example": "Not Found",
                      "type": "string"
                    }
                  },
                  "title": "NotFoundError",
                  "type": "object"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerApiKey": [],
            "oauth2": [
              "edit_product"
            ]
          }
        ],
        "summary": "Delete a digital product file",
        "tags": [
          "Products"
        ]
      }
    }
  },
  "security": [
    {
      "oauth2": []
    },
    {
      "bearerApiKey": []
    }
  ],
  "servers": [
    {
      "url": "https://api.scalev.id",
      "variables": {}
    }
  ],
  "tags": []
}